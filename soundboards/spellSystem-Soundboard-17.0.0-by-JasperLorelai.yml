variables:
  Sound:
    type: playerstring
  Menu:
    type: playerstring
  Pitch:
    type: player
  Volume:
    type: player
  PitchIsPreset:
    type: playerstring
  PitchPreset:
    type: player
sb-anchor-menu:
  <<: &a2
    spell-class: .MenuSpell
    helper-spell: true
    tags:
      - NotSilenceable
    delay: 1
    stay-open-non-option: true
  enabled: false
sb-anchor-dummy:
  <<: &a1
    spell-class: .instant.DummySpell
    helper-spell: true
    tags:
      - NotSilenceable
  enabled: false
sb-anchor-command:
  <<: &a3
    spell-class: .ExternalCommandSpell
    helper-spell: true
    tags:
      - NotSilenceable
    execute-on-console-instead: true
    do-variable-replacement: true
  enabled: false
sb-dummy:
  spell-class: .instant.DummySpell
  helper-spell: true
  tags:
    - NotSilenceable
sb-main:
  spell-class: .MultiSpell
  permission-name: soundboard
  tags:
    - NotSilenceable
  incantations:
    - /soundboard
    - /sounds
    - /sb
  always-granted: true
  variable-mods-cast:
    - Pitch =1
    - Volume =1
    - Sound =Empty
    - Menu =Main
    - PitchIsPreset =false
  spells:
    - DELAY 1
    - sb
sb-showsound:
  <<: *a1
  str-cast-self: <aqua>Open for (%var:Sound%) <hover:show_text:'<dark_aqua>Click'><click:run_command:'/c sb-prepare-sound %var:Sound% %var:Menu%'><dark_aqua>[<aqua>Click Here</aqua>]
sb-configure:
  <<: *a2
  title: <blue>Modify Pitch or Volume & Play
  modifiers:
    - always cast sb-showsound(mode=full)
  options:
    Pitch1:
      slot: 0
      item:
        type: lime_wool
        name: <gold>Modify Pitch by .5
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Left-click <yellow>to increase
          - <gold>Right-click <yellow>to decrease
      spell: sb-configure-amount(args=[0.5, 0])
      spell-right: sb-configure-amount(args=[-0.5, 0])
      stay-open: true
      modifiers:
        - variable Pitch>1.5 deny
        - variable Pitch<.5 deny
    Pitch1Fail1:
      slot: 0
      item:
        type: gray_wool
        name: <gold>Pitch is over 1.5
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Right-click <yellow>to decrease
      spell: sb-dummy
      spell-right: sb-configure-amount(args=[-0.5, 0])
      stay-open: true
      modifiers:
        - variable Pitch>1.5 require
    Pitch1Fail2:
      slot: 0
      item:
        type: gray_wool
        name: <gold>Pitch is under 0.5
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Left-click <yellow>to increase
      spell: sb-configure-amount(args=[0.5, 0])
      spell-right: sb-dummy
      stay-open: true
      modifiers:
        - variable Pitch<0.5 require
    Pitch2:
      slot: 9
      item:
        type: lime_wool
        name: <gold>Modify Pitch by 0.1
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Left-click <yellow>to increase
          - <gold>Right-click <yellow>to decrease
      spell: sb-configure-amount(args=[0.1, 0])
      spell-right: sb-configure-amount(args=[-0.1, 0])
      stay-open: true
      modifiers:
        - variable Pitch>1.9 deny
        - variable Pitch<.1 deny
    Pitch2Fail1:
      slot: 9
      item:
        type: gray_wool
        name: <gold>Pitch is over 1.9
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Right-click <yellow>to decrease
      spell: sb-dummy
      spell-right: sb-configure-amount(args=[-0.1, 0])
      stay-open: true
      modifiers:
        - variable Pitch>1.9 require
    Pitch2Fail2:
      slot: 9
      item:
        type: gray_wool
        name: <gold>Pitch is under 0.1
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Left-click <yellow>to increase
      spell: sb-configure-amount(args=[0.1, 0])
      spell-right: sb-dummy
      stay-open: true
      modifiers:
        - variable Pitch<0.1 require
    Pitch3:
      slot: 18
      item:
        type: lime_wool
        name: <gold>Modify Pitch by 0.05
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Left-click <yellow>to increase
          - <gold>Right-click <yellow>to decrease
      spell: sb-configure-amount(args=[0.05, 0])
      spell-right: sb-configure-amount(args=[-0.05, 0])
      stay-open: true
      modifiers:
        - variable Pitch>1.95 deny
        - variable Pitch<.05 deny
    Pitch3Fail1:
      slot: 18
      item:
        type: gray_wool
        name: <gold>Pitch is over 1.95
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Right-click <yellow>to decrease
      spell: sb-dummy
      spell-right: sb-configure-amount(args=[-0.05, 0])
      stay-open: true
      modifiers:
        - variable Pitch>1.9 require
    Pitch3Fail2:
      slot: 18
      item:
        type: gray_wool
        name: <gold>Pitch is under 0.05
        lore:
          - "<yellow>Current Pitch<white>: <gold>%var:Pitch:2%"
          - <gold>Left-click <yellow>to increase
      spell: sb-configure-amount(args=[0.05, 0])
      spell-right: sb-dummy
      stay-open: true
      modifiers:
        - variable Pitch<0.05 require
    Volume1:
      slot: 8
      item:
        type: lime_wool
        name: <gold>Modify Volume by 100
        lore:
          - "<yellow>Current Volume<white>: <gold>%var:Volume:2%"
          - <gold>Left-click <yellow>to increase
          - <gold>Right-click <yellow>to decrease
      spell: sb-configure-amount(args=[0, 100])
      spell-right: sb-configure-amount(args=[0, -100])
      stay-open: true
      modifiers:
        - variable Volume>99.99 require
    Volume1Fail:
      slot: 8
      item:
        type: gray_wool
        name: <gold>Volume is under 100
        lore:
          - "<yellow>Current Volume<white>: <gold>%var:Volume:2%"
          - <gold>Left-click <yellow>to increase
      spell: sb-configure-amount(args=[0, 100])
      spell-right: sb-dummy
      stay-open: true
      modifiers:
        - variable Volume>99.99 deny
    Volume2:
      slot: 17
      item:
        type: lime_wool
        name: <gold>Modify Volume by 1
        lore:
          - "<yellow>Current Volume<white>: <gold>%var:Volume:2%"
          - <gold>Left-click <yellow>to increase
          - <gold>Right-click <yellow>to decrease
      spell: sb-configure-amount(args=[0, 1])
      spell-right: sb-configure-amount(args=[0, -1])
      stay-open: true
      modifiers:
        - variable Volume>0.99 require
    Volume2Fail:
      slot: 17
      item:
        type: gray_wool
        name: <gold>Volume is under 1
        lore:
          - "<yellow>Current Volume<white>: <gold>%var:Volume:2%"
          - <gold>Left-click <yellow>to increase
      spell: sb-configure-amount(args=[0, 1])
      spell-right: sb-dummy
      stay-open: true
      modifiers:
        - variable Volume>0.99 deny
    Volume3:
      slot: 26
      item:
        type: lime_wool
        name: <gold>Modify Volume by 0.5
        lore:
          - "<yellow>Current Volume<white>: <gold>%var:Volume:2%"
          - <gold>Left-click <yellow>to increase
          - <gold>Right-click <yellow>to decrease
      spell: sb-configure-amount(args=[0, 0.5])
      spell-right: sb-configure-amount(args=[0, -0.5])
      stay-open: true
      modifiers:
        - variable Volume>0 require
    Volume3Fail:
      slot: 26
      item:
        type: gray_wool
        name: <gold>Volume is under 0.5
        lore:
          - "<yellow>Current Volume<white>: <gold>%var:Volume:2%"
          - <gold>Left-click <yellow>to increase
      spell: sb-configure-amount(args=[0, 0.5])
      spell-right: sb-dummy
      stay-open: true
      modifiers:
        - variable Volume>0 deny
    PitchPresetRemove:
      slot: 3
      item:
        type: diamond
        name: <gold>Pitch Preset Remove
        lore:
          - <yellow>Note pitch (music semitones)
          - "<yellow>Noteblock Clicks<white>: %var:PitchPreset:0%"
      spell: sb-pitch-preset-remove
      stay-open: true
    PitchPreset:
      slot: 4
      item:
        type: note_block
        name: <gold>Pitch Presets
        lore:
          - <yellow>Note pitch (music semitones)
          - "<yellow>Noteblock Clicks<white>: %var:PitchPreset:0%"
      spell: sb-pitch-presets
    PitchPresetAdd:
      slot: 5
      item:
        type: diamond
        name: <gold>Pitch Preset Add
        lore:
          - <yellow>Note pitch (music semitones)
          - "<yellow>Noteblock Clicks<white>: %var:PitchPreset:0%"
      spell: sb-pitch-preset-add
      stay-open: true
    PlaySound:
      slot: 12
      item:
        type: enchanted_book
        name: <gold>Play
        lore:
          - "<yellow>Sound<white>: <gold>%var:Sound%"
          - "<yellow>Pitch<white>: <gold>%var:Pitch:2%"
          - "<yellow>Volume<white>: <gold>%var:Volume:1%"
      spell: sb-play
      stay-open: true
      modifiers:
        - variablestringequals PitchIsPreset:false require
    PlaySoundPitchPreset:
      slot: 12
      item:
        type: enchanted_book
        name: <gold>Play
        lore:
          - "<yellow>Sound<white>: <gold>%var:Sound%"
          - "<yellow>Pitch<white>: <gold>%var:Pitch:5%"
          - "<yellow>Volume<white>: <gold>%var:Volume:1%"
      spell: sb-play
      stay-open: true
      modifiers:
        - variablestringequals PitchIsPreset:true require
    StopSound:
      slot: 13
      item: 'barrier{name: "<gold>Stop Sound"}'
      spell: sb-stop
      stay-open: true
    Show:
      slot: 14
      item: 'paper{name: "<gold>Show Configuration In Chat"}'
      spell: sb-show-check(mode=full)
    Back:
      slot: 22
      item: 'book{name: "<gold>Back"}'
      spell: sb-back-edit
sb-configure-amount:
  <<: *a1
  variable-mods-cast:
    - PitchIsPreset =false
    - Pitch +%arg:1:0%
    - Volume +%arg:2:0%
sb-back-edit:
  <<: *a1
  modifiers:
    - variablestringequals Menu:ambient cast sb-ambient
    - variablestringequals Menu:music cast sb-music
    - variablestringequals Menu:music_disc cast sb-music_disc
    - variablestringequals Menu:particle cast sb-particle
    - variablestringequals Menu:weather cast sb-weather
    - variablestringequals Menu:ambient_basalt_deltas cast sb-ambient-basalt_deltas
    - variablestringequals Menu:ambient_crimson_forest cast sb-ambient-crimson_forest
    - variablestringequals Menu:ambient_nether_wastes cast sb-ambient-nether_wastes
    - variablestringequals Menu:ambient_soul_sand_valley cast sb-ambient-soul_sand_valley
    - variablestringequals Menu:ambient_underwater cast sb-ambient-underwater
    - variablestringequals Menu:ambient_warped_forest cast sb-ambient-warped_forest
    - variablestringequals Menu:ambient_underwater_loop cast sb-ambient-underwater-loop
    - variablestringequals Menu:ambient_underwater_loop_additions cast sb-ambient-underwater-loop-additions
    - variablestringequals Menu:block_amethyst_block cast sb-block-amethyst_block
    - variablestringequals Menu:block_amethyst_cluster cast sb-block-amethyst_cluster
    - variablestringequals Menu:block_ancient_debris cast sb-block-ancient_debris
    - variablestringequals Menu:block_anvil cast sb-block-anvil
    - variablestringequals Menu:block_azalea cast sb-block-azalea
    - variablestringequals Menu:block_azalea_leaves cast sb-block-azalea_leaves
    - variablestringequals Menu:block_bamboo cast sb-block-bamboo
    - variablestringequals Menu:block_bamboo_sapling cast sb-block-bamboo_sapling
    - variablestringequals Menu:block_bamboo_wood cast sb-block-bamboo_wood
    - variablestringequals Menu:block_bamboo_wood_button cast sb-block-bamboo_wood_button
    - variablestringequals Menu:block_bamboo_wood_door cast sb-block-bamboo_wood_door
    - variablestringequals Menu:block_bamboo_wood_fence_gate cast sb-block-bamboo_wood_fence_gate
    - variablestringequals Menu:block_bamboo_wood_hanging_sign cast sb-block-bamboo_wood_hanging_sign
    - variablestringequals Menu:block_bamboo_wood_pressure_plate cast sb-block-bamboo_wood_pressure_plate
    - variablestringequals Menu:block_bamboo_wood_trapdoor cast sb-block-bamboo_wood_trapdoor
    - variablestringequals Menu:block_barrel cast sb-block-barrel
    - variablestringequals Menu:block_basalt cast sb-block-basalt
    - variablestringequals Menu:block_beacon cast sb-block-beacon
    - variablestringequals Menu:block_beehive cast sb-block-beehive
    - variablestringequals Menu:block_bell cast sb-block-bell
    - variablestringequals Menu:block_big_dripleaf cast sb-block-big_dripleaf
    - variablestringequals Menu:block_blastfurnace cast sb-block-blastfurnace
    - variablestringequals Menu:block_bone_block cast sb-block-bone_block
    - variablestringequals Menu:block_brewing_stand cast sb-block-brewing_stand
    - variablestringequals Menu:block_bubble_column cast sb-block-bubble_column
    - variablestringequals Menu:block_cactus_flower cast sb-block-cactus_flower
    - variablestringequals Menu:block_cake cast sb-block-cake
    - variablestringequals Menu:block_calcite cast sb-block-calcite
    - variablestringequals Menu:block_campfire cast sb-block-campfire
    - variablestringequals Menu:block_candle cast sb-block-candle
    - variablestringequals Menu:block_cave_vines cast sb-block-cave_vines
    - variablestringequals Menu:block_chain cast sb-block-chain
    - variablestringequals Menu:block_cherry_leaves cast sb-block-cherry_leaves
    - variablestringequals Menu:block_cherry_sapling cast sb-block-cherry_sapling
    - variablestringequals Menu:block_cherry_wood cast sb-block-cherry_wood
    - variablestringequals Menu:block_cherry_wood_button cast sb-block-cherry_wood_button
    - variablestringequals Menu:block_cherry_wood_door cast sb-block-cherry_wood_door
    - variablestringequals Menu:block_cherry_wood_fence_gate cast sb-block-cherry_wood_fence_gate
    - variablestringequals Menu:block_cherry_wood_hanging_sign cast sb-block-cherry_wood_hanging_sign
    - variablestringequals Menu:block_cherry_wood_pressure_plate cast sb-block-cherry_wood_pressure_plate
    - variablestringequals Menu:block_cherry_wood_trapdoor cast sb-block-cherry_wood_trapdoor
    - variablestringequals Menu:block_chest cast sb-block-chest
    - variablestringequals Menu:block_chiseled_bookshelf cast sb-block-chiseled_bookshelf
    - variablestringequals Menu:block_chorus_flower cast sb-block-chorus_flower
    - variablestringequals Menu:block_cobweb cast sb-block-cobweb
    - variablestringequals Menu:block_comparator cast sb-block-comparator
    - variablestringequals Menu:block_composter cast sb-block-composter
    - variablestringequals Menu:block_conduit cast sb-block-conduit
    - variablestringequals Menu:block_copper cast sb-block-copper
    - variablestringequals Menu:block_copper_bulb cast sb-block-copper_bulb
    - variablestringequals Menu:block_copper_door cast sb-block-copper_door
    - variablestringequals Menu:block_copper_grate cast sb-block-copper_grate
    - variablestringequals Menu:block_copper_trapdoor cast sb-block-copper_trapdoor
    - variablestringequals Menu:block_coral_block cast sb-block-coral_block
    - variablestringequals Menu:block_crafter cast sb-block-crafter
    - variablestringequals Menu:block_creaking_heart cast sb-block-creaking_heart
    - variablestringequals Menu:block_crop cast sb-block-crop
    - variablestringequals Menu:block_deadbush cast sb-block-deadbush
    - variablestringequals Menu:block_decorated_pot cast sb-block-decorated_pot
    - variablestringequals Menu:block_deepslate cast sb-block-deepslate
    - variablestringequals Menu:block_deepslate_bricks cast sb-block-deepslate_bricks
    - variablestringequals Menu:block_deepslate_tiles cast sb-block-deepslate_tiles
    - variablestringequals Menu:block_dispenser cast sb-block-dispenser
    - variablestringequals Menu:block_dripstone_block cast sb-block-dripstone_block
    - variablestringequals Menu:block_enchantment_table cast sb-block-enchantment_table
    - variablestringequals Menu:block_end_gateway cast sb-block-end_gateway
    - variablestringequals Menu:block_end_portal cast sb-block-end_portal
    - variablestringequals Menu:block_end_portal_frame cast sb-block-end_portal_frame
    - variablestringequals Menu:block_ender_chest cast sb-block-ender_chest
    - variablestringequals Menu:block_eyeblossom cast sb-block-eyeblossom
    - variablestringequals Menu:block_fence_gate cast sb-block-fence_gate
    - variablestringequals Menu:block_fire cast sb-block-fire
    - variablestringequals Menu:block_firefly_bush cast sb-block-firefly_bush
    - variablestringequals Menu:block_flowering_azalea cast sb-block-flowering_azalea
    - variablestringequals Menu:block_froglight cast sb-block-froglight
    - variablestringequals Menu:block_frogspawn cast sb-block-frogspawn
    - variablestringequals Menu:block_fungus cast sb-block-fungus
    - variablestringequals Menu:block_furnace cast sb-block-furnace
    - variablestringequals Menu:block_gilded_blackstone cast sb-block-gilded_blackstone
    - variablestringequals Menu:block_glass cast sb-block-glass
    - variablestringequals Menu:block_grass cast sb-block-grass
    - variablestringequals Menu:block_gravel cast sb-block-gravel
    - variablestringequals Menu:block_grindstone cast sb-block-grindstone
    - variablestringequals Menu:block_growing_plant cast sb-block-growing_plant
    - variablestringequals Menu:block_hanging_roots cast sb-block-hanging_roots
    - variablestringequals Menu:block_hanging_sign cast sb-block-hanging_sign
    - variablestringequals Menu:block_heavy_core cast sb-block-heavy_core
    - variablestringequals Menu:block_honey_block cast sb-block-honey_block
    - variablestringequals Menu:block_iron cast sb-block-iron
    - variablestringequals Menu:block_iron_door cast sb-block-iron_door
    - variablestringequals Menu:block_iron_trapdoor cast sb-block-iron_trapdoor
    - variablestringequals Menu:block_ladder cast sb-block-ladder
    - variablestringequals Menu:block_lantern cast sb-block-lantern
    - variablestringequals Menu:block_large_amethyst_bud cast sb-block-large_amethyst_bud
    - variablestringequals Menu:block_lava cast sb-block-lava
    - variablestringequals Menu:block_leaf_litter cast sb-block-leaf_litter
    - variablestringequals Menu:block_lever cast sb-block-lever
    - variablestringequals Menu:block_lily_pad cast sb-block-lily_pad
    - variablestringequals Menu:block_lodestone cast sb-block-lodestone
    - variablestringequals Menu:block_mangrove_roots cast sb-block-mangrove_roots
    - variablestringequals Menu:block_medium_amethyst_bud cast sb-block-medium_amethyst_bud
    - variablestringequals Menu:block_metal cast sb-block-metal
    - variablestringequals Menu:block_metal_pressure_plate cast sb-block-metal_pressure_plate
    - variablestringequals Menu:block_moss cast sb-block-moss
    - variablestringequals Menu:block_moss_carpet cast sb-block-moss_carpet
    - variablestringequals Menu:block_mud cast sb-block-mud
    - variablestringequals Menu:block_mud_bricks cast sb-block-mud_bricks
    - variablestringequals Menu:block_muddy_mangrove_roots cast sb-block-muddy_mangrove_roots
    - variablestringequals Menu:block_nether_bricks cast sb-block-nether_bricks
    - variablestringequals Menu:block_nether_gold_ore cast sb-block-nether_gold_ore
    - variablestringequals Menu:block_nether_ore cast sb-block-nether_ore
    - variablestringequals Menu:block_nether_sprouts cast sb-block-nether_sprouts
    - variablestringequals Menu:block_nether_wart cast sb-block-nether_wart
    - variablestringequals Menu:block_nether_wood cast sb-block-nether_wood
    - variablestringequals Menu:block_nether_wood_button cast sb-block-nether_wood_button
    - variablestringequals Menu:block_nether_wood_door cast sb-block-nether_wood_door
    - variablestringequals Menu:block_nether_wood_fence_gate cast sb-block-nether_wood_fence_gate
    - variablestringequals Menu:block_nether_wood_hanging_sign cast sb-block-nether_wood_hanging_sign
    - variablestringequals Menu:block_nether_wood_pressure_plate cast sb-block-nether_wood_pressure_plate
    - variablestringequals Menu:block_nether_wood_trapdoor cast sb-block-nether_wood_trapdoor
    - variablestringequals Menu:block_netherite_block cast sb-block-netherite_block
    - variablestringequals Menu:block_netherrack cast sb-block-netherrack
    - variablestringequals Menu:block_note_block cast sb-block-note_block
    - variablestringequals Menu:block_nylium cast sb-block-nylium
    - variablestringequals Menu:block_packed_mud cast sb-block-packed_mud
    - variablestringequals Menu:block_pale_hanging_moss cast sb-block-pale_hanging_moss
    - variablestringequals Menu:block_pink_petals cast sb-block-pink_petals
    - variablestringequals Menu:block_piston cast sb-block-piston
    - variablestringequals Menu:block_pointed_dripstone cast sb-block-pointed_dripstone
    - variablestringequals Menu:block_polished_deepslate cast sb-block-polished_deepslate
    - variablestringequals Menu:block_polished_tuff cast sb-block-polished_tuff
    - variablestringequals Menu:block_portal cast sb-block-portal
    - variablestringequals Menu:block_powder_snow cast sb-block-powder_snow
    - variablestringequals Menu:block_pumpkin cast sb-block-pumpkin
    - variablestringequals Menu:block_redstone_torch cast sb-block-redstone_torch
    - variablestringequals Menu:block_resin cast sb-block-resin
    - variablestringequals Menu:block_resin_bricks cast sb-block-resin_bricks
    - variablestringequals Menu:block_respawn_anchor cast sb-block-respawn_anchor
    - variablestringequals Menu:block_rooted_dirt cast sb-block-rooted_dirt
    - variablestringequals Menu:block_roots cast sb-block-roots
    - variablestringequals Menu:block_sand cast sb-block-sand
    - variablestringequals Menu:block_scaffolding cast sb-block-scaffolding
    - variablestringequals Menu:block_sculk cast sb-block-sculk
    - variablestringequals Menu:block_sculk_catalyst cast sb-block-sculk_catalyst
    - variablestringequals Menu:block_sculk_sensor cast sb-block-sculk_sensor
    - variablestringequals Menu:block_sculk_shrieker cast sb-block-sculk_shrieker
    - variablestringequals Menu:block_sculk_vein cast sb-block-sculk_vein
    - variablestringequals Menu:block_shroomlight cast sb-block-shroomlight
    - variablestringequals Menu:block_shulker_box cast sb-block-shulker_box
    - variablestringequals Menu:block_sign cast sb-block-sign
    - variablestringequals Menu:block_slime_block cast sb-block-slime_block
    - variablestringequals Menu:block_small_amethyst_bud cast sb-block-small_amethyst_bud
    - variablestringequals Menu:block_small_dripleaf cast sb-block-small_dripleaf
    - variablestringequals Menu:block_smithing_table cast sb-block-smithing_table
    - variablestringequals Menu:block_smoker cast sb-block-smoker
    - variablestringequals Menu:block_sniffer_egg cast sb-block-sniffer_egg
    - variablestringequals Menu:block_snow cast sb-block-snow
    - variablestringequals Menu:block_soul_sand cast sb-block-soul_sand
    - variablestringequals Menu:block_soul_soil cast sb-block-soul_soil
    - variablestringequals Menu:block_spawner cast sb-block-spawner
    - variablestringequals Menu:block_sponge cast sb-block-sponge
    - variablestringequals Menu:block_spore_blossom cast sb-block-spore_blossom
    - variablestringequals Menu:block_stem cast sb-block-stem
    - variablestringequals Menu:block_stone cast sb-block-stone
    - variablestringequals Menu:block_stone_button cast sb-block-stone_button
    - variablestringequals Menu:block_stone_pressure_plate cast sb-block-stone_pressure_plate
    - variablestringequals Menu:block_suspicious_gravel cast sb-block-suspicious_gravel
    - variablestringequals Menu:block_suspicious_sand cast sb-block-suspicious_sand
    - variablestringequals Menu:block_sweet_berry_bush cast sb-block-sweet_berry_bush
    - variablestringequals Menu:block_trial_spawner cast sb-block-trial_spawner
    - variablestringequals Menu:block_tripwire cast sb-block-tripwire
    - variablestringequals Menu:block_tuff cast sb-block-tuff
    - variablestringequals Menu:block_tuff_bricks cast sb-block-tuff_bricks
    - variablestringequals Menu:block_vault cast sb-block-vault
    - variablestringequals Menu:block_vine cast sb-block-vine
    - variablestringequals Menu:block_wart_block cast sb-block-wart_block
    - variablestringequals Menu:block_water cast sb-block-water
    - variablestringequals Menu:block_weeping_vines cast sb-block-weeping_vines
    - variablestringequals Menu:block_wet_grass cast sb-block-wet_grass
    - variablestringequals Menu:block_wet_sponge cast sb-block-wet_sponge
    - variablestringequals Menu:block_wood cast sb-block-wood
    - variablestringequals Menu:block_wooden_button cast sb-block-wooden_button
    - variablestringequals Menu:block_wooden_door cast sb-block-wooden_door
    - variablestringequals Menu:block_wooden_pressure_plate cast sb-block-wooden_pressure_plate
    - variablestringequals Menu:block_wooden_trapdoor cast sb-block-wooden_trapdoor
    - variablestringequals Menu:block_wool cast sb-block-wool
    - variablestringequals Menu:block_chiseled_bookshelf_insert cast sb-block-chiseled_bookshelf-insert
    - variablestringequals Menu:block_chiseled_bookshelf_pickup cast sb-block-chiseled_bookshelf-pickup
    - variablestringequals Menu:block_conduit_ambient cast sb-block-conduit-ambient
    - variablestringequals Menu:block_conduit_attack cast sb-block-conduit-attack
    - variablestringequals Menu:block_note_block_imitate cast sb-block-note_block-imitate
    - variablestringequals Menu:enchant_thorns cast sb-enchant-thorns
    - variablestringequals Menu:entity_allay cast sb-entity-allay
    - variablestringequals Menu:entity_armadillo cast sb-entity-armadillo
    - variablestringequals Menu:entity_armor_stand cast sb-entity-armor_stand
    - variablestringequals Menu:entity_arrow cast sb-entity-arrow
    - variablestringequals Menu:entity_axolotl cast sb-entity-axolotl
    - variablestringequals Menu:entity_bat cast sb-entity-bat
    - variablestringequals Menu:entity_bee cast sb-entity-bee
    - variablestringequals Menu:entity_blaze cast sb-entity-blaze
    - variablestringequals Menu:entity_boat cast sb-entity-boat
    - variablestringequals Menu:entity_bogged cast sb-entity-bogged
    - variablestringequals Menu:entity_breeze cast sb-entity-breeze
    - variablestringequals Menu:entity_camel cast sb-entity-camel
    - variablestringequals Menu:entity_cat cast sb-entity-cat
    - variablestringequals Menu:entity_chicken cast sb-entity-chicken
    - variablestringequals Menu:entity_cod cast sb-entity-cod
    - variablestringequals Menu:entity_cow cast sb-entity-cow
    - variablestringequals Menu:entity_creaking cast sb-entity-creaking
    - variablestringequals Menu:entity_creeper cast sb-entity-creeper
    - variablestringequals Menu:entity_dolphin cast sb-entity-dolphin
    - variablestringequals Menu:entity_donkey cast sb-entity-donkey
    - variablestringequals Menu:entity_dragon_fireball cast sb-entity-dragon_fireball
    - variablestringequals Menu:entity_drowned cast sb-entity-drowned
    - variablestringequals Menu:entity_egg cast sb-entity-egg
    - variablestringequals Menu:entity_elder_guardian cast sb-entity-elder_guardian
    - variablestringequals Menu:entity_ender_dragon cast sb-entity-ender_dragon
    - variablestringequals Menu:entity_ender_eye cast sb-entity-ender_eye
    - variablestringequals Menu:entity_ender_pearl cast sb-entity-ender_pearl
    - variablestringequals Menu:entity_enderman cast sb-entity-enderman
    - variablestringequals Menu:entity_endermite cast sb-entity-endermite
    - variablestringequals Menu:entity_evoker cast sb-entity-evoker
    - variablestringequals Menu:entity_evoker_fangs cast sb-entity-evoker_fangs
    - variablestringequals Menu:entity_experience_bottle cast sb-entity-experience_bottle
    - variablestringequals Menu:entity_experience_orb cast sb-entity-experience_orb
    - variablestringequals Menu:entity_firework_rocket cast sb-entity-firework_rocket
    - variablestringequals Menu:entity_fish cast sb-entity-fish
    - variablestringequals Menu:entity_fishing_bobber cast sb-entity-fishing_bobber
    - variablestringequals Menu:entity_fox cast sb-entity-fox
    - variablestringequals Menu:entity_frog cast sb-entity-frog
    - variablestringequals Menu:entity_generic cast sb-entity-generic
    - variablestringequals Menu:entity_ghast cast sb-entity-ghast
    - variablestringequals Menu:entity_glow_item_frame cast sb-entity-glow_item_frame
    - variablestringequals Menu:entity_glow_squid cast sb-entity-glow_squid
    - variablestringequals Menu:entity_goat cast sb-entity-goat
    - variablestringequals Menu:entity_guardian cast sb-entity-guardian
    - variablestringequals Menu:entity_hoglin cast sb-entity-hoglin
    - variablestringequals Menu:entity_horse cast sb-entity-horse
    - variablestringequals Menu:entity_hostile cast sb-entity-hostile
    - variablestringequals Menu:entity_husk cast sb-entity-husk
    - variablestringequals Menu:entity_illusioner cast sb-entity-illusioner
    - variablestringequals Menu:entity_iron_golem cast sb-entity-iron_golem
    - variablestringequals Menu:entity_item cast sb-entity-item
    - variablestringequals Menu:entity_item_frame cast sb-entity-item_frame
    - variablestringequals Menu:entity_leash_knot cast sb-entity-leash_knot
    - variablestringequals Menu:entity_lightning_bolt cast sb-entity-lightning_bolt
    - variablestringequals Menu:entity_lingering_potion cast sb-entity-lingering_potion
    - variablestringequals Menu:entity_llama cast sb-entity-llama
    - variablestringequals Menu:entity_magma_cube cast sb-entity-magma_cube
    - variablestringequals Menu:entity_minecart cast sb-entity-minecart
    - variablestringequals Menu:entity_mooshroom cast sb-entity-mooshroom
    - variablestringequals Menu:entity_mule cast sb-entity-mule
    - variablestringequals Menu:entity_ocelot cast sb-entity-ocelot
    - variablestringequals Menu:entity_painting cast sb-entity-painting
    - variablestringequals Menu:entity_panda cast sb-entity-panda
    - variablestringequals Menu:entity_parrot cast sb-entity-parrot
    - variablestringequals Menu:entity_phantom cast sb-entity-phantom
    - variablestringequals Menu:entity_pig cast sb-entity-pig
    - variablestringequals Menu:entity_piglin cast sb-entity-piglin
    - variablestringequals Menu:entity_piglin_brute cast sb-entity-piglin_brute
    - variablestringequals Menu:entity_pillager cast sb-entity-pillager
    - variablestringequals Menu:entity_player cast sb-entity-player
    - variablestringequals Menu:entity_polar_bear cast sb-entity-polar_bear
    - variablestringequals Menu:entity_puffer_fish cast sb-entity-puffer_fish
    - variablestringequals Menu:entity_rabbit cast sb-entity-rabbit
    - variablestringequals Menu:entity_ravager cast sb-entity-ravager
    - variablestringequals Menu:entity_salmon cast sb-entity-salmon
    - variablestringequals Menu:entity_sheep cast sb-entity-sheep
    - variablestringequals Menu:entity_shulker cast sb-entity-shulker
    - variablestringequals Menu:entity_shulker_bullet cast sb-entity-shulker_bullet
    - variablestringequals Menu:entity_silverfish cast sb-entity-silverfish
    - variablestringequals Menu:entity_skeleton cast sb-entity-skeleton
    - variablestringequals Menu:entity_skeleton_horse cast sb-entity-skeleton_horse
    - variablestringequals Menu:entity_slime cast sb-entity-slime
    - variablestringequals Menu:entity_sniffer cast sb-entity-sniffer
    - variablestringequals Menu:entity_snow_golem cast sb-entity-snow_golem
    - variablestringequals Menu:entity_snowball cast sb-entity-snowball
    - variablestringequals Menu:entity_spider cast sb-entity-spider
    - variablestringequals Menu:entity_splash_potion cast sb-entity-splash_potion
    - variablestringequals Menu:entity_squid cast sb-entity-squid
    - variablestringequals Menu:entity_stray cast sb-entity-stray
    - variablestringequals Menu:entity_strider cast sb-entity-strider
    - variablestringequals Menu:entity_tadpole cast sb-entity-tadpole
    - variablestringequals Menu:entity_tnt cast sb-entity-tnt
    - variablestringequals Menu:entity_tropical_fish cast sb-entity-tropical_fish
    - variablestringequals Menu:entity_turtle cast sb-entity-turtle
    - variablestringequals Menu:entity_vex cast sb-entity-vex
    - variablestringequals Menu:entity_villager cast sb-entity-villager
    - variablestringequals Menu:entity_vindicator cast sb-entity-vindicator
    - variablestringequals Menu:entity_wandering_trader cast sb-entity-wandering_trader
    - variablestringequals Menu:entity_warden cast sb-entity-warden
    - variablestringequals Menu:entity_wind_charge cast sb-entity-wind_charge
    - variablestringequals Menu:entity_witch cast sb-entity-witch
    - variablestringequals Menu:entity_wither cast sb-entity-wither
    - variablestringequals Menu:entity_wither_skeleton cast sb-entity-wither_skeleton
    - variablestringequals Menu:entity_wolf cast sb-entity-wolf
    - variablestringequals Menu:entity_wolf_angry cast sb-entity-wolf_angry
    - variablestringequals Menu:entity_wolf_big cast sb-entity-wolf_big
    - variablestringequals Menu:entity_wolf_cute cast sb-entity-wolf_cute
    - variablestringequals Menu:entity_wolf_grumpy cast sb-entity-wolf_grumpy
    - variablestringequals Menu:entity_wolf_puglin cast sb-entity-wolf_puglin
    - variablestringequals Menu:entity_wolf_sad cast sb-entity-wolf_sad
    - variablestringequals Menu:entity_zoglin cast sb-entity-zoglin
    - variablestringequals Menu:entity_zombie cast sb-entity-zombie
    - variablestringequals Menu:entity_zombie_horse cast sb-entity-zombie_horse
    - variablestringequals Menu:entity_zombie_villager cast sb-entity-zombie_villager
    - variablestringequals Menu:entity_zombified_piglin cast sb-entity-zombified_piglin
    - variablestringequals Menu:entity_goat_screaming cast sb-entity-goat-screaming
    - variablestringequals Menu:entity_minecart_inside cast sb-entity-minecart-inside
    - variablestringequals Menu:entity_parrot_imitate cast sb-entity-parrot-imitate
    - variablestringequals Menu:entity_player_attack cast sb-entity-player-attack
    - variablestringequals Menu:entity_player_splash cast sb-entity-player-splash
    - variablestringequals Menu:event_mob_effect cast sb-event-mob_effect
    - variablestringequals Menu:event_raid cast sb-event-raid
    - variablestringequals Menu:item_armor cast sb-item-armor
    - variablestringequals Menu:item_axe cast sb-item-axe
    - variablestringequals Menu:item_bone_meal cast sb-item-bone_meal
    - variablestringequals Menu:item_book cast sb-item-book
    - variablestringequals Menu:item_bottle cast sb-item-bottle
    - variablestringequals Menu:item_bucket cast sb-item-bucket
    - variablestringequals Menu:item_bundle cast sb-item-bundle
    - variablestringequals Menu:item_chorus_fruit cast sb-item-chorus_fruit
    - variablestringequals Menu:item_crop cast sb-item-crop
    - variablestringequals Menu:item_crossbow cast sb-item-crossbow
    - variablestringequals Menu:item_dye cast sb-item-dye
    - variablestringequals Menu:item_elytra cast sb-item-elytra
    - variablestringequals Menu:item_firecharge cast sb-item-firecharge
    - variablestringequals Menu:item_flintandsteel cast sb-item-flintandsteel
    - variablestringequals Menu:item_glow_ink_sac cast sb-item-glow_ink_sac
    - variablestringequals Menu:item_hoe cast sb-item-hoe
    - variablestringequals Menu:item_honey_bottle cast sb-item-honey_bottle
    - variablestringequals Menu:item_honeycomb cast sb-item-honeycomb
    - variablestringequals Menu:item_ink_sac cast sb-item-ink_sac
    - variablestringequals Menu:item_lodestone_compass cast sb-item-lodestone_compass
    - variablestringequals Menu:item_mace cast sb-item-mace
    - variablestringequals Menu:item_nether_wart cast sb-item-nether_wart
    - variablestringequals Menu:item_ominous_bottle cast sb-item-ominous_bottle
    - variablestringequals Menu:item_shield cast sb-item-shield
    - variablestringequals Menu:item_shovel cast sb-item-shovel
    - variablestringequals Menu:item_spyglass cast sb-item-spyglass
    - variablestringequals Menu:item_totem cast sb-item-totem
    - variablestringequals Menu:item_trident cast sb-item-trident
    - variablestringequals Menu:item_wolf_armor cast sb-item-wolf_armor
    - variablestringequals Menu:item_brush_brushing cast sb-item-brush-brushing
    - variablestringequals Menu:item_brush_brushing_gravel cast sb-item-brush-brushing-gravel
    - variablestringequals Menu:item_brush_brushing_sand cast sb-item-brush-brushing-sand
    - variablestringequals Menu:item_goat_horn_sound cast sb-item-goat_horn-sound
    - variablestringequals Menu:music_nether cast sb-music-nether
    - variablestringequals Menu:music_overworld cast sb-music-overworld
    - variablestringequals Menu:ui_button cast sb-ui-button
    - variablestringequals Menu:ui_cartography_table cast sb-ui-cartography_table
    - variablestringequals Menu:ui_hud cast sb-ui-hud
    - variablestringequals Menu:ui_loom cast sb-ui-loom
    - variablestringequals Menu:ui_stonecutter cast sb-ui-stonecutter
    - variablestringequals Menu:ui_toast cast sb-ui-toast
    - variablestringequals Menu:weather_rain cast sb-weather-rain
sb-show-check:
  <<: *a1
  modifiers:
    - variable Pitch=1.0 castinstead sb-show-clean-pitch(mode=full)
    - variable Pitch=1.0 stop
    - variable Volume=1.0 castinstead sb-show-clean-volume(mode=full)
    - variable Volume=1.0 stop
    - variablestringequals PitchIsPreset:true castinstead sb-show-preset-pitch(mode=full)
    - variablestringequals PitchIsPreset:true stop
    - variable Pitch=0.0 castinstead sb-show-whole-pitch(mode=full)
    - variable Pitch=2.0 castinstead sb-show-whole-pitch(mode=full)
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% pitch: %var:Pitch:2% volume: %var:Volume:2%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-clean-pitch:
  <<: *a1
  modifiers:
    - variable Volume=1.0 castinstead sb-show-clean-all(mode=full)
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% volume: %var:Volume:2%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-clean-volume:
  <<: *a1
  modifiers:
    - variablestringequals PitchIsPreset:true castinstead sb-show-clean-volume-preset-pitch(mode=full)
    - variablestringequals PitchIsPreset:true stop
    - variable Pitch=0.0 castinstead sb-show-clean-volume-whole-pitch(mode=full)
    - variable Pitch=2.0 castinstead sb-show-clean-volume-whole-pitch(mode=full)
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% pitch: %var:Pitch:2%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-clean-all:
  <<: *a1
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-clean-volume-preset-pitch:
  <<: *a1
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% pitch: %var:Pitch:5%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-clean-volume-whole-pitch:
  <<: *a1
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% pitch: %var:Pitch:0%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-preset-pitch:
  <<: *a1
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% pitch: %var:Pitch:5% volume: %var:Volume:2%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-show-whole-pitch:
  <<: *a1
  str-cast-self: "<aqua>To show the sound configuration <hover:show_text:'<aqua>Click to show'><click:suggest_command:'sound: %var:Sound% pitch: %var:Pitch:0% volume: %var:Volume:2%'><dark_aqua>[<aqua>Click Here</aqua>]"
sb-play:
  <<: *a3
  command-to-execute:
    - minecraft:execute at %a run playsound minecraft:%var:Sound% master %a ~ ~ ~ %var:Volume:2% %var:Pitch:2%
sb-stop:
  <<: *a3
  command-to-execute:
    - minecraft:stopsound %a master %var:Sound%
sb-pitch-presets:
  <<: *a2
  title: <blue>Pitch Presets (Semitones)
  options:
    "0":
      slot: 0
      item:
        type: note_block
        name: <gold>F♯/G♭
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>0"
          - "<yellow>Pitch<white>: <gold>0.5"
      spell: sb-pitch-preset(args=[0.5, 0])
    "1":
      slot: 1
      item:
        type: note_block
        name: <gold>G
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>1"
          - "<yellow>Pitch<white>: <gold>2^(-11/12) ≈ 0.529732"
      spell: sb-pitch-preset(args=[0.529732, 1])
    "2":
      slot: 2
      item:
        type: note_block
        name: <gold>G♯/A♭
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>2"
          - "<yellow>Pitch<white>: <gold>2^(-10/12) ≈ 0.561231"
      spell: sb-pitch-preset(args=[0.561231, 2])
    "3":
      slot: 3
      item:
        type: note_block
        name: <gold>A
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>3"
          - "<yellow>Pitch<white>: <gold>2^(-9/12) ≈ 0.594604"
      spell: sb-pitch-preset(args=[0.594604, 3])
    "4":
      slot: 4
      item:
        type: note_block
        name: <gold>A♯/B♭
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>4"
          - "<yellow>Pitch<white>: <gold>2^(-8/12) ≈ 0.629961"
      spell: sb-pitch-preset(args=[0.629961, 4])
    "5":
      slot: 5
      item:
        type: note_block
        name: <gold>B
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>5"
          - "<yellow>Pitch<white>: <gold>2^(-7/12) ≈ 0.667420"
      spell: sb-pitch-preset(args=[0.667420, 5])
    "6":
      slot: 6
      item:
        type: note_block
        name: <gold>C
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>6"
          - "<yellow>Pitch<white>: <gold>2^(-6/12) ≈ 0.707107"
      spell: sb-pitch-preset(args=[0.707107, 6])
    "7":
      slot: 7
      item:
        type: note_block
        name: <gold>C♯/D♭
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>7"
          - "<yellow>Pitch<white>: <gold>2^(-5/12) ≈ 0.749154"
      spell: sb-pitch-preset(args=[0.749154, 7])
    "8":
      slot: 8
      item:
        type: note_block
        name: <gold>D
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>8"
          - "<yellow>Pitch<white>: <gold>2^(-4/12) ≈ 0.793701"
      spell: sb-pitch-preset(args=[0.793701, 8])
    "9":
      slot: 9
      item:
        type: note_block
        name: <gold>D♯/E♭
        lore:
          - "<yellow>Octave<gold>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>9"
          - "<yellow>Pitch<white>: <gold>2^(-3/12) ≈ 0.840896"
      spell: sb-pitch-preset(args=[0.840896, 9])
    "10":
      slot: 10
      item:
        type: note_block
        name: <gold>E
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>10"
          - "<yellow>Pitch<white>: <gold>2^(-2/12) ≈ 0.890899"
      spell: sb-pitch-preset(args=[0.890899, 10])
    "11":
      slot: 11
      item:
        type: note_block
        name: <gold>F
        lore:
          - "<yellow>Octave<white>: <gold>1"
          - "<yellow>Noteblock clicks<white>: <gold>11"
          - "<yellow>Pitch<white>: <gold>2^(-1/12) ≈ 0.943874"
      spell: sb-pitch-preset(args=[0.943874, 11])
    "12":
      slot: 12
      item:
        type: note_block
        name: <gold>F♯/G♭
        lore:
          - "<yellow>Octave<white>: <gold>1 <yellow>and</yellow> 2"
          - "<yellow>Noteblock clicks<white>: <gold>12"
          - "<yellow>Pitch<white>: <gold>1"
      spell: sb-pitch-preset(args=[1, 12])
    "13":
      slot: 13
      item:
        type: note_block
        name: <gold>G
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>13"
          - "<yellow>Pitch<white>: <yellow>2^(1/12) ≈ 1.059463"
      spell: sb-pitch-preset(args=[1.059463, 13])
    "14":
      slot: 14
      item:
        type: note_block
        name: <gold>G♯/A♭
        lore:
          - "<yellow>Octave<white>: <yellow>2"
          - "<yellow>Noteblock clicks<white>: <gold>14"
          - "<yellow>Pitch<white>: <gold>2^(2/12) ≈ 1.122462"
      spell: sb-pitch-preset(args=[1.189207, 15])
    "15":
      slot: 15
      item:
        type: note_block
        name: <gold>A
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>15"
          - "<yellow>Pitch<white>: <gold>2^(3/12) ≈ 1.189207"
      spell: sb-pitch-preset(args=[1.189207, 15])
    "16":
      slot: 16
      item:
        type: note_block
        name: <gold>A♯/B♭
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>16"
          - "<yellow>Pitch<white>: <gold>2^(4/12) ≈ 1.259921"
      spell: sb-pitch-preset(args=[1.259921, 16])
    "17":
      slot: 17
      item:
        type: note_block
        name: <gold>B
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>17"
          - "<yellow>Pitch<white>: <gold>2^(5/12) ≈ 1.334840"
      spell: sb-pitch-preset(args=[1.334840, 17])
    "18":
      slot: 18
      item:
        type: note_block
        name: <gold>C
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>18"
          - "<yellow>Pitch<white>: <gold>2^(6/12) ≈ 1.414214"
      spell: sb-pitch-preset(args=[1.414214, 18])
    "19":
      slot: 19
      item:
        type: note_block
        name: <gold>C♯/D♭
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>19"
          - "<yellow>Pitch<white>: <gold>2^(7/12) ≈ 1.498307"
      spell: sb-pitch-preset(args=[1.498307, 19])
    "20":
      slot: 20
      item:
        type: note_block
        name: <gold>D
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks&<white>: <gol>20"
          - "<yellow>Pitch<white>: <gold>2^(8/12) ≈ 1.587401"
      spell: sb-pitch-preset(args=[1.587401, 20])
    "21":
      slot: 21
      item:
        type: note_block
        name: <gold>D♯/E♭
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>21"
          - "<yellow>Pitch<white>: <gold>2^(9/12) ≈ 1.68179"
      spell: sb-pitch-preset(args=[1.681793, 21])
    "22":
      slot: 22
      item:
        type: note_block
        name: <gold>E
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>22"
          - "<yellow>Pitch<white>: <gold>2^(10/12) ≈ 1.781797"
      spell: sb-pitch-preset(args=[1.781797, 22])
    "23":
      slot: 23
      item:
        type: note_block
        name: <gold>F
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>23"
          - "<yellow>Pitch<white>: <gold>2^(11/12) ≈ 1.887749"
      spell: sb-pitch-preset(args=[1.887749, 23])
    "24":
      slot: 24
      item:
        type: note_block
        name: <gold>F♯/G♭
        lore:
          - "<yellow>Octave<white>: <gold>2"
          - "<yellow>Noteblock clicks<white>: <gold>24"
          - "<yellow>Pitch<white>: <gold>2"
      spell: sb-pitch-preset(args=[2, 24])
    Back:
      slot: 26
      item: 'book{name: "<gold>Back"}'
      spell: sb-configure
sb-pitch-preset-add:
  <<: *a3
  modifiers:
    - always variable PitchPreset;+1
    - variable PitchPreset=25 variable PitchPreset;=0
  command-to-execute:
    - c forcecast %a sb-pitch-preset%var:PitchPreset:0%
sb-pitch-preset-remove:
  <<: *a3
  modifiers:
    - variable PitchPreset=0 variable PitchPreset;=25
    - always variable PitchPreset;-1
  command-to-execute:
    - c forcecast %a sb-pitch-preset%var:PitchPreset:0%
sb-pitch-preset:
  spell-class: .MultiSpell
  helper-spell: true
  tags:
    - NotSilenceable
  variable-mods-cast:
    - PitchIsPreset =true
    - Pitch =%arg:1:0%
    - PitchPreset =%arg:2:0%
  spells:
    - sb-configure
sb-prepare-sound:
  spell-class: .instant.DummySpell
  helper-spell: true
  tags:
    - NotSilenceable
  variable-mods-cast:
    - Sound =%arg:1:0%
    - Menu =%arg:2:0%
  modifiers:
    - always cast sb-configure(delay=1)
sb:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Soundboard
  options:
    Ambient:
      spell: sb-ambient
      item: 'coal_ore{name: "<gold>Ambient Sounds"}'
      slot: 0
    Block:
      spell: sb-block1
      item: 'stone{name: "<gold>Block Sounds"}'
      slot: 1
    Enchant:
      spell: sb-enchant
      item: 'enchanted_book{name: "<gold>Enchant Sounds"}'
      slot: 2
    Entity:
      spell: sb-entity1
      item: 'ghast_spawn_egg{name: "<gold>Entity Sounds"}'
      slot: 3
    Event:
      spell: sb-event
      item: 'bell{name: "<gold>Event Sounds"}'
      slot: 4
    Item:
      spell: sb-item
      item: 'diamond_axe{name: "<gold>Item Sounds"}'
      slot: 5
    Music:
      spell: sb-music
      item: 'jukebox{name: "<gold>Music Sounds"}'
      slot: 6
    MusicDisc:
      spell: sb-music_disc
      item: 'music_disc_pigstep{name: "<gold>Music Disc Sounds"}'
      slot: 7
    Particle:
      spell: sb-particle
      item: 'blaze_powder{name: "<gold>Particle Sounds"}'
      slot: 8
    UI:
      spell: sb-ui
      item: 'name_tag{name: "<gold>UI Sounds"}'
      slot: 9
    Weather:
      spell: sb-weather
      item: 'snowball{name: "<gold>Weather Sounds"}'
      slot: 10
sb-ambient:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ambient <aqua>Sounds
  options:
    Sound_Cave:
      spell: sb-prepare-sound(args=["ambient.cave", "ambient"])
      item: 'coal_ore{name: "<yellow>Cave <gold>Sound", lore: ["<grey><italic>ambient.cave"]}'
      slot: 0
    BasaltDeltas:
      spell: sb-ambient-basalt_deltas
      item: 'basalt{name: "<gold>Basalt Deltas Sounds"}'
      slot: 1
    CrimsonForest:
      spell: sb-ambient-crimson_forest
      item: 'crimson_nylium{name: "<gold>Crimson Forest Sounds"}'
      slot: 2
    NetherWastes:
      spell: sb-ambient-nether_wastes
      item: 'netherrack{name: "<gold>Nether Wastes Sounds"}'
      slot: 3
    SoulSandValley:
      spell: sb-ambient-soul_sand_valley
      item: 'soul_sand{name: "<gold>Soul Sand Valley Sounds"}'
      slot: 4
    Underwater:
      spell: sb-ambient-underwater
      item: 'water_bucket{name: "<gold>Underwater Sounds"}'
      slot: 5
    WarpedForest:
      spell: sb-ambient-warped_forest
      item: 'warped_nylium{name: "<gold>Warped Forest Sounds"}'
      slot: 6
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-basalt_deltas:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Basalt Deltas <aqua>Sounds
  options:
    Sound_Additions:
      spell: sb-prepare-sound(args=["ambient.basalt_deltas.additions", "ambient_basalt_deltas"])
      item: 'basalt{name: "<yellow>Additions <gold>Sound", lore: ["<grey><italic>ambient.basalt_deltas.additions"]}'
      slot: 0
    Sound_Loop:
      spell: sb-prepare-sound(args=["ambient.basalt_deltas.loop", "ambient_basalt_deltas"])
      item: 'basalt{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>ambient.basalt_deltas.loop"]}'
      slot: 1
    Sound_Mood:
      spell: sb-prepare-sound(args=["ambient.basalt_deltas.mood", "ambient_basalt_deltas"])
      item: 'basalt{name: "<yellow>Mood <gold>Sound", lore: ["<grey><italic>ambient.basalt_deltas.mood"]}'
      slot: 2
    Button_Back:
      spell: sb-ambient
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-crimson_forest:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Crimson Forest <aqua>Sounds
  options:
    Sound_Additions:
      spell: sb-prepare-sound(args=["ambient.crimson_forest.additions", "ambient_crimson_forest"])
      item: 'crimson_nylium{name: "<yellow>Additions <gold>Sound", lore: ["<grey><italic>ambient.crimson_forest.additions"]}'
      slot: 0
    Sound_Loop:
      spell: sb-prepare-sound(args=["ambient.crimson_forest.loop", "ambient_crimson_forest"])
      item: 'crimson_nylium{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>ambient.crimson_forest.loop"]}'
      slot: 1
    Sound_Mood:
      spell: sb-prepare-sound(args=["ambient.crimson_forest.mood", "ambient_crimson_forest"])
      item: 'crimson_nylium{name: "<yellow>Mood <gold>Sound", lore: ["<grey><italic>ambient.crimson_forest.mood"]}'
      slot: 2
    Button_Back:
      spell: sb-ambient
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-nether_wastes:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wastes <aqua>Sounds
  options:
    Sound_Additions:
      spell: sb-prepare-sound(args=["ambient.nether_wastes.additions", "ambient_nether_wastes"])
      item: 'netherrack{name: "<yellow>Additions <gold>Sound", lore: ["<grey><italic>ambient.nether_wastes.additions"]}'
      slot: 0
    Sound_Loop:
      spell: sb-prepare-sound(args=["ambient.nether_wastes.loop", "ambient_nether_wastes"])
      item: 'netherrack{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>ambient.nether_wastes.loop"]}'
      slot: 1
    Sound_Mood:
      spell: sb-prepare-sound(args=["ambient.nether_wastes.mood", "ambient_nether_wastes"])
      item: 'netherrack{name: "<yellow>Mood <gold>Sound", lore: ["<grey><italic>ambient.nether_wastes.mood"]}'
      slot: 2
    Button_Back:
      spell: sb-ambient
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-soul_sand_valley:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Soul Sand Valley <aqua>Sounds
  options:
    Sound_Additions:
      spell: sb-prepare-sound(args=["ambient.soul_sand_valley.additions", "ambient_soul_sand_valley"])
      item: 'soul_sand{name: "<yellow>Additions <gold>Sound", lore: ["<grey><italic>ambient.soul_sand_valley.additions"]}'
      slot: 0
    Sound_Loop:
      spell: sb-prepare-sound(args=["ambient.soul_sand_valley.loop", "ambient_soul_sand_valley"])
      item: 'soul_sand{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>ambient.soul_sand_valley.loop"]}'
      slot: 1
    Sound_Mood:
      spell: sb-prepare-sound(args=["ambient.soul_sand_valley.mood", "ambient_soul_sand_valley"])
      item: 'soul_sand{name: "<yellow>Mood <gold>Sound", lore: ["<grey><italic>ambient.soul_sand_valley.mood"]}'
      slot: 2
    Button_Back:
      spell: sb-ambient
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-underwater:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Underwater <aqua>Sounds
  options:
    Sound_Enter:
      spell: sb-prepare-sound(args=["ambient.underwater.enter", "ambient_underwater"])
      item: 'water_bucket{name: "<yellow>Enter <gold>Sound", lore: ["<grey><italic>ambient.underwater.enter"]}'
      slot: 0
    Sound_Exit:
      spell: sb-prepare-sound(args=["ambient.underwater.exit", "ambient_underwater"])
      item: 'water_bucket{name: "<yellow>Exit <gold>Sound", lore: ["<grey><italic>ambient.underwater.exit"]}'
      slot: 1
    Sound_Loop:
      spell: sb-prepare-sound(args=["ambient.underwater.loop", "ambient_underwater"])
      item: 'water_bucket{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>ambient.underwater.loop"]}'
      slot: 2
    Loop:
      spell: sb-ambient-underwater-loop
      item: 'water_bucket{name: "<gold>Loop Sounds"}'
      slot: 3
    Button_Back:
      spell: sb-ambient
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-underwater-loop:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Loop <aqua>Sounds
  options:
    Sound_Additions:
      spell: sb-prepare-sound(args=["ambient.underwater.loop.additions", "ambient_underwater_loop"])
      item: 'water_bucket{name: "<yellow>Additions <gold>Sound", lore: ["<grey><italic>ambient.underwater.loop.additions"]}'
      slot: 0
    Additions:
      spell: sb-ambient-underwater-loop-additions
      item: 'water_bucket{name: "<gold>Additions Sounds"}'
      slot: 1
    Button_Back:
      spell: sb-ambient-underwater
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-underwater-loop-additions:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Additions <aqua>Sounds
  options:
    Sound_Rare:
      spell: sb-prepare-sound(args=["ambient.underwater.loop.additions.rare", "ambient_underwater_loop_additions"])
      item: 'water_bucket{name: "<yellow>Rare <gold>Sound", lore: ["<grey><italic>ambient.underwater.loop.additions.rare"]}'
      slot: 0
    Sound_UltraRare:
      spell: sb-prepare-sound(args=["ambient.underwater.loop.additions.ultra_rare", "ambient_underwater_loop_additions"])
      item: 'water_bucket{name: "<yellow>Ultra Rare <gold>Sound", lore: ["<grey><italic>ambient.underwater.loop.additions.ultra_rare"]}'
      slot: 1
    Button_Back:
      spell: sb-ambient-underwater-loop
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ambient-warped_forest:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Warped Forest <aqua>Sounds
  options:
    Sound_Additions:
      spell: sb-prepare-sound(args=["ambient.warped_forest.additions", "ambient_warped_forest"])
      item: 'warped_nylium{name: "<yellow>Additions <gold>Sound", lore: ["<grey><italic>ambient.warped_forest.additions"]}'
      slot: 0
    Sound_Loop:
      spell: sb-prepare-sound(args=["ambient.warped_forest.loop", "ambient_warped_forest"])
      item: 'warped_nylium{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>ambient.warped_forest.loop"]}'
      slot: 1
    Sound_Mood:
      spell: sb-prepare-sound(args=["ambient.warped_forest.mood", "ambient_warped_forest"])
      item: 'warped_nylium{name: "<yellow>Mood <gold>Sound", lore: ["<grey><italic>ambient.warped_forest.mood"]}'
      slot: 2
    Button_Back:
      spell: sb-ambient
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block1:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Block <aqua>Sounds
  options:
    AmethystBlock:
      spell: sb-block-amethyst_block
      item: 'amethyst_block{name: "<gold>Amethyst Block Sounds"}'
      slot: 0
    AmethystCluster:
      spell: sb-block-amethyst_cluster
      item: 'amethyst_cluster{name: "<gold>Amethyst Cluster Sounds"}'
      slot: 1
    AncientDebris:
      spell: sb-block-ancient_debris
      item: 'ancient_debris{name: "<gold>Ancient Debris Sounds"}'
      slot: 2
    Anvil:
      spell: sb-block-anvil
      item: 'anvil{name: "<gold>Anvil Sounds"}'
      slot: 3
    Azalea:
      spell: sb-block-azalea
      item: 'azalea{name: "<gold>Azalea Sounds"}'
      slot: 4
    AzaleaLeaves:
      spell: sb-block-azalea_leaves
      item: 'azalea_leaves{name: "<gold>Azalea Leaves Sounds"}'
      slot: 5
    Bamboo:
      spell: sb-block-bamboo
      item: 'bamboo{name: "<gold>Bamboo Sounds"}'
      slot: 6
    BambooSapling:
      spell: sb-block-bamboo_sapling
      item: 'bamboo{name: "<gold>Bamboo Sapling Sounds"}'
      slot: 7
    BambooWood:
      spell: sb-block-bamboo_wood
      item: 'bamboo_planks{name: "<gold>Bamboo Wood Sounds"}'
      slot: 8
    BambooWoodButton:
      spell: sb-block-bamboo_wood_button
      item: 'bamboo_button{name: "<gold>Bamboo Wood Button Sounds"}'
      slot: 9
    BambooWoodDoor:
      spell: sb-block-bamboo_wood_door
      item: 'bamboo_door{name: "<gold>Bamboo Wood Door Sounds"}'
      slot: 10
    BambooWoodFenceGate:
      spell: sb-block-bamboo_wood_fence_gate
      item: 'bamboo_fence_gate{name: "<gold>Bamboo Wood Fence Gate Sounds"}'
      slot: 11
    BambooWoodHangingSign:
      spell: sb-block-bamboo_wood_hanging_sign
      item: 'bamboo_hanging_sign{name: "<gold>Bamboo Wood Hanging Sign Sounds"}'
      slot: 12
    BambooWoodPressurePlate:
      spell: sb-block-bamboo_wood_pressure_plate
      item: 'bamboo_pressure_plate{name: "<gold>Bamboo Wood Pressure Plate Sounds"}'
      slot: 13
    BambooWoodTrapdoor:
      spell: sb-block-bamboo_wood_trapdoor
      item: 'bamboo_trapdoor{name: "<gold>Bamboo Wood Trapdoor Sounds"}'
      slot: 14
    Barrel:
      spell: sb-block-barrel
      item: 'barrel{name: "<gold>Barrel Sounds"}'
      slot: 15
    Basalt:
      spell: sb-block-basalt
      item: 'basalt{name: "<gold>Basalt Sounds"}'
      slot: 16
    Beacon:
      spell: sb-block-beacon
      item: 'beacon{name: "<gold>Beacon Sounds"}'
      slot: 17
    Beehive:
      spell: sb-block-beehive
      item: 'beehive{name: "<gold>Beehive Sounds"}'
      slot: 18
    Bell:
      spell: sb-block-bell
      item: 'bell{name: "<gold>Bell Sounds"}'
      slot: 19
    BigDripleaf:
      spell: sb-block-big_dripleaf
      item: 'big_dripleaf{name: "<gold>Big Dripleaf Sounds"}'
      slot: 20
    Blastfurnace:
      spell: sb-block-blastfurnace
      item: 'blast_furnace{name: "<gold>Blastfurnace Sounds"}'
      slot: 21
    BoneBlock:
      spell: sb-block-bone_block
      item: 'bone_block{name: "<gold>Bone Block Sounds"}'
      slot: 22
    BrewingStand:
      spell: sb-block-brewing_stand
      item: 'brewing_stand{name: "<gold>Brewing Stand Sounds"}'
      slot: 23
    BubbleColumn:
      spell: sb-block-bubble_column
      item: 'light_blue_stained_glass{name: "<gold>Bubble Column Sounds"}'
      slot: 24
    CactusFlower:
      spell: sb-block-cactus_flower
      item: 'cactus_flower{name: "<gold>Cactus Flower Sounds"}'
      slot: 25
    Cake:
      spell: sb-block-cake
      item: 'cake{name: "<gold>Cake Sounds"}'
      slot: 26
    Calcite:
      spell: sb-block-calcite
      item: 'calcite{name: "<gold>Calcite Sounds"}'
      slot: 27
    Campfire:
      spell: sb-block-campfire
      item: 'campfire{name: "<gold>Campfire Sounds"}'
      slot: 28
    Candle:
      spell: sb-block-candle
      item: 'candle{name: "<gold>Candle Sounds"}'
      slot: 29
    CaveVines:
      spell: sb-block-cave_vines
      item: 'glow_lichen{name: "<gold>Cave Vines Sounds"}'
      slot: 30
    Chain:
      spell: sb-block-chain
      item: 'chain{name: "<gold>Chain Sounds"}'
      slot: 31
    CherryLeaves:
      spell: sb-block-cherry_leaves
      item: 'cherry_leaves{name: "<gold>Cherry Leaves Sounds"}'
      slot: 32
    CherrySapling:
      spell: sb-block-cherry_sapling
      item: 'cherry_sapling{name: "<gold>Cherry Sapling Sounds"}'
      slot: 33
    CherryWood:
      spell: sb-block-cherry_wood
      item: 'cherry_wood{name: "<gold>Cherry Wood Sounds"}'
      slot: 34
    CherryWoodButton:
      spell: sb-block-cherry_wood_button
      item: 'cherry_button{name: "<gold>Cherry Wood Button Sounds"}'
      slot: 35
    CherryWoodDoor:
      spell: sb-block-cherry_wood_door
      item: 'cherry_door{name: "<gold>Cherry Wood Door Sounds"}'
      slot: 36
    CherryWoodFenceGate:
      spell: sb-block-cherry_wood_fence_gate
      item: 'cherry_fence_gate{name: "<gold>Cherry Wood Fence Gate Sounds"}'
      slot: 37
    CherryWoodHangingSign:
      spell: sb-block-cherry_wood_hanging_sign
      item: 'cherry_hanging_sign{name: "<gold>Cherry Wood Hanging Sign Sounds"}'
      slot: 38
    CherryWoodPressurePlate:
      spell: sb-block-cherry_wood_pressure_plate
      item: 'cherry_pressure_plate{name: "<gold>Cherry Wood Pressure Plate Sounds"}'
      slot: 39
    CherryWoodTrapdoor:
      spell: sb-block-cherry_wood_trapdoor
      item: 'cherry_trapdoor{name: "<gold>Cherry Wood Trapdoor Sounds"}'
      slot: 40
    Chest:
      spell: sb-block-chest
      item: 'chest{name: "<gold>Chest Sounds"}'
      slot: 41
    ChiseledBookshelf:
      spell: sb-block-chiseled_bookshelf
      item: 'chiseled_bookshelf{name: "<gold>Chiseled Bookshelf Sounds"}'
      slot: 42
    ChorusFlower:
      spell: sb-block-chorus_flower
      item: 'chorus_flower{name: "<gold>Chorus Flower Sounds"}'
      slot: 43
    Cobweb:
      spell: sb-block-cobweb
      item: 'cobweb{name: "<gold>Cobweb Sounds"}'
      slot: 44
    Button_Home:
      spell: sb
      item: 'book{name: "<gold>Home"}'
      slot: 49
    Button_Next_Page:
      spell: sb-block2
      item:
        type: arrow
        name: <gold>Next Page
      slot: 51
sb-block2:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Block <aqua>Sounds
  options:
    Comparator:
      spell: sb-block-comparator
      item: 'comparator{name: "<gold>Comparator Sounds"}'
      slot: 0
    Composter:
      spell: sb-block-composter
      item: 'composter{name: "<gold>Composter Sounds"}'
      slot: 1
    Conduit:
      spell: sb-block-conduit
      item: 'conduit{name: "<gold>Conduit Sounds"}'
      slot: 2
    Copper:
      spell: sb-block-copper
      item: 'copper_block{name: "<gold>Copper Sounds"}'
      slot: 3
    CopperBulb:
      spell: sb-block-copper_bulb
      item: 'copper_bulb{name: "<gold>Copper Bulb Sounds"}'
      slot: 4
    CopperDoor:
      spell: sb-block-copper_door
      item: 'copper_door{name: "<gold>Copper Door Sounds"}'
      slot: 5
    CopperGrate:
      spell: sb-block-copper_grate
      item: 'copper_grate{name: "<gold>Copper Grate Sounds"}'
      slot: 6
    CopperTrapdoor:
      spell: sb-block-copper_trapdoor
      item: 'copper_trapdoor{name: "<gold>Copper Trapdoor Sounds"}'
      slot: 7
    CoralBlock:
      spell: sb-block-coral_block
      item: 'horn_coral{name: "<gold>Coral Block Sounds"}'
      slot: 8
    Crafter:
      spell: sb-block-crafter
      item: 'crafter{name: "<gold>Crafter Sounds"}'
      slot: 9
    CreakingHeart:
      spell: sb-block-creaking_heart
      item: 'creaking_heart{name: "<gold>Creaking Heart Sounds"}'
      slot: 10
    Crop:
      spell: sb-block-crop
      item: 'wheat_seeds{name: "<gold>Crop Sounds"}'
      slot: 11
    Deadbush:
      spell: sb-block-deadbush
      item: 'dead_bush{name: "<gold>Deadbush Sounds"}'
      slot: 12
    DecoratedPot:
      spell: sb-block-decorated_pot
      item: 'decorated_pot{name: "<gold>Decorated Pot Sounds"}'
      slot: 13
    Deepslate:
      spell: sb-block-deepslate
      item: 'deepslate{name: "<gold>Deepslate Sounds"}'
      slot: 14
    DeepslateBricks:
      spell: sb-block-deepslate_bricks
      item: 'deepslate_bricks{name: "<gold>Deepslate Bricks Sounds"}'
      slot: 15
    DeepslateTiles:
      spell: sb-block-deepslate_tiles
      item: 'deepslate_tiles{name: "<gold>Deepslate Tiles Sounds"}'
      slot: 16
    Dispenser:
      spell: sb-block-dispenser
      item: 'dispenser{name: "<gold>Dispenser Sounds"}'
      slot: 17
    DripstoneBlock:
      spell: sb-block-dripstone_block
      item: 'dripstone_block{name: "<gold>Dripstone Block Sounds"}'
      slot: 18
    EnchantmentTable:
      spell: sb-block-enchantment_table
      item: 'enchanting_table{name: "<gold>Enchantment Table Sounds"}'
      slot: 19
    EndGateway:
      spell: sb-block-end_gateway
      item: 'end_crystal{name: "<gold>End Gateway Sounds"}'
      slot: 20
    EndPortal:
      spell: sb-block-end_portal
      item: 'ender_eye{name: "<gold>End Portal Sounds"}'
      slot: 21
    EndPortalFrame:
      spell: sb-block-end_portal_frame
      item: 'end_portal_frame{name: "<gold>End Portal Frame Sounds"}'
      slot: 22
    EnderChest:
      spell: sb-block-ender_chest
      item: 'ender_chest{name: "<gold>Ender Chest Sounds"}'
      slot: 23
    Eyeblossom:
      spell: sb-block-eyeblossom
      item: 'open_eyeblossom{name: "<gold>Eyeblossom Sounds"}'
      slot: 24
    FenceGate:
      spell: sb-block-fence_gate
      item: 'oak_fence_gate{name: "<gold>Fence Gate Sounds"}'
      slot: 25
    Fire:
      spell: sb-block-fire
      item: 'blaze_powder{name: "<gold>Fire Sounds"}'
      slot: 26
    FireflyBush:
      spell: sb-block-firefly_bush
      item: 'firefly_bush{name: "<gold>Firefly Bush Sounds"}'
      slot: 27
    FloweringAzalea:
      spell: sb-block-flowering_azalea
      item: 'flowering_azalea{name: "<gold>Flowering Azalea Sounds"}'
      slot: 28
    Froglight:
      spell: sb-block-froglight
      item: 'verdant_froglight{name: "<gold>Froglight Sounds"}'
      slot: 29
    Frogspawn:
      spell: sb-block-frogspawn
      item: 'frogspawn{name: "<gold>Frogspawn Sounds"}'
      slot: 30
    Fungus:
      spell: sb-block-fungus
      item: 'crimson_fungus{name: "<gold>Fungus Sounds"}'
      slot: 31
    Furnace:
      spell: sb-block-furnace
      item: 'furnace{name: "<gold>Furnace Sounds"}'
      slot: 32
    GildedBlackstone:
      spell: sb-block-gilded_blackstone
      item: 'gilded_blackstone{name: "<gold>Gilded Blackstone Sounds"}'
      slot: 33
    Glass:
      spell: sb-block-glass
      item: 'glass{name: "<gold>Glass Sounds"}'
      slot: 34
    Grass:
      spell: sb-block-grass
      item: 'short_grass{name: "<gold>Grass Sounds"}'
      slot: 35
    Gravel:
      spell: sb-block-gravel
      item: 'gravel{name: "<gold>Gravel Sounds"}'
      slot: 36
    Grindstone:
      spell: sb-block-grindstone
      item: 'grindstone{name: "<gold>Grindstone Sounds"}'
      slot: 37
    GrowingPlant:
      spell: sb-block-growing_plant
      item: 'wheat_seeds{name: "<gold>Growing Plant Sounds"}'
      slot: 38
    HangingRoots:
      spell: sb-block-hanging_roots
      item: 'hanging_roots{name: "<gold>Hanging Roots Sounds"}'
      slot: 39
    HangingSign:
      spell: sb-block-hanging_sign
      item: 'oak_hanging_sign{name: "<gold>Hanging Sign Sounds"}'
      slot: 40
    HeavyCore:
      spell: sb-block-heavy_core
      item: 'heavy_core{name: "<gold>Heavy Core Sounds"}'
      slot: 41
    HoneyBlock:
      spell: sb-block-honey_block
      item: 'honey_block{name: "<gold>Honey Block Sounds"}'
      slot: 42
    Iron:
      spell: sb-block-iron
      item: 'iron_block{name: "<gold>Iron Sounds"}'
      slot: 43
    IronDoor:
      spell: sb-block-iron_door
      item: 'iron_door{name: "<gold>Iron Door Sounds"}'
      slot: 44
    Button_Previous_Page:
      spell: sb-block1
      item: 'arrow{name: "<gold>Previous Page"}'
      slot: 47
    Button_Home:
      spell: sb
      item: 'book{name: "<gold>Home"}'
      slot: 49
    Button_Next_Page:
      spell: sb-block3
      item:
        type: arrow
        name: <gold>Next Page
      slot: 51
sb-block3:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Block <aqua>Sounds
  options:
    IronTrapdoor:
      spell: sb-block-iron_trapdoor
      item: 'iron_trapdoor{name: "<gold>Iron Trapdoor Sounds"}'
      slot: 0
    Ladder:
      spell: sb-block-ladder
      item: 'ladder{name: "<gold>Ladder Sounds"}'
      slot: 1
    Lantern:
      spell: sb-block-lantern
      item: 'lantern{name: "<gold>Lantern Sounds"}'
      slot: 2
    LargeAmethystBud:
      spell: sb-block-large_amethyst_bud
      item: 'large_amethyst_bud{name: "<gold>Large Amethyst Bud Sounds"}'
      slot: 3
    Lava:
      spell: sb-block-lava
      item: 'lava_bucket{name: "<gold>Lava Sounds"}'
      slot: 4
    LeafLitter:
      spell: sb-block-leaf_litter
      item: 'leaf_litter{name: "<gold>Leaf Litter Sounds"}'
      slot: 5
    Lever:
      spell: sb-block-lever
      item: 'lever{name: "<gold>Lever Sounds"}'
      slot: 6
    LilyPad:
      spell: sb-block-lily_pad
      item: 'lily_pad{name: "<gold>Lily Pad Sounds"}'
      slot: 7
    Lodestone:
      spell: sb-block-lodestone
      item: 'lodestone{name: "<gold>Lodestone Sounds"}'
      slot: 8
    MangroveRoots:
      spell: sb-block-mangrove_roots
      item: 'mangrove_roots{name: "<gold>Mangrove Roots Sounds"}'
      slot: 9
    MediumAmethystBud:
      spell: sb-block-medium_amethyst_bud
      item: 'medium_amethyst_bud{name: "<gold>Medium Amethyst Bud Sounds"}'
      slot: 10
    Metal:
      spell: sb-block-metal
      item: 'iron_block{name: "<gold>Metal Sounds"}'
      slot: 11
    MetalPressurePlate:
      spell: sb-block-metal_pressure_plate
      item: 'heavy_weighted_pressure_plate{name: "<gold>Metal Pressure Plate Sounds"}'
      slot: 12
    Moss:
      spell: sb-block-moss
      item: 'moss_block{name: "<gold>Moss Sounds"}'
      slot: 13
    MossCarpet:
      spell: sb-block-moss_carpet
      item: 'moss_carpet{name: "<gold>Moss Carpet Sounds"}'
      slot: 14
    Mud:
      spell: sb-block-mud
      item: 'mud{name: "<gold>Mud Sounds"}'
      slot: 15
    MudBricks:
      spell: sb-block-mud_bricks
      item: 'mud_bricks{name: "<gold>Mud Bricks Sounds"}'
      slot: 16
    MuddyMangroveRoots:
      spell: sb-block-muddy_mangrove_roots
      item: 'muddy_mangrove_roots{name: "<gold>Muddy Mangrove Roots Sounds"}'
      slot: 17
    NetherBricks:
      spell: sb-block-nether_bricks
      item: 'nether_bricks{name: "<gold>Nether Bricks Sounds"}'
      slot: 18
    NetherGoldOre:
      spell: sb-block-nether_gold_ore
      item: 'nether_gold_ore{name: "<gold>Nether Gold Ore Sounds"}'
      slot: 19
    NetherOre:
      spell: sb-block-nether_ore
      item: 'nether_quartz_ore{name: "<gold>Nether Ore Sounds"}'
      slot: 20
    NetherSprouts:
      spell: sb-block-nether_sprouts
      item: 'nether_sprouts{name: "<gold>Nether Sprouts Sounds"}'
      slot: 21
    NetherWart:
      spell: sb-block-nether_wart
      item: 'nether_wart{name: "<gold>Nether Wart Sounds"}'
      slot: 22
    NetherWood:
      spell: sb-block-nether_wood
      item: 'warped_hyphae{name: "<gold>Nether Wood Sounds"}'
      slot: 23
    NetherWoodButton:
      spell: sb-block-nether_wood_button
      item: 'warped_button{name: "<gold>Nether Wood Button Sounds"}'
      slot: 24
    NetherWoodDoor:
      spell: sb-block-nether_wood_door
      item: 'warped_door{name: "<gold>Nether Wood Door Sounds"}'
      slot: 25
    NetherWoodFenceGate:
      spell: sb-block-nether_wood_fence_gate
      item: 'warped_fence_gate{name: "<gold>Nether Wood Fence Gate Sounds"}'
      slot: 26
    NetherWoodHangingSign:
      spell: sb-block-nether_wood_hanging_sign
      item: 'warped_hanging_sign{name: "<gold>Nether Wood Hanging Sign Sounds"}'
      slot: 27
    NetherWoodPressurePlate:
      spell: sb-block-nether_wood_pressure_plate
      item: 'warped_pressure_plate{name: "<gold>Nether Wood Pressure Plate Sounds"}'
      slot: 28
    NetherWoodTrapdoor:
      spell: sb-block-nether_wood_trapdoor
      item: 'warped_trapdoor{name: "<gold>Nether Wood Trapdoor Sounds"}'
      slot: 29
    NetheriteBlock:
      spell: sb-block-netherite_block
      item: 'netherite_block{name: "<gold>Netherite Block Sounds"}'
      slot: 30
    Netherrack:
      spell: sb-block-netherrack
      item: 'netherrack{name: "<gold>Netherrack Sounds"}'
      slot: 31
    NoteBlock:
      spell: sb-block-note_block
      item: 'note_block{name: "<gold>Note Block Sounds"}'
      slot: 32
    Nylium:
      spell: sb-block-nylium
      item: 'crimson_nylium{name: "<gold>Nylium Sounds"}'
      slot: 33
    PackedMud:
      spell: sb-block-packed_mud
      item: 'packed_mud{name: "<gold>Packed Mud Sounds"}'
      slot: 34
    PaleHangingMoss:
      spell: sb-block-pale_hanging_moss
      item: 'pale_hanging_moss{name: "<gold>Pale Hanging Moss Sounds"}'
      slot: 35
    PinkPetals:
      spell: sb-block-pink_petals
      item: 'pink_petals{name: "<gold>Pink Petals Sounds"}'
      slot: 36
    Piston:
      spell: sb-block-piston
      item: 'piston{name: "<gold>Piston Sounds"}'
      slot: 37
    PointedDripstone:
      spell: sb-block-pointed_dripstone
      item: 'pointed_dripstone{name: "<gold>Pointed Dripstone Sounds"}'
      slot: 38
    PolishedDeepslate:
      spell: sb-block-polished_deepslate
      item: 'polished_deepslate{name: "<gold>Polished Deepslate Sounds"}'
      slot: 39
    PolishedTuff:
      spell: sb-block-polished_tuff
      item: 'polished_tuff{name: "<gold>Polished Tuff Sounds"}'
      slot: 40
    Portal:
      spell: sb-block-portal
      item: 'obsidian{name: "<gold>Portal Sounds"}'
      slot: 41
    PowderSnow:
      spell: sb-block-powder_snow
      item: 'powder_snow_bucket{name: "<gold>Powder Snow Sounds"}'
      slot: 42
    Pumpkin:
      spell: sb-block-pumpkin
      item: 'pumpkin{name: "<gold>Pumpkin Sounds"}'
      slot: 43
    RedstoneTorch:
      spell: sb-block-redstone_torch
      item: 'redstone_torch{name: "<gold>Redstone Torch Sounds"}'
      slot: 44
    Button_Previous_Page:
      spell: sb-block2
      item: 'arrow{name: "<gold>Previous Page"}'
      slot: 47
    Button_Home:
      spell: sb
      item: 'book{name: "<gold>Home"}'
      slot: 49
    Button_Next_Page:
      spell: sb-block4
      item:
        type: arrow
        name: <gold>Next Page
      slot: 51
sb-block4:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Block <aqua>Sounds
  options:
    Resin:
      spell: sb-block-resin
      item: 'resin_clump{name: "<gold>Resin Sounds"}'
      slot: 0
    ResinBricks:
      spell: sb-block-resin_bricks
      item: 'resin_bricks{name: "<gold>Resin Bricks Sounds"}'
      slot: 1
    RespawnAnchor:
      spell: sb-block-respawn_anchor
      item: 'respawn_anchor{name: "<gold>Respawn Anchor Sounds"}'
      slot: 2
    RootedDirt:
      spell: sb-block-rooted_dirt
      item: 'rooted_dirt{name: "<gold>Rooted Dirt Sounds"}'
      slot: 3
    Roots:
      spell: sb-block-roots
      item: 'crimson_roots{name: "<gold>Roots Sounds"}'
      slot: 4
    Sand:
      spell: sb-block-sand
      item: 'sand{name: "<gold>Sand Sounds"}'
      slot: 5
    Scaffolding:
      spell: sb-block-scaffolding
      item: 'scaffolding{name: "<gold>Scaffolding Sounds"}'
      slot: 6
    Sculk:
      spell: sb-block-sculk
      item: 'sculk{name: "<gold>Sculk Sounds"}'
      slot: 7
    SculkCatalyst:
      spell: sb-block-sculk_catalyst
      item: 'sculk_catalyst{name: "<gold>Sculk Catalyst Sounds"}'
      slot: 8
    SculkSensor:
      spell: sb-block-sculk_sensor
      item: 'sculk_sensor{name: "<gold>Sculk Sensor Sounds"}'
      slot: 9
    SculkShrieker:
      spell: sb-block-sculk_shrieker
      item: 'sculk_shrieker{name: "<gold>Sculk Shrieker Sounds"}'
      slot: 10
    SculkVein:
      spell: sb-block-sculk_vein
      item: 'sculk_vein{name: "<gold>Sculk Vein Sounds"}'
      slot: 11
    Shroomlight:
      spell: sb-block-shroomlight
      item: 'shroomlight{name: "<gold>Shroomlight Sounds"}'
      slot: 12
    ShulkerBox:
      spell: sb-block-shulker_box
      item: 'shulker_box{name: "<gold>Shulker Box Sounds"}'
      slot: 13
    Sign:
      spell: sb-block-sign
      item: 'oak_sign{name: "<gold>Sign Sounds"}'
      slot: 14
    SlimeBlock:
      spell: sb-block-slime_block
      item: 'slime_block{name: "<gold>Slime Block Sounds"}'
      slot: 15
    SmallAmethystBud:
      spell: sb-block-small_amethyst_bud
      item: 'small_amethyst_bud{name: "<gold>Small Amethyst Bud Sounds"}'
      slot: 16
    SmallDripleaf:
      spell: sb-block-small_dripleaf
      item: 'small_dripleaf{name: "<gold>Small Dripleaf Sounds"}'
      slot: 17
    SmithingTable:
      spell: sb-block-smithing_table
      item: 'smithing_table{name: "<gold>Smithing Table Sounds"}'
      slot: 18
    Smoker:
      spell: sb-block-smoker
      item: 'smoker{name: "<gold>Smoker Sounds"}'
      slot: 19
    SnifferEgg:
      spell: sb-block-sniffer_egg
      item: 'sniffer_egg{name: "<gold>Sniffer Egg Sounds"}'
      slot: 20
    Snow:
      spell: sb-block-snow
      item: 'snow{name: "<gold>Snow Sounds"}'
      slot: 21
    SoulSand:
      spell: sb-block-soul_sand
      item: 'soul_sand{name: "<gold>Soul Sand Sounds"}'
      slot: 22
    SoulSoil:
      spell: sb-block-soul_soil
      item: 'soul_soil{name: "<gold>Soul Soil Sounds"}'
      slot: 23
    Spawner:
      spell: sb-block-spawner
      item: 'spawner{name: "<gold>Spawner Sounds"}'
      slot: 24
    Sponge:
      spell: sb-block-sponge
      item: 'sponge{name: "<gold>Sponge Sounds"}'
      slot: 25
    SporeBlossom:
      spell: sb-block-spore_blossom
      item: 'spore_blossom{name: "<gold>Spore Blossom Sounds"}'
      slot: 26
    Stem:
      spell: sb-block-stem
      item: 'crimson_stem{name: "<gold>Stem Sounds"}'
      slot: 27
    Stone:
      spell: sb-block-stone
      item: 'stone{name: "<gold>Stone Sounds"}'
      slot: 28
    StoneButton:
      spell: sb-block-stone_button
      item: 'stone_button{name: "<gold>Stone Button Sounds"}'
      slot: 29
    StonePressurePlate:
      spell: sb-block-stone_pressure_plate
      item: 'stone_pressure_plate{name: "<gold>Stone Pressure Plate Sounds"}'
      slot: 30
    SuspiciousGravel:
      spell: sb-block-suspicious_gravel
      item: 'suspicious_gravel{name: "<gold>Suspicious Gravel Sounds"}'
      slot: 31
    SuspiciousSand:
      spell: sb-block-suspicious_sand
      item: 'suspicious_sand{name: "<gold>Suspicious Sand Sounds"}'
      slot: 32
    SweetBerryBush:
      spell: sb-block-sweet_berry_bush
      item: 'sweet_berries{name: "<gold>Sweet Berry Bush Sounds"}'
      slot: 33
    TrialSpawner:
      spell: sb-block-trial_spawner
      item: 'trial_spawner{name: "<gold>Trial Spawner Sounds"}'
      slot: 34
    Tripwire:
      spell: sb-block-tripwire
      item: 'tripwire_hook{name: "<gold>Tripwire Sounds"}'
      slot: 35
    Tuff:
      spell: sb-block-tuff
      item: 'tuff{name: "<gold>Tuff Sounds"}'
      slot: 36
    TuffBricks:
      spell: sb-block-tuff_bricks
      item: 'tuff_bricks{name: "<gold>Tuff Bricks Sounds"}'
      slot: 37
    Vault:
      spell: sb-block-vault
      item: 'vault{name: "<gold>Vault Sounds"}'
      slot: 38
    Vine:
      spell: sb-block-vine
      item: 'vine{name: "<gold>Vine Sounds"}'
      slot: 39
    WartBlock:
      spell: sb-block-wart_block
      item: 'warped_wart_block{name: "<gold>Wart Block Sounds"}'
      slot: 40
    Water:
      spell: sb-block-water
      item: 'water_bucket{name: "<gold>Water Sounds"}'
      slot: 41
    WeepingVines:
      spell: sb-block-weeping_vines
      item: 'weeping_vines{name: "<gold>Weeping Vines Sounds"}'
      slot: 42
    WetGrass:
      spell: sb-block-wet_grass
      item: 'kelp{name: "<gold>Wet Grass Sounds"}'
      slot: 43
    WetSponge:
      spell: sb-block-wet_sponge
      item: 'wet_sponge{name: "<gold>Wet Sponge Sounds"}'
      slot: 44
    Button_Previous_Page:
      spell: sb-block3
      item: 'arrow{name: "<gold>Previous Page"}'
      slot: 47
    Button_Home:
      spell: sb
      item: 'book{name: "<gold>Home"}'
      slot: 49
    Button_Next_Page:
      spell: sb-block5
      item:
        type: arrow
        name: <gold>Next Page
      slot: 51
sb-block5:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Block <aqua>Sounds
  options:
    Wood:
      spell: sb-block-wood
      item: 'oak_log{name: "<gold>Wood Sounds"}'
      slot: 0
    WoodenButton:
      spell: sb-block-wooden_button
      item: 'oak_button{name: "<gold>Wooden Button Sounds"}'
      slot: 1
    WoodenDoor:
      spell: sb-block-wooden_door
      item: 'oak_door{name: "<gold>Wooden Door Sounds"}'
      slot: 2
    WoodenPressurePlate:
      spell: sb-block-wooden_pressure_plate
      item: 'oak_pressure_plate{name: "<gold>Wooden Pressure Plate Sounds"}'
      slot: 3
    WoodenTrapdoor:
      spell: sb-block-wooden_trapdoor
      item: 'oak_trapdoor{name: "<gold>Wooden Trapdoor Sounds"}'
      slot: 4
    Wool:
      spell: sb-block-wool
      item: 'white_wool{name: "<gold>Wool Sounds"}'
      slot: 5
    Button_Previous_Page:
      spell: sb-block4
      item: 'arrow{name: "<gold>Previous Page"}'
      slot: 11
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-amethyst_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Amethyst Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.amethyst_block.break", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.amethyst_block.break"]}'
      slot: 0
    Sound_Chime:
      spell: sb-prepare-sound(args=["block.amethyst_block.chime", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Chime <gold>Sound", lore: ["<grey><italic>block.amethyst_block.chime"]}'
      slot: 1
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.amethyst_block.fall", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.amethyst_block.fall"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.amethyst_block.hit", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.amethyst_block.hit"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.amethyst_block.place", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.amethyst_block.place"]}'
      slot: 4
    Sound_Resonate:
      spell: sb-prepare-sound(args=["block.amethyst_block.resonate", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Resonate <gold>Sound", lore: ["<grey><italic>block.amethyst_block.resonate"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["block.amethyst_block.step", "block_amethyst_block"])
      item: 'amethyst_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.amethyst_block.step"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-amethyst_cluster:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Amethyst Cluster <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.amethyst_cluster.break", "block_amethyst_cluster"])
      item: 'amethyst_cluster{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.amethyst_cluster.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.amethyst_cluster.fall", "block_amethyst_cluster"])
      item: 'amethyst_cluster{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.amethyst_cluster.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.amethyst_cluster.hit", "block_amethyst_cluster"])
      item: 'amethyst_cluster{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.amethyst_cluster.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.amethyst_cluster.place", "block_amethyst_cluster"])
      item: 'amethyst_cluster{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.amethyst_cluster.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.amethyst_cluster.step", "block_amethyst_cluster"])
      item: 'amethyst_cluster{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.amethyst_cluster.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-ancient_debris:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ancient Debris <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.ancient_debris.break", "block_ancient_debris"])
      item: 'ancient_debris{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.ancient_debris.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.ancient_debris.fall", "block_ancient_debris"])
      item: 'ancient_debris{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.ancient_debris.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.ancient_debris.hit", "block_ancient_debris"])
      item: 'ancient_debris{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.ancient_debris.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.ancient_debris.place", "block_ancient_debris"])
      item: 'ancient_debris{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.ancient_debris.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.ancient_debris.step", "block_ancient_debris"])
      item: 'ancient_debris{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.ancient_debris.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-anvil:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Anvil <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.anvil.break", "block_anvil"])
      item: 'anvil{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.anvil.break"]}'
      slot: 0
    Sound_Destroy:
      spell: sb-prepare-sound(args=["block.anvil.destroy", "block_anvil"])
      item: 'anvil{name: "<yellow>Destroy <gold>Sound", lore: ["<grey><italic>block.anvil.destroy"]}'
      slot: 1
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.anvil.fall", "block_anvil"])
      item: 'anvil{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.anvil.fall"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.anvil.hit", "block_anvil"])
      item: 'anvil{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.anvil.hit"]}'
      slot: 3
    Sound_Land:
      spell: sb-prepare-sound(args=["block.anvil.land", "block_anvil"])
      item: 'anvil{name: "<yellow>Land <gold>Sound", lore: ["<grey><italic>block.anvil.land"]}'
      slot: 4
    Sound_Place:
      spell: sb-prepare-sound(args=["block.anvil.place", "block_anvil"])
      item: 'anvil{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.anvil.place"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["block.anvil.step", "block_anvil"])
      item: 'anvil{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.anvil.step"]}'
      slot: 6
    Sound_Use:
      spell: sb-prepare-sound(args=["block.anvil.use", "block_anvil"])
      item: 'anvil{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>block.anvil.use"]}'
      slot: 7
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-azalea:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Azalea <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.azalea.break", "block_azalea"])
      item: 'azalea{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.azalea.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.azalea.fall", "block_azalea"])
      item: 'azalea{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.azalea.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.azalea.hit", "block_azalea"])
      item: 'azalea{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.azalea.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.azalea.place", "block_azalea"])
      item: 'azalea{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.azalea.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.azalea.step", "block_azalea"])
      item: 'azalea{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.azalea.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-azalea_leaves:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Azalea Leaves <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.azalea_leaves.break", "block_azalea_leaves"])
      item: 'azalea_leaves{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.azalea_leaves.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.azalea_leaves.fall", "block_azalea_leaves"])
      item: 'azalea_leaves{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.azalea_leaves.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.azalea_leaves.hit", "block_azalea_leaves"])
      item: 'azalea_leaves{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.azalea_leaves.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.azalea_leaves.place", "block_azalea_leaves"])
      item: 'azalea_leaves{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.azalea_leaves.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.azalea_leaves.step", "block_azalea_leaves"])
      item: 'azalea_leaves{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.azalea_leaves.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.bamboo.break", "block_bamboo"])
      item: 'bamboo{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.bamboo.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.bamboo.fall", "block_bamboo"])
      item: 'bamboo{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.bamboo.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.bamboo.hit", "block_bamboo"])
      item: 'bamboo{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.bamboo.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.bamboo.place", "block_bamboo"])
      item: 'bamboo{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.bamboo.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.bamboo.step", "block_bamboo"])
      item: 'bamboo{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.bamboo.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_sapling:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Sapling <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.bamboo_sapling.break", "block_bamboo_sapling"])
      item: 'bamboo{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.bamboo_sapling.break"]}'
      slot: 0
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.bamboo_sapling.hit", "block_bamboo_sapling"])
      item: 'bamboo{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.bamboo_sapling.hit"]}'
      slot: 1
    Sound_Place:
      spell: sb-prepare-sound(args=["block.bamboo_sapling.place", "block_bamboo_sapling"])
      item: 'bamboo{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.bamboo_sapling.place"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.bamboo_wood.break", "block_bamboo_wood"])
      item: 'bamboo_planks{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.bamboo_wood.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.bamboo_wood.fall", "block_bamboo_wood"])
      item: 'bamboo_planks{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.bamboo_wood.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.bamboo_wood.hit", "block_bamboo_wood"])
      item: 'bamboo_planks{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.bamboo_wood.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.bamboo_wood.place", "block_bamboo_wood"])
      item: 'bamboo_planks{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.bamboo_wood.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.bamboo_wood.step", "block_bamboo_wood"])
      item: 'bamboo_planks{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.bamboo_wood.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood_button:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood Button <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.bamboo_wood_button.click_off", "block_bamboo_wood_button"])
      item: 'bamboo_button{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_button.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.bamboo_wood_button.click_on", "block_bamboo_wood_button"])
      item: 'bamboo_button{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_button.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood_door:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood Door <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.bamboo_wood_door.close", "block_bamboo_wood_door"])
      item: 'bamboo_door{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_door.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.bamboo_wood_door.open", "block_bamboo_wood_door"])
      item: 'bamboo_door{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_door.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood_fence_gate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood Fence Gate <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.bamboo_wood_fence_gate.close", "block_bamboo_wood_fence_gate"])
      item: 'bamboo_fence_gate{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_fence_gate.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.bamboo_wood_fence_gate.open", "block_bamboo_wood_fence_gate"])
      item: 'bamboo_fence_gate{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_fence_gate.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood_hanging_sign:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood Hanging Sign <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.bamboo_wood_hanging_sign.break", "block_bamboo_wood_hanging_sign"])
      item: 'bamboo_hanging_sign{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_hanging_sign.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.bamboo_wood_hanging_sign.fall", "block_bamboo_wood_hanging_sign"])
      item: 'bamboo_hanging_sign{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_hanging_sign.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.bamboo_wood_hanging_sign.hit", "block_bamboo_wood_hanging_sign"])
      item: 'bamboo_hanging_sign{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_hanging_sign.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.bamboo_wood_hanging_sign.place", "block_bamboo_wood_hanging_sign"])
      item: 'bamboo_hanging_sign{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_hanging_sign.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.bamboo_wood_hanging_sign.step", "block_bamboo_wood_hanging_sign"])
      item: 'bamboo_hanging_sign{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_hanging_sign.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood_pressure_plate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood Pressure Plate <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.bamboo_wood_pressure_plate.click_off", "block_bamboo_wood_pressure_plate"])
      item: 'bamboo_pressure_plate{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_pressure_plate.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.bamboo_wood_pressure_plate.click_on", "block_bamboo_wood_pressure_plate"])
      item: 'bamboo_pressure_plate{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_pressure_plate.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bamboo_wood_trapdoor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bamboo Wood Trapdoor <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.bamboo_wood_trapdoor.close", "block_bamboo_wood_trapdoor"])
      item: 'bamboo_trapdoor{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_trapdoor.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.bamboo_wood_trapdoor.open", "block_bamboo_wood_trapdoor"])
      item: 'bamboo_trapdoor{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.bamboo_wood_trapdoor.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-barrel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Barrel <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.barrel.close", "block_barrel"])
      item: 'barrel{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.barrel.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.barrel.open", "block_barrel"])
      item: 'barrel{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.barrel.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-basalt:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Basalt <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.basalt.break", "block_basalt"])
      item: 'basalt{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.basalt.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.basalt.fall", "block_basalt"])
      item: 'basalt{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.basalt.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.basalt.hit", "block_basalt"])
      item: 'basalt{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.basalt.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.basalt.place", "block_basalt"])
      item: 'basalt{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.basalt.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.basalt.step", "block_basalt"])
      item: 'basalt{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.basalt.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-beacon:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Beacon <aqua>Sounds
  options:
    Sound_Activate:
      spell: sb-prepare-sound(args=["block.beacon.activate", "block_beacon"])
      item: 'beacon{name: "<yellow>Activate <gold>Sound", lore: ["<grey><italic>block.beacon.activate"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.beacon.ambient", "block_beacon"])
      item: 'beacon{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.beacon.ambient"]}'
      slot: 1
    Sound_Deactivate:
      spell: sb-prepare-sound(args=["block.beacon.deactivate", "block_beacon"])
      item: 'beacon{name: "<yellow>Deactivate <gold>Sound", lore: ["<grey><italic>block.beacon.deactivate"]}'
      slot: 2
    Sound_PowerSelect:
      spell: sb-prepare-sound(args=["block.beacon.power_select", "block_beacon"])
      item: 'beacon{name: "<yellow>Power Select <gold>Sound", lore: ["<grey><italic>block.beacon.power_select"]}'
      slot: 3
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-beehive:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Beehive <aqua>Sounds
  options:
    Sound_Drip:
      spell: sb-prepare-sound(args=["block.beehive.drip", "block_beehive"])
      item: 'beehive{name: "<yellow>Drip <gold>Sound", lore: ["<grey><italic>block.beehive.drip"]}'
      slot: 0
    Sound_Enter:
      spell: sb-prepare-sound(args=["block.beehive.enter", "block_beehive"])
      item: 'beehive{name: "<yellow>Enter <gold>Sound", lore: ["<grey><italic>block.beehive.enter"]}'
      slot: 1
    Sound_Exit:
      spell: sb-prepare-sound(args=["block.beehive.exit", "block_beehive"])
      item: 'beehive{name: "<yellow>Exit <gold>Sound", lore: ["<grey><italic>block.beehive.exit"]}'
      slot: 2
    Sound_Shear:
      spell: sb-prepare-sound(args=["block.beehive.shear", "block_beehive"])
      item: 'beehive{name: "<yellow>Shear <gold>Sound", lore: ["<grey><italic>block.beehive.shear"]}'
      slot: 3
    Sound_Work:
      spell: sb-prepare-sound(args=["block.beehive.work", "block_beehive"])
      item: 'beehive{name: "<yellow>Work <gold>Sound", lore: ["<grey><italic>block.beehive.work"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bell:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bell <aqua>Sounds
  options:
    Sound_Resonate:
      spell: sb-prepare-sound(args=["block.bell.resonate", "block_bell"])
      item: 'bell{name: "<yellow>Resonate <gold>Sound", lore: ["<grey><italic>block.bell.resonate"]}'
      slot: 0
    Sound_Use:
      spell: sb-prepare-sound(args=["block.bell.use", "block_bell"])
      item: 'bell{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>block.bell.use"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-big_dripleaf:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Big Dripleaf <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.big_dripleaf.break", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.big_dripleaf.fall", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.big_dripleaf.hit", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.big_dripleaf.place", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.big_dripleaf.step", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.step"]}'
      slot: 4
    Sound_TiltDown:
      spell: sb-prepare-sound(args=["block.big_dripleaf.tilt_down", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Tilt Down <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.tilt_down"]}'
      slot: 5
    Sound_TiltUP:
      spell: sb-prepare-sound(args=["block.big_dripleaf.tilt_up", "block_big_dripleaf"])
      item: 'big_dripleaf{name: "<yellow>Tilt UP <gold>Sound", lore: ["<grey><italic>block.big_dripleaf.tilt_up"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-blastfurnace:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Blastfurnace <aqua>Sounds
  options:
    Sound_FireCrackle:
      spell: sb-prepare-sound(args=["block.blastfurnace.fire_crackle", "block_blastfurnace"])
      item: 'blast_furnace{name: "<yellow>Fire Crackle <gold>Sound", lore: ["<grey><italic>block.blastfurnace.fire_crackle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bone_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bone Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.bone_block.break", "block_bone_block"])
      item: 'bone_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.bone_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.bone_block.fall", "block_bone_block"])
      item: 'bone_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.bone_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.bone_block.hit", "block_bone_block"])
      item: 'bone_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.bone_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.bone_block.place", "block_bone_block"])
      item: 'bone_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.bone_block.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.bone_block.step", "block_bone_block"])
      item: 'bone_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.bone_block.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-brewing_stand:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Brewing Stand <aqua>Sounds
  options:
    Sound_Brew:
      spell: sb-prepare-sound(args=["block.brewing_stand.brew", "block_brewing_stand"])
      item: 'brewing_stand{name: "<yellow>Brew <gold>Sound", lore: ["<grey><italic>block.brewing_stand.brew"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-bubble_column:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bubble Column <aqua>Sounds
  options:
    Sound_BubblePop:
      spell: sb-prepare-sound(args=["block.bubble_column.bubble_pop", "block_bubble_column"])
      item: 'light_blue_stained_glass{name: "<yellow>Bubble Pop <gold>Sound", lore: ["<grey><italic>block.bubble_column.bubble_pop"]}'
      slot: 0
    Sound_UpwardsAmbient:
      spell: sb-prepare-sound(args=["block.bubble_column.upwards_ambient", "block_bubble_column"])
      item: 'light_blue_stained_glass{name: "<yellow>Upwards Ambient <gold>Sound", lore: ["<grey><italic>block.bubble_column.upwards_ambient"]}'
      slot: 1
    Sound_UpwardsInside:
      spell: sb-prepare-sound(args=["block.bubble_column.upwards_inside", "block_bubble_column"])
      item: 'light_blue_stained_glass{name: "<yellow>Upwards Inside <gold>Sound", lore: ["<grey><italic>block.bubble_column.upwards_inside"]}'
      slot: 2
    Sound_WhirlpoolAmbient:
      spell: sb-prepare-sound(args=["block.bubble_column.whirlpool_ambient", "block_bubble_column"])
      item: 'light_blue_stained_glass{name: "<yellow>Whirlpool Ambient <gold>Sound", lore: ["<grey><italic>block.bubble_column.whirlpool_ambient"]}'
      slot: 3
    Sound_WhirlpoolInside:
      spell: sb-prepare-sound(args=["block.bubble_column.whirlpool_inside", "block_bubble_column"])
      item: 'light_blue_stained_glass{name: "<yellow>Whirlpool Inside <gold>Sound", lore: ["<grey><italic>block.bubble_column.whirlpool_inside"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cactus_flower:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cactus Flower <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cactus_flower.break", "block_cactus_flower"])
      item: 'cactus_flower{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cactus_flower.break"]}'
      slot: 0
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cactus_flower.place", "block_cactus_flower"])
      item: 'cactus_flower{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cactus_flower.place"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cake:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cake <aqua>Sounds
  options:
    Sound_AddCandle:
      spell: sb-prepare-sound(args=["block.cake.add_candle", "block_cake"])
      item: 'cake{name: "<yellow>Add Candle <gold>Sound", lore: ["<grey><italic>block.cake.add_candle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-calcite:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Calcite <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.calcite.break", "block_calcite"])
      item: 'calcite{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.calcite.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.calcite.fall", "block_calcite"])
      item: 'calcite{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.calcite.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.calcite.hit", "block_calcite"])
      item: 'calcite{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.calcite.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.calcite.place", "block_calcite"])
      item: 'calcite{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.calcite.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.calcite.step", "block_calcite"])
      item: 'calcite{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.calcite.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-campfire:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Campfire <aqua>Sounds
  options:
    Sound_Crackle:
      spell: sb-prepare-sound(args=["block.campfire.crackle", "block_campfire"])
      item: 'campfire{name: "<yellow>Crackle <gold>Sound", lore: ["<grey><italic>block.campfire.crackle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-candle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Candle <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.candle.ambient", "block_candle"])
      item: 'candle{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.candle.ambient"]}'
      slot: 0
    Sound_Break:
      spell: sb-prepare-sound(args=["block.candle.break", "block_candle"])
      item: 'candle{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.candle.break"]}'
      slot: 1
    Sound_Extinguish:
      spell: sb-prepare-sound(args=["block.candle.extinguish", "block_candle"])
      item: 'candle{name: "<yellow>Extinguish <gold>Sound", lore: ["<grey><italic>block.candle.extinguish"]}'
      slot: 2
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.candle.fall", "block_candle"])
      item: 'candle{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.candle.fall"]}'
      slot: 3
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.candle.hit", "block_candle"])
      item: 'candle{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.candle.hit"]}'
      slot: 4
    Sound_Place:
      spell: sb-prepare-sound(args=["block.candle.place", "block_candle"])
      item: 'candle{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.candle.place"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["block.candle.step", "block_candle"])
      item: 'candle{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.candle.step"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cave_vines:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cave Vines <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cave_vines.break", "block_cave_vines"])
      item: 'glow_lichen{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cave_vines.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.cave_vines.fall", "block_cave_vines"])
      item: 'glow_lichen{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.cave_vines.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.cave_vines.hit", "block_cave_vines"])
      item: 'glow_lichen{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.cave_vines.hit"]}'
      slot: 2
    Sound_PickBerries:
      spell: sb-prepare-sound(args=["block.cave_vines.pick_berries", "block_cave_vines"])
      item: 'glow_lichen{name: "<yellow>Pick Berries <gold>Sound", lore: ["<grey><italic>block.cave_vines.pick_berries"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cave_vines.place", "block_cave_vines"])
      item: 'glow_lichen{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cave_vines.place"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.cave_vines.step", "block_cave_vines"])
      item: 'glow_lichen{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.cave_vines.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-chain:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Chain <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.chain.break", "block_chain"])
      item: 'chain{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.chain.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.chain.fall", "block_chain"])
      item: 'chain{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.chain.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.chain.hit", "block_chain"])
      item: 'chain{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.chain.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.chain.place", "block_chain"])
      item: 'chain{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.chain.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.chain.step", "block_chain"])
      item: 'chain{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.chain.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_leaves:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Leaves <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cherry_leaves.break", "block_cherry_leaves"])
      item: 'cherry_leaves{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cherry_leaves.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.cherry_leaves.fall", "block_cherry_leaves"])
      item: 'cherry_leaves{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.cherry_leaves.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.cherry_leaves.hit", "block_cherry_leaves"])
      item: 'cherry_leaves{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.cherry_leaves.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cherry_leaves.place", "block_cherry_leaves"])
      item: 'cherry_leaves{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cherry_leaves.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.cherry_leaves.step", "block_cherry_leaves"])
      item: 'cherry_leaves{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.cherry_leaves.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_sapling:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Sapling <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cherry_sapling.break", "block_cherry_sapling"])
      item: 'cherry_sapling{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cherry_sapling.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.cherry_sapling.fall", "block_cherry_sapling"])
      item: 'cherry_sapling{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.cherry_sapling.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.cherry_sapling.hit", "block_cherry_sapling"])
      item: 'cherry_sapling{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.cherry_sapling.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cherry_sapling.place", "block_cherry_sapling"])
      item: 'cherry_sapling{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cherry_sapling.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.cherry_sapling.step", "block_cherry_sapling"])
      item: 'cherry_sapling{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.cherry_sapling.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cherry_wood.break", "block_cherry_wood"])
      item: 'cherry_wood{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cherry_wood.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.cherry_wood.fall", "block_cherry_wood"])
      item: 'cherry_wood{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.cherry_wood.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.cherry_wood.hit", "block_cherry_wood"])
      item: 'cherry_wood{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.cherry_wood.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cherry_wood.place", "block_cherry_wood"])
      item: 'cherry_wood{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cherry_wood.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.cherry_wood.step", "block_cherry_wood"])
      item: 'cherry_wood{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.cherry_wood.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood_button:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood Button <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.cherry_wood_button.click_off", "block_cherry_wood_button"])
      item: 'cherry_button{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.cherry_wood_button.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.cherry_wood_button.click_on", "block_cherry_wood_button"])
      item: 'cherry_button{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.cherry_wood_button.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood_door:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood Door <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.cherry_wood_door.close", "block_cherry_wood_door"])
      item: 'cherry_door{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.cherry_wood_door.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.cherry_wood_door.open", "block_cherry_wood_door"])
      item: 'cherry_door{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.cherry_wood_door.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood_fence_gate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood Fence Gate <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.cherry_wood_fence_gate.close", "block_cherry_wood_fence_gate"])
      item: 'cherry_fence_gate{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.cherry_wood_fence_gate.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.cherry_wood_fence_gate.open", "block_cherry_wood_fence_gate"])
      item: 'cherry_fence_gate{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.cherry_wood_fence_gate.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood_hanging_sign:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood Hanging Sign <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cherry_wood_hanging_sign.break", "block_cherry_wood_hanging_sign"])
      item: 'cherry_hanging_sign{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cherry_wood_hanging_sign.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.cherry_wood_hanging_sign.fall", "block_cherry_wood_hanging_sign"])
      item: 'cherry_hanging_sign{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.cherry_wood_hanging_sign.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.cherry_wood_hanging_sign.hit", "block_cherry_wood_hanging_sign"])
      item: 'cherry_hanging_sign{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.cherry_wood_hanging_sign.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cherry_wood_hanging_sign.place", "block_cherry_wood_hanging_sign"])
      item: 'cherry_hanging_sign{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cherry_wood_hanging_sign.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.cherry_wood_hanging_sign.step", "block_cherry_wood_hanging_sign"])
      item: 'cherry_hanging_sign{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.cherry_wood_hanging_sign.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood_pressure_plate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood Pressure Plate <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.cherry_wood_pressure_plate.click_off", "block_cherry_wood_pressure_plate"])
      item: 'cherry_pressure_plate{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.cherry_wood_pressure_plate.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.cherry_wood_pressure_plate.click_on", "block_cherry_wood_pressure_plate"])
      item: 'cherry_pressure_plate{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.cherry_wood_pressure_plate.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cherry_wood_trapdoor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cherry Wood Trapdoor <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.cherry_wood_trapdoor.close", "block_cherry_wood_trapdoor"])
      item: 'cherry_trapdoor{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.cherry_wood_trapdoor.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.cherry_wood_trapdoor.open", "block_cherry_wood_trapdoor"])
      item: 'cherry_trapdoor{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.cherry_wood_trapdoor.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-chest:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Chest <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.chest.close", "block_chest"])
      item: 'chest{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.chest.close"]}'
      slot: 0
    Sound_Locked:
      spell: sb-prepare-sound(args=["block.chest.locked", "block_chest"])
      item: 'chest{name: "<yellow>Locked <gold>Sound", lore: ["<grey><italic>block.chest.locked"]}'
      slot: 1
    Sound_Open:
      spell: sb-prepare-sound(args=["block.chest.open", "block_chest"])
      item: 'chest{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.chest.open"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-chiseled_bookshelf:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Chiseled Bookshelf <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.break", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.fall", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.hit", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.hit"]}'
      slot: 2
    Sound_Insert:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.insert", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Insert <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.insert"]}'
      slot: 3
    Sound_Pickup:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.pickup", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Pickup <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.pickup"]}'
      slot: 4
    Sound_Place:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.place", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.place"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.step", "block_chiseled_bookshelf"])
      item: 'chiseled_bookshelf{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.step"]}'
      slot: 6
    Insert:
      spell: sb-block-chiseled_bookshelf-insert
      item: 'bookshelf{name: "<gold>Insert Sounds"}'
      slot: 7
    Pickup:
      spell: sb-block-chiseled_bookshelf-pickup
      item: 'bookshelf{name: "<gold>Pickup Sounds"}'
      slot: 8
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-chiseled_bookshelf-insert:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Insert <aqua>Sounds
  options:
    Sound_Enchanted:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.insert.enchanted", "block_chiseled_bookshelf_insert"])
      item: 'bookshelf{name: "<yellow>Enchanted <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.insert.enchanted"]}'
      slot: 0
    Button_Back:
      spell: sb-block-chiseled_bookshelf
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-chiseled_bookshelf-pickup:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pickup <aqua>Sounds
  options:
    Sound_Enchanted:
      spell: sb-prepare-sound(args=["block.chiseled_bookshelf.pickup.enchanted", "block_chiseled_bookshelf_pickup"])
      item: 'bookshelf{name: "<yellow>Enchanted <gold>Sound", lore: ["<grey><italic>block.chiseled_bookshelf.pickup.enchanted"]}'
      slot: 0
    Button_Back:
      spell: sb-block-chiseled_bookshelf
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-chorus_flower:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Chorus Flower <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["block.chorus_flower.death", "block_chorus_flower"])
      item: 'chorus_flower{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>block.chorus_flower.death"]}'
      slot: 0
    Sound_Grow:
      spell: sb-prepare-sound(args=["block.chorus_flower.grow", "block_chorus_flower"])
      item: 'chorus_flower{name: "<yellow>Grow <gold>Sound", lore: ["<grey><italic>block.chorus_flower.grow"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-cobweb:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cobweb <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.cobweb.break", "block_cobweb"])
      item: 'cobweb{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.cobweb.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.cobweb.fall", "block_cobweb"])
      item: 'cobweb{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.cobweb.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.cobweb.hit", "block_cobweb"])
      item: 'cobweb{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.cobweb.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.cobweb.place", "block_cobweb"])
      item: 'cobweb{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.cobweb.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.cobweb.step", "block_cobweb"])
      item: 'cobweb{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.cobweb.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-comparator:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Comparator <aqua>Sounds
  options:
    Sound_Click:
      spell: sb-prepare-sound(args=["block.comparator.click", "block_comparator"])
      item: 'comparator{name: "<yellow>Click <gold>Sound", lore: ["<grey><italic>block.comparator.click"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-composter:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Composter <aqua>Sounds
  options:
    Sound_Empty:
      spell: sb-prepare-sound(args=["block.composter.empty", "block_composter"])
      item: 'composter{name: "<yellow>Empty <gold>Sound", lore: ["<grey><italic>block.composter.empty"]}'
      slot: 0
    Sound_Fill:
      spell: sb-prepare-sound(args=["block.composter.fill", "block_composter"])
      item: 'composter{name: "<yellow>Fill <gold>Sound", lore: ["<grey><italic>block.composter.fill"]}'
      slot: 1
    Sound_FillSuccess:
      spell: sb-prepare-sound(args=["block.composter.fill_success", "block_composter"])
      item: 'composter{name: "<yellow>Fill Success <gold>Sound", lore: ["<grey><italic>block.composter.fill_success"]}'
      slot: 2
    Sound_Ready:
      spell: sb-prepare-sound(args=["block.composter.ready", "block_composter"])
      item: 'composter{name: "<yellow>Ready <gold>Sound", lore: ["<grey><italic>block.composter.ready"]}'
      slot: 3
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-conduit:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Conduit <aqua>Sounds
  options:
    Sound_Activate:
      spell: sb-prepare-sound(args=["block.conduit.activate", "block_conduit"])
      item: 'conduit{name: "<yellow>Activate <gold>Sound", lore: ["<grey><italic>block.conduit.activate"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.conduit.ambient", "block_conduit"])
      item: 'conduit{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.conduit.ambient"]}'
      slot: 1
    Sound_Deactivate:
      spell: sb-prepare-sound(args=["block.conduit.deactivate", "block_conduit"])
      item: 'conduit{name: "<yellow>Deactivate <gold>Sound", lore: ["<grey><italic>block.conduit.deactivate"]}'
      slot: 2
    Ambient:
      spell: sb-block-conduit-ambient
      item: 'conduit{name: "<gold>Ambient Sounds"}'
      slot: 3
    Attack:
      spell: sb-block-conduit-attack
      item: 'conduit{name: "<gold>Attack Sounds"}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-conduit-ambient:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ambient <aqua>Sounds
  options:
    Sound_Short:
      spell: sb-prepare-sound(args=["block.conduit.ambient.short", "block_conduit_ambient"])
      item: 'conduit{name: "<yellow>Short <gold>Sound", lore: ["<grey><italic>block.conduit.ambient.short"]}'
      slot: 0
    Button_Back:
      spell: sb-block-conduit
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-conduit-attack:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Attack <aqua>Sounds
  options:
    Sound_Target:
      spell: sb-prepare-sound(args=["block.conduit.attack.target", "block_conduit_attack"])
      item: 'conduit{name: "<yellow>Target <gold>Sound", lore: ["<grey><italic>block.conduit.attack.target"]}'
      slot: 0
    Button_Back:
      spell: sb-block-conduit
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-copper:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Copper <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.copper.break", "block_copper"])
      item: 'copper_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.copper.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.copper.fall", "block_copper"])
      item: 'copper_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.copper.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.copper.hit", "block_copper"])
      item: 'copper_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.copper.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.copper.place", "block_copper"])
      item: 'copper_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.copper.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.copper.step", "block_copper"])
      item: 'copper_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.copper.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-copper_bulb:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Copper Bulb <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.copper_bulb.break", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.copper_bulb.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.copper_bulb.fall", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.copper_bulb.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.copper_bulb.hit", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.copper_bulb.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.copper_bulb.place", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.copper_bulb.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.copper_bulb.step", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.copper_bulb.step"]}'
      slot: 4
    Sound_TurnOff:
      spell: sb-prepare-sound(args=["block.copper_bulb.turn_off", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Turn Off <gold>Sound", lore: ["<grey><italic>block.copper_bulb.turn_off"]}'
      slot: 5
    Sound_TurnON:
      spell: sb-prepare-sound(args=["block.copper_bulb.turn_on", "block_copper_bulb"])
      item: 'copper_bulb{name: "<yellow>Turn ON <gold>Sound", lore: ["<grey><italic>block.copper_bulb.turn_on"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-copper_door:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Copper Door <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.copper_door.close", "block_copper_door"])
      item: 'copper_door{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.copper_door.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.copper_door.open", "block_copper_door"])
      item: 'copper_door{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.copper_door.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-copper_grate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Copper Grate <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.copper_grate.break", "block_copper_grate"])
      item: 'copper_grate{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.copper_grate.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.copper_grate.fall", "block_copper_grate"])
      item: 'copper_grate{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.copper_grate.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.copper_grate.hit", "block_copper_grate"])
      item: 'copper_grate{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.copper_grate.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.copper_grate.place", "block_copper_grate"])
      item: 'copper_grate{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.copper_grate.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.copper_grate.step", "block_copper_grate"])
      item: 'copper_grate{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.copper_grate.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-copper_trapdoor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Copper Trapdoor <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.copper_trapdoor.close", "block_copper_trapdoor"])
      item: 'copper_trapdoor{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.copper_trapdoor.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.copper_trapdoor.open", "block_copper_trapdoor"])
      item: 'copper_trapdoor{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.copper_trapdoor.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-coral_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Coral Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.coral_block.break", "block_coral_block"])
      item: 'horn_coral{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.coral_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.coral_block.fall", "block_coral_block"])
      item: 'horn_coral{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.coral_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.coral_block.hit", "block_coral_block"])
      item: 'horn_coral{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.coral_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.coral_block.place", "block_coral_block"])
      item: 'horn_coral{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.coral_block.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.coral_block.step", "block_coral_block"])
      item: 'horn_coral{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.coral_block.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-crafter:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Crafter <aqua>Sounds
  options:
    Sound_Craft:
      spell: sb-prepare-sound(args=["block.crafter.craft", "block_crafter"])
      item: 'crafter{name: "<yellow>Craft <gold>Sound", lore: ["<grey><italic>block.crafter.craft"]}'
      slot: 0
    Sound_Fail:
      spell: sb-prepare-sound(args=["block.crafter.fail", "block_crafter"])
      item: 'crafter{name: "<yellow>Fail <gold>Sound", lore: ["<grey><italic>block.crafter.fail"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-creaking_heart:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Creaking Heart <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.creaking_heart.break", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.creaking_heart.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.creaking_heart.fall", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.creaking_heart.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.creaking_heart.hit", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.creaking_heart.hit"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["block.creaking_heart.hurt", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>block.creaking_heart.hurt"]}'
      slot: 3
    Sound_Idle:
      spell: sb-prepare-sound(args=["block.creaking_heart.idle", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>block.creaking_heart.idle"]}'
      slot: 4
    Sound_Place:
      spell: sb-prepare-sound(args=["block.creaking_heart.place", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.creaking_heart.place"]}'
      slot: 5
    Sound_Spawn:
      spell: sb-prepare-sound(args=["block.creaking_heart.spawn", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Spawn <gold>Sound", lore: ["<grey><italic>block.creaking_heart.spawn"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["block.creaking_heart.step", "block_creaking_heart"])
      item: 'creaking_heart{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.creaking_heart.step"]}'
      slot: 7
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-crop:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Crop <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.crop.break", "block_crop"])
      item: 'wheat_seeds{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.crop.break"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-deadbush:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Deadbush <aqua>Sounds
  options:
    Sound_Idle:
      spell: sb-prepare-sound(args=["block.deadbush.idle", "block_deadbush"])
      item: 'dead_bush{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>block.deadbush.idle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-decorated_pot:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Decorated Pot <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.decorated_pot.break", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.decorated_pot.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.decorated_pot.fall", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.decorated_pot.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.decorated_pot.hit", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.decorated_pot.hit"]}'
      slot: 2
    Sound_Insert:
      spell: sb-prepare-sound(args=["block.decorated_pot.insert", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Insert <gold>Sound", lore: ["<grey><italic>block.decorated_pot.insert"]}'
      slot: 3
    Sound_InsertFail:
      spell: sb-prepare-sound(args=["block.decorated_pot.insert_fail", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Insert Fail <gold>Sound", lore: ["<grey><italic>block.decorated_pot.insert_fail"]}'
      slot: 4
    Sound_Place:
      spell: sb-prepare-sound(args=["block.decorated_pot.place", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.decorated_pot.place"]}'
      slot: 5
    Sound_Shatter:
      spell: sb-prepare-sound(args=["block.decorated_pot.shatter", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Shatter <gold>Sound", lore: ["<grey><italic>block.decorated_pot.shatter"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["block.decorated_pot.step", "block_decorated_pot"])
      item: 'decorated_pot{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.decorated_pot.step"]}'
      slot: 7
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-deepslate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Deepslate <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.deepslate.break", "block_deepslate"])
      item: 'deepslate{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.deepslate.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.deepslate.fall", "block_deepslate"])
      item: 'deepslate{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.deepslate.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.deepslate.hit", "block_deepslate"])
      item: 'deepslate{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.deepslate.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.deepslate.place", "block_deepslate"])
      item: 'deepslate{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.deepslate.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.deepslate.step", "block_deepslate"])
      item: 'deepslate{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.deepslate.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-deepslate_bricks:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Deepslate Bricks <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.deepslate_bricks.break", "block_deepslate_bricks"])
      item: 'deepslate_bricks{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.deepslate_bricks.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.deepslate_bricks.fall", "block_deepslate_bricks"])
      item: 'deepslate_bricks{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.deepslate_bricks.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.deepslate_bricks.hit", "block_deepslate_bricks"])
      item: 'deepslate_bricks{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.deepslate_bricks.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.deepslate_bricks.place", "block_deepslate_bricks"])
      item: 'deepslate_bricks{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.deepslate_bricks.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.deepslate_bricks.step", "block_deepslate_bricks"])
      item: 'deepslate_bricks{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.deepslate_bricks.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-deepslate_tiles:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Deepslate Tiles <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.deepslate_tiles.break", "block_deepslate_tiles"])
      item: 'deepslate_tiles{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.deepslate_tiles.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.deepslate_tiles.fall", "block_deepslate_tiles"])
      item: 'deepslate_tiles{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.deepslate_tiles.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.deepslate_tiles.hit", "block_deepslate_tiles"])
      item: 'deepslate_tiles{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.deepslate_tiles.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.deepslate_tiles.place", "block_deepslate_tiles"])
      item: 'deepslate_tiles{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.deepslate_tiles.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.deepslate_tiles.step", "block_deepslate_tiles"])
      item: 'deepslate_tiles{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.deepslate_tiles.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-dispenser:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Dispenser <aqua>Sounds
  options:
    Sound_Dispense:
      spell: sb-prepare-sound(args=["block.dispenser.dispense", "block_dispenser"])
      item: 'dispenser{name: "<yellow>Dispense <gold>Sound", lore: ["<grey><italic>block.dispenser.dispense"]}'
      slot: 0
    Sound_Fail:
      spell: sb-prepare-sound(args=["block.dispenser.fail", "block_dispenser"])
      item: 'dispenser{name: "<yellow>Fail <gold>Sound", lore: ["<grey><italic>block.dispenser.fail"]}'
      slot: 1
    Sound_Launch:
      spell: sb-prepare-sound(args=["block.dispenser.launch", "block_dispenser"])
      item: 'dispenser{name: "<yellow>Launch <gold>Sound", lore: ["<grey><italic>block.dispenser.launch"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-dripstone_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Dripstone Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.dripstone_block.break", "block_dripstone_block"])
      item: 'dripstone_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.dripstone_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.dripstone_block.fall", "block_dripstone_block"])
      item: 'dripstone_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.dripstone_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.dripstone_block.hit", "block_dripstone_block"])
      item: 'dripstone_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.dripstone_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.dripstone_block.place", "block_dripstone_block"])
      item: 'dripstone_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.dripstone_block.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.dripstone_block.step", "block_dripstone_block"])
      item: 'dripstone_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.dripstone_block.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-enchantment_table:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Enchantment Table <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["block.enchantment_table.use", "block_enchantment_table"])
      item: 'enchanting_table{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>block.enchantment_table.use"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-end_gateway:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>End Gateway <aqua>Sounds
  options:
    Sound_Spawn:
      spell: sb-prepare-sound(args=["block.end_gateway.spawn", "block_end_gateway"])
      item: 'end_crystal{name: "<yellow>Spawn <gold>Sound", lore: ["<grey><italic>block.end_gateway.spawn"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-end_portal:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>End Portal <aqua>Sounds
  options:
    Sound_Spawn:
      spell: sb-prepare-sound(args=["block.end_portal.spawn", "block_end_portal"])
      item: 'ender_eye{name: "<yellow>Spawn <gold>Sound", lore: ["<grey><italic>block.end_portal.spawn"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-end_portal_frame:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>End Portal Frame <aqua>Sounds
  options:
    Sound_Fill:
      spell: sb-prepare-sound(args=["block.end_portal_frame.fill", "block_end_portal_frame"])
      item: 'end_portal_frame{name: "<yellow>Fill <gold>Sound", lore: ["<grey><italic>block.end_portal_frame.fill"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-ender_chest:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ender Chest <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.ender_chest.close", "block_ender_chest"])
      item: 'ender_chest{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.ender_chest.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.ender_chest.open", "block_ender_chest"])
      item: 'ender_chest{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.ender_chest.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-eyeblossom:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Eyeblossom <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.eyeblossom.close", "block_eyeblossom"])
      item: 'open_eyeblossom{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.eyeblossom.close"]}'
      slot: 0
    Sound_CloseLong:
      spell: sb-prepare-sound(args=["block.eyeblossom.close_long", "block_eyeblossom"])
      item: 'open_eyeblossom{name: "<yellow>Close Long <gold>Sound", lore: ["<grey><italic>block.eyeblossom.close_long"]}'
      slot: 1
    Sound_Idle:
      spell: sb-prepare-sound(args=["block.eyeblossom.idle", "block_eyeblossom"])
      item: 'open_eyeblossom{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>block.eyeblossom.idle"]}'
      slot: 2
    Sound_Open:
      spell: sb-prepare-sound(args=["block.eyeblossom.open", "block_eyeblossom"])
      item: 'open_eyeblossom{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.eyeblossom.open"]}'
      slot: 3
    Sound_OpenLong:
      spell: sb-prepare-sound(args=["block.eyeblossom.open_long", "block_eyeblossom"])
      item: 'open_eyeblossom{name: "<yellow>Open Long <gold>Sound", lore: ["<grey><italic>block.eyeblossom.open_long"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-fence_gate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Fence Gate <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.fence_gate.close", "block_fence_gate"])
      item: 'oak_fence_gate{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.fence_gate.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.fence_gate.open", "block_fence_gate"])
      item: 'oak_fence_gate{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.fence_gate.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-fire:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Fire <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.fire.ambient", "block_fire"])
      item: 'blaze_powder{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.fire.ambient"]}'
      slot: 0
    Sound_Extinguish:
      spell: sb-prepare-sound(args=["block.fire.extinguish", "block_fire"])
      item: 'blaze_powder{name: "<yellow>Extinguish <gold>Sound", lore: ["<grey><italic>block.fire.extinguish"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-firefly_bush:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Firefly Bush <aqua>Sounds
  options:
    Sound_Idle:
      spell: sb-prepare-sound(args=["block.firefly_bush.idle", "block_firefly_bush"])
      item: 'firefly_bush{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>block.firefly_bush.idle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-flowering_azalea:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Flowering Azalea <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.flowering_azalea.break", "block_flowering_azalea"])
      item: 'flowering_azalea{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.flowering_azalea.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.flowering_azalea.fall", "block_flowering_azalea"])
      item: 'flowering_azalea{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.flowering_azalea.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.flowering_azalea.hit", "block_flowering_azalea"])
      item: 'flowering_azalea{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.flowering_azalea.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.flowering_azalea.place", "block_flowering_azalea"])
      item: 'flowering_azalea{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.flowering_azalea.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.flowering_azalea.step", "block_flowering_azalea"])
      item: 'flowering_azalea{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.flowering_azalea.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-froglight:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Froglight <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.froglight.break", "block_froglight"])
      item: 'verdant_froglight{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.froglight.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.froglight.fall", "block_froglight"])
      item: 'verdant_froglight{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.froglight.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.froglight.hit", "block_froglight"])
      item: 'verdant_froglight{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.froglight.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.froglight.place", "block_froglight"])
      item: 'verdant_froglight{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.froglight.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.froglight.step", "block_froglight"])
      item: 'verdant_froglight{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.froglight.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-frogspawn:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Frogspawn <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.frogspawn.break", "block_frogspawn"])
      item: 'frogspawn{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.frogspawn.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.frogspawn.fall", "block_frogspawn"])
      item: 'frogspawn{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.frogspawn.fall"]}'
      slot: 1
    Sound_Hatch:
      spell: sb-prepare-sound(args=["block.frogspawn.hatch", "block_frogspawn"])
      item: 'frogspawn{name: "<yellow>Hatch <gold>Sound", lore: ["<grey><italic>block.frogspawn.hatch"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.frogspawn.hit", "block_frogspawn"])
      item: 'frogspawn{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.frogspawn.hit"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.frogspawn.place", "block_frogspawn"])
      item: 'frogspawn{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.frogspawn.place"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.frogspawn.step", "block_frogspawn"])
      item: 'frogspawn{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.frogspawn.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-fungus:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Fungus <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.fungus.break", "block_fungus"])
      item: 'crimson_fungus{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.fungus.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.fungus.fall", "block_fungus"])
      item: 'crimson_fungus{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.fungus.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.fungus.hit", "block_fungus"])
      item: 'crimson_fungus{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.fungus.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.fungus.place", "block_fungus"])
      item: 'crimson_fungus{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.fungus.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.fungus.step", "block_fungus"])
      item: 'crimson_fungus{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.fungus.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-furnace:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Furnace <aqua>Sounds
  options:
    Sound_FireCrackle:
      spell: sb-prepare-sound(args=["block.furnace.fire_crackle", "block_furnace"])
      item: 'furnace{name: "<yellow>Fire Crackle <gold>Sound", lore: ["<grey><italic>block.furnace.fire_crackle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-gilded_blackstone:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Gilded Blackstone <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.gilded_blackstone.break", "block_gilded_blackstone"])
      item: 'gilded_blackstone{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.gilded_blackstone.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.gilded_blackstone.fall", "block_gilded_blackstone"])
      item: 'gilded_blackstone{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.gilded_blackstone.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.gilded_blackstone.hit", "block_gilded_blackstone"])
      item: 'gilded_blackstone{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.gilded_blackstone.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.gilded_blackstone.place", "block_gilded_blackstone"])
      item: 'gilded_blackstone{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.gilded_blackstone.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.gilded_blackstone.step", "block_gilded_blackstone"])
      item: 'gilded_blackstone{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.gilded_blackstone.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-glass:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Glass <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.glass.break", "block_glass"])
      item: 'glass{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.glass.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.glass.fall", "block_glass"])
      item: 'glass{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.glass.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.glass.hit", "block_glass"])
      item: 'glass{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.glass.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.glass.place", "block_glass"])
      item: 'glass{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.glass.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.glass.step", "block_glass"])
      item: 'glass{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.glass.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-grass:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Grass <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.grass.break", "block_grass"])
      item: 'short_grass{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.grass.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.grass.fall", "block_grass"])
      item: 'short_grass{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.grass.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.grass.hit", "block_grass"])
      item: 'short_grass{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.grass.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.grass.place", "block_grass"])
      item: 'short_grass{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.grass.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.grass.step", "block_grass"])
      item: 'short_grass{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.grass.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-gravel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Gravel <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.gravel.break", "block_gravel"])
      item: 'gravel{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.gravel.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.gravel.fall", "block_gravel"])
      item: 'gravel{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.gravel.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.gravel.hit", "block_gravel"])
      item: 'gravel{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.gravel.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.gravel.place", "block_gravel"])
      item: 'gravel{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.gravel.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.gravel.step", "block_gravel"])
      item: 'gravel{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.gravel.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-grindstone:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Grindstone <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["block.grindstone.use", "block_grindstone"])
      item: 'grindstone{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>block.grindstone.use"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-growing_plant:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Growing Plant <aqua>Sounds
  options:
    Sound_Crop:
      spell: sb-prepare-sound(args=["block.growing_plant.crop", "block_growing_plant"])
      item: 'wheat_seeds{name: "<yellow>Crop <gold>Sound", lore: ["<grey><italic>block.growing_plant.crop"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-hanging_roots:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Hanging Roots <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.hanging_roots.break", "block_hanging_roots"])
      item: 'hanging_roots{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.hanging_roots.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.hanging_roots.fall", "block_hanging_roots"])
      item: 'hanging_roots{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.hanging_roots.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.hanging_roots.hit", "block_hanging_roots"])
      item: 'hanging_roots{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.hanging_roots.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.hanging_roots.place", "block_hanging_roots"])
      item: 'hanging_roots{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.hanging_roots.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.hanging_roots.step", "block_hanging_roots"])
      item: 'hanging_roots{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.hanging_roots.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-hanging_sign:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Hanging Sign <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.hanging_sign.break", "block_hanging_sign"])
      item: 'oak_hanging_sign{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.hanging_sign.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.hanging_sign.fall", "block_hanging_sign"])
      item: 'oak_hanging_sign{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.hanging_sign.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.hanging_sign.hit", "block_hanging_sign"])
      item: 'oak_hanging_sign{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.hanging_sign.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.hanging_sign.place", "block_hanging_sign"])
      item: 'oak_hanging_sign{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.hanging_sign.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.hanging_sign.step", "block_hanging_sign"])
      item: 'oak_hanging_sign{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.hanging_sign.step"]}'
      slot: 4
    Sound_WaxedInteractFail:
      spell: sb-prepare-sound(args=["block.hanging_sign.waxed_interact_fail", "block_hanging_sign"])
      item: 'oak_hanging_sign{name: "<yellow>Waxed Interact Fail <gold>Sound", lore: ["<grey><italic>block.hanging_sign.waxed_interact_fail"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-heavy_core:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Heavy Core <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.heavy_core.break", "block_heavy_core"])
      item: 'heavy_core{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.heavy_core.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.heavy_core.fall", "block_heavy_core"])
      item: 'heavy_core{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.heavy_core.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.heavy_core.hit", "block_heavy_core"])
      item: 'heavy_core{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.heavy_core.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.heavy_core.place", "block_heavy_core"])
      item: 'heavy_core{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.heavy_core.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.heavy_core.step", "block_heavy_core"])
      item: 'heavy_core{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.heavy_core.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-honey_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Honey Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.honey_block.break", "block_honey_block"])
      item: 'honey_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.honey_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.honey_block.fall", "block_honey_block"])
      item: 'honey_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.honey_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.honey_block.hit", "block_honey_block"])
      item: 'honey_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.honey_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.honey_block.place", "block_honey_block"])
      item: 'honey_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.honey_block.place"]}'
      slot: 3
    Sound_Slide:
      spell: sb-prepare-sound(args=["block.honey_block.slide", "block_honey_block"])
      item: 'honey_block{name: "<yellow>Slide <gold>Sound", lore: ["<grey><italic>block.honey_block.slide"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.honey_block.step", "block_honey_block"])
      item: 'honey_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.honey_block.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-iron:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Iron <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.iron.break", "block_iron"])
      item: 'iron_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.iron.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.iron.fall", "block_iron"])
      item: 'iron_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.iron.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.iron.hit", "block_iron"])
      item: 'iron_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.iron.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.iron.place", "block_iron"])
      item: 'iron_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.iron.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.iron.step", "block_iron"])
      item: 'iron_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.iron.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-iron_door:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Iron Door <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.iron_door.close", "block_iron_door"])
      item: 'iron_door{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.iron_door.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.iron_door.open", "block_iron_door"])
      item: 'iron_door{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.iron_door.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-iron_trapdoor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Iron Trapdoor <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.iron_trapdoor.close", "block_iron_trapdoor"])
      item: 'iron_trapdoor{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.iron_trapdoor.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.iron_trapdoor.open", "block_iron_trapdoor"])
      item: 'iron_trapdoor{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.iron_trapdoor.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-ladder:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ladder <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.ladder.break", "block_ladder"])
      item: 'ladder{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.ladder.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.ladder.fall", "block_ladder"])
      item: 'ladder{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.ladder.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.ladder.hit", "block_ladder"])
      item: 'ladder{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.ladder.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.ladder.place", "block_ladder"])
      item: 'ladder{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.ladder.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.ladder.step", "block_ladder"])
      item: 'ladder{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.ladder.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-lantern:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lantern <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.lantern.break", "block_lantern"])
      item: 'lantern{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.lantern.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.lantern.fall", "block_lantern"])
      item: 'lantern{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.lantern.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.lantern.hit", "block_lantern"])
      item: 'lantern{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.lantern.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.lantern.place", "block_lantern"])
      item: 'lantern{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.lantern.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.lantern.step", "block_lantern"])
      item: 'lantern{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.lantern.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-large_amethyst_bud:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Large Amethyst Bud <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.large_amethyst_bud.break", "block_large_amethyst_bud"])
      item: 'large_amethyst_bud{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.large_amethyst_bud.break"]}'
      slot: 0
    Sound_Place:
      spell: sb-prepare-sound(args=["block.large_amethyst_bud.place", "block_large_amethyst_bud"])
      item: 'large_amethyst_bud{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.large_amethyst_bud.place"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-lava:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lava <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.lava.ambient", "block_lava"])
      item: 'lava_bucket{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.lava.ambient"]}'
      slot: 0
    Sound_Extinguish:
      spell: sb-prepare-sound(args=["block.lava.extinguish", "block_lava"])
      item: 'lava_bucket{name: "<yellow>Extinguish <gold>Sound", lore: ["<grey><italic>block.lava.extinguish"]}'
      slot: 1
    Sound_Pop:
      spell: sb-prepare-sound(args=["block.lava.pop", "block_lava"])
      item: 'lava_bucket{name: "<yellow>Pop <gold>Sound", lore: ["<grey><italic>block.lava.pop"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-leaf_litter:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Leaf Litter <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.leaf_litter.break", "block_leaf_litter"])
      item: 'leaf_litter{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.leaf_litter.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.leaf_litter.fall", "block_leaf_litter"])
      item: 'leaf_litter{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.leaf_litter.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.leaf_litter.hit", "block_leaf_litter"])
      item: 'leaf_litter{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.leaf_litter.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.leaf_litter.place", "block_leaf_litter"])
      item: 'leaf_litter{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.leaf_litter.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.leaf_litter.step", "block_leaf_litter"])
      item: 'leaf_litter{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.leaf_litter.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-lever:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lever <aqua>Sounds
  options:
    Sound_Click:
      spell: sb-prepare-sound(args=["block.lever.click", "block_lever"])
      item: 'lever{name: "<yellow>Click <gold>Sound", lore: ["<grey><italic>block.lever.click"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-lily_pad:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lily Pad <aqua>Sounds
  options:
    Sound_Place:
      spell: sb-prepare-sound(args=["block.lily_pad.place", "block_lily_pad"])
      item: 'lily_pad{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.lily_pad.place"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-lodestone:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lodestone <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.lodestone.break", "block_lodestone"])
      item: 'lodestone{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.lodestone.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.lodestone.fall", "block_lodestone"])
      item: 'lodestone{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.lodestone.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.lodestone.hit", "block_lodestone"])
      item: 'lodestone{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.lodestone.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.lodestone.place", "block_lodestone"])
      item: 'lodestone{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.lodestone.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.lodestone.step", "block_lodestone"])
      item: 'lodestone{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.lodestone.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-mangrove_roots:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mangrove Roots <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.mangrove_roots.break", "block_mangrove_roots"])
      item: 'mangrove_roots{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.mangrove_roots.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.mangrove_roots.fall", "block_mangrove_roots"])
      item: 'mangrove_roots{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.mangrove_roots.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.mangrove_roots.hit", "block_mangrove_roots"])
      item: 'mangrove_roots{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.mangrove_roots.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.mangrove_roots.place", "block_mangrove_roots"])
      item: 'mangrove_roots{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.mangrove_roots.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.mangrove_roots.step", "block_mangrove_roots"])
      item: 'mangrove_roots{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.mangrove_roots.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-medium_amethyst_bud:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Medium Amethyst Bud <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.medium_amethyst_bud.break", "block_medium_amethyst_bud"])
      item: 'medium_amethyst_bud{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.medium_amethyst_bud.break"]}'
      slot: 0
    Sound_Place:
      spell: sb-prepare-sound(args=["block.medium_amethyst_bud.place", "block_medium_amethyst_bud"])
      item: 'medium_amethyst_bud{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.medium_amethyst_bud.place"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-metal:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Metal <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.metal.break", "block_metal"])
      item: 'iron_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.metal.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.metal.fall", "block_metal"])
      item: 'iron_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.metal.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.metal.hit", "block_metal"])
      item: 'iron_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.metal.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.metal.place", "block_metal"])
      item: 'iron_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.metal.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.metal.step", "block_metal"])
      item: 'iron_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.metal.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-metal_pressure_plate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Metal Pressure Plate <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.metal_pressure_plate.click_off", "block_metal_pressure_plate"])
      item: 'heavy_weighted_pressure_plate{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.metal_pressure_plate.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.metal_pressure_plate.click_on", "block_metal_pressure_plate"])
      item: 'heavy_weighted_pressure_plate{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.metal_pressure_plate.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-moss:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Moss <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.moss.break", "block_moss"])
      item: 'moss_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.moss.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.moss.fall", "block_moss"])
      item: 'moss_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.moss.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.moss.hit", "block_moss"])
      item: 'moss_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.moss.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.moss.place", "block_moss"])
      item: 'moss_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.moss.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.moss.step", "block_moss"])
      item: 'moss_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.moss.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-moss_carpet:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Moss Carpet <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.moss_carpet.break", "block_moss_carpet"])
      item: 'moss_carpet{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.moss_carpet.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.moss_carpet.fall", "block_moss_carpet"])
      item: 'moss_carpet{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.moss_carpet.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.moss_carpet.hit", "block_moss_carpet"])
      item: 'moss_carpet{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.moss_carpet.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.moss_carpet.place", "block_moss_carpet"])
      item: 'moss_carpet{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.moss_carpet.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.moss_carpet.step", "block_moss_carpet"])
      item: 'moss_carpet{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.moss_carpet.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-mud:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mud <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.mud.break", "block_mud"])
      item: 'mud{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.mud.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.mud.fall", "block_mud"])
      item: 'mud{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.mud.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.mud.hit", "block_mud"])
      item: 'mud{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.mud.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.mud.place", "block_mud"])
      item: 'mud{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.mud.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.mud.step", "block_mud"])
      item: 'mud{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.mud.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-mud_bricks:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mud Bricks <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.mud_bricks.break", "block_mud_bricks"])
      item: 'mud_bricks{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.mud_bricks.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.mud_bricks.fall", "block_mud_bricks"])
      item: 'mud_bricks{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.mud_bricks.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.mud_bricks.hit", "block_mud_bricks"])
      item: 'mud_bricks{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.mud_bricks.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.mud_bricks.place", "block_mud_bricks"])
      item: 'mud_bricks{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.mud_bricks.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.mud_bricks.step", "block_mud_bricks"])
      item: 'mud_bricks{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.mud_bricks.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-muddy_mangrove_roots:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Muddy Mangrove Roots <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.muddy_mangrove_roots.break", "block_muddy_mangrove_roots"])
      item: 'muddy_mangrove_roots{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.muddy_mangrove_roots.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.muddy_mangrove_roots.fall", "block_muddy_mangrove_roots"])
      item: 'muddy_mangrove_roots{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.muddy_mangrove_roots.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.muddy_mangrove_roots.hit", "block_muddy_mangrove_roots"])
      item: 'muddy_mangrove_roots{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.muddy_mangrove_roots.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.muddy_mangrove_roots.place", "block_muddy_mangrove_roots"])
      item: 'muddy_mangrove_roots{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.muddy_mangrove_roots.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.muddy_mangrove_roots.step", "block_muddy_mangrove_roots"])
      item: 'muddy_mangrove_roots{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.muddy_mangrove_roots.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_bricks:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Bricks <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_bricks.break", "block_nether_bricks"])
      item: 'nether_bricks{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_bricks.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nether_bricks.fall", "block_nether_bricks"])
      item: 'nether_bricks{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nether_bricks.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nether_bricks.hit", "block_nether_bricks"])
      item: 'nether_bricks{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nether_bricks.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nether_bricks.place", "block_nether_bricks"])
      item: 'nether_bricks{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nether_bricks.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nether_bricks.step", "block_nether_bricks"])
      item: 'nether_bricks{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nether_bricks.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_gold_ore:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Gold Ore <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_gold_ore.break", "block_nether_gold_ore"])
      item: 'nether_gold_ore{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_gold_ore.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nether_gold_ore.fall", "block_nether_gold_ore"])
      item: 'nether_gold_ore{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nether_gold_ore.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nether_gold_ore.hit", "block_nether_gold_ore"])
      item: 'nether_gold_ore{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nether_gold_ore.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nether_gold_ore.place", "block_nether_gold_ore"])
      item: 'nether_gold_ore{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nether_gold_ore.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nether_gold_ore.step", "block_nether_gold_ore"])
      item: 'nether_gold_ore{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nether_gold_ore.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_ore:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Ore <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_ore.break", "block_nether_ore"])
      item: 'nether_quartz_ore{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_ore.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nether_ore.fall", "block_nether_ore"])
      item: 'nether_quartz_ore{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nether_ore.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nether_ore.hit", "block_nether_ore"])
      item: 'nether_quartz_ore{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nether_ore.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nether_ore.place", "block_nether_ore"])
      item: 'nether_quartz_ore{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nether_ore.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nether_ore.step", "block_nether_ore"])
      item: 'nether_quartz_ore{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nether_ore.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_sprouts:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Sprouts <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_sprouts.break", "block_nether_sprouts"])
      item: 'nether_sprouts{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_sprouts.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nether_sprouts.fall", "block_nether_sprouts"])
      item: 'nether_sprouts{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nether_sprouts.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nether_sprouts.hit", "block_nether_sprouts"])
      item: 'nether_sprouts{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nether_sprouts.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nether_sprouts.place", "block_nether_sprouts"])
      item: 'nether_sprouts{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nether_sprouts.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nether_sprouts.step", "block_nether_sprouts"])
      item: 'nether_sprouts{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nether_sprouts.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wart:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wart <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_wart.break", "block_nether_wart"])
      item: 'nether_wart{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_wart.break"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_wood.break", "block_nether_wood"])
      item: 'warped_hyphae{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_wood.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nether_wood.fall", "block_nether_wood"])
      item: 'warped_hyphae{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nether_wood.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nether_wood.hit", "block_nether_wood"])
      item: 'warped_hyphae{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nether_wood.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nether_wood.place", "block_nether_wood"])
      item: 'warped_hyphae{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nether_wood.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nether_wood.step", "block_nether_wood"])
      item: 'warped_hyphae{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nether_wood.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood_button:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood Button <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.nether_wood_button.click_off", "block_nether_wood_button"])
      item: 'warped_button{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.nether_wood_button.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.nether_wood_button.click_on", "block_nether_wood_button"])
      item: 'warped_button{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.nether_wood_button.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood_door:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood Door <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.nether_wood_door.close", "block_nether_wood_door"])
      item: 'warped_door{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.nether_wood_door.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.nether_wood_door.open", "block_nether_wood_door"])
      item: 'warped_door{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.nether_wood_door.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood_fence_gate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood Fence Gate <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.nether_wood_fence_gate.close", "block_nether_wood_fence_gate"])
      item: 'warped_fence_gate{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.nether_wood_fence_gate.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.nether_wood_fence_gate.open", "block_nether_wood_fence_gate"])
      item: 'warped_fence_gate{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.nether_wood_fence_gate.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood_hanging_sign:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood Hanging Sign <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nether_wood_hanging_sign.break", "block_nether_wood_hanging_sign"])
      item: 'warped_hanging_sign{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nether_wood_hanging_sign.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nether_wood_hanging_sign.fall", "block_nether_wood_hanging_sign"])
      item: 'warped_hanging_sign{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nether_wood_hanging_sign.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nether_wood_hanging_sign.hit", "block_nether_wood_hanging_sign"])
      item: 'warped_hanging_sign{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nether_wood_hanging_sign.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nether_wood_hanging_sign.place", "block_nether_wood_hanging_sign"])
      item: 'warped_hanging_sign{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nether_wood_hanging_sign.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nether_wood_hanging_sign.step", "block_nether_wood_hanging_sign"])
      item: 'warped_hanging_sign{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nether_wood_hanging_sign.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood_pressure_plate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood Pressure Plate <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.nether_wood_pressure_plate.click_off", "block_nether_wood_pressure_plate"])
      item: 'warped_pressure_plate{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.nether_wood_pressure_plate.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.nether_wood_pressure_plate.click_on", "block_nether_wood_pressure_plate"])
      item: 'warped_pressure_plate{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.nether_wood_pressure_plate.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nether_wood_trapdoor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wood Trapdoor <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.nether_wood_trapdoor.close", "block_nether_wood_trapdoor"])
      item: 'warped_trapdoor{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.nether_wood_trapdoor.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.nether_wood_trapdoor.open", "block_nether_wood_trapdoor"])
      item: 'warped_trapdoor{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.nether_wood_trapdoor.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-netherite_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Netherite Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.netherite_block.break", "block_netherite_block"])
      item: 'netherite_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.netherite_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.netherite_block.fall", "block_netherite_block"])
      item: 'netherite_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.netherite_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.netherite_block.hit", "block_netherite_block"])
      item: 'netherite_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.netherite_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.netherite_block.place", "block_netherite_block"])
      item: 'netherite_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.netherite_block.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.netherite_block.step", "block_netherite_block"])
      item: 'netherite_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.netherite_block.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-netherrack:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Netherrack <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.netherrack.break", "block_netherrack"])
      item: 'netherrack{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.netherrack.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.netherrack.fall", "block_netherrack"])
      item: 'netherrack{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.netherrack.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.netherrack.hit", "block_netherrack"])
      item: 'netherrack{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.netherrack.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.netherrack.place", "block_netherrack"])
      item: 'netherrack{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.netherrack.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.netherrack.step", "block_netherrack"])
      item: 'netherrack{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.netherrack.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-note_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Note Block <aqua>Sounds
  options:
    Sound_Banjo:
      spell: sb-prepare-sound(args=["block.note_block.banjo", "block_note_block"])
      item: 'note_block{name: "<yellow>Banjo <gold>Sound", lore: ["<grey><italic>block.note_block.banjo"]}'
      slot: 0
    Sound_Basedrum:
      spell: sb-prepare-sound(args=["block.note_block.basedrum", "block_note_block"])
      item: 'note_block{name: "<yellow>Basedrum <gold>Sound", lore: ["<grey><italic>block.note_block.basedrum"]}'
      slot: 1
    Sound_Bass:
      spell: sb-prepare-sound(args=["block.note_block.bass", "block_note_block"])
      item: 'note_block{name: "<yellow>Bass <gold>Sound", lore: ["<grey><italic>block.note_block.bass"]}'
      slot: 2
    Sound_Bell:
      spell: sb-prepare-sound(args=["block.note_block.bell", "block_note_block"])
      item: 'note_block{name: "<yellow>Bell <gold>Sound", lore: ["<grey><italic>block.note_block.bell"]}'
      slot: 3
    Sound_Bit:
      spell: sb-prepare-sound(args=["block.note_block.bit", "block_note_block"])
      item: 'note_block{name: "<yellow>Bit <gold>Sound", lore: ["<grey><italic>block.note_block.bit"]}'
      slot: 4
    Sound_Chime:
      spell: sb-prepare-sound(args=["block.note_block.chime", "block_note_block"])
      item: 'note_block{name: "<yellow>Chime <gold>Sound", lore: ["<grey><italic>block.note_block.chime"]}'
      slot: 5
    Sound_CowBell:
      spell: sb-prepare-sound(args=["block.note_block.cow_bell", "block_note_block"])
      item: 'note_block{name: "<yellow>Cow Bell <gold>Sound", lore: ["<grey><italic>block.note_block.cow_bell"]}'
      slot: 6
    Sound_Didgeridoo:
      spell: sb-prepare-sound(args=["block.note_block.didgeridoo", "block_note_block"])
      item: 'note_block{name: "<yellow>Didgeridoo <gold>Sound", lore: ["<grey><italic>block.note_block.didgeridoo"]}'
      slot: 7
    Sound_Flute:
      spell: sb-prepare-sound(args=["block.note_block.flute", "block_note_block"])
      item: 'note_block{name: "<yellow>Flute <gold>Sound", lore: ["<grey><italic>block.note_block.flute"]}'
      slot: 8
    Sound_Guitar:
      spell: sb-prepare-sound(args=["block.note_block.guitar", "block_note_block"])
      item: 'note_block{name: "<yellow>Guitar <gold>Sound", lore: ["<grey><italic>block.note_block.guitar"]}'
      slot: 9
    Sound_Harp:
      spell: sb-prepare-sound(args=["block.note_block.harp", "block_note_block"])
      item: 'note_block{name: "<yellow>Harp <gold>Sound", lore: ["<grey><italic>block.note_block.harp"]}'
      slot: 10
    Sound_Hat:
      spell: sb-prepare-sound(args=["block.note_block.hat", "block_note_block"])
      item: 'note_block{name: "<yellow>Hat <gold>Sound", lore: ["<grey><italic>block.note_block.hat"]}'
      slot: 11
    Sound_IronXylophone:
      spell: sb-prepare-sound(args=["block.note_block.iron_xylophone", "block_note_block"])
      item: 'note_block{name: "<yellow>Iron Xylophone <gold>Sound", lore: ["<grey><italic>block.note_block.iron_xylophone"]}'
      slot: 12
    Sound_Pling:
      spell: sb-prepare-sound(args=["block.note_block.pling", "block_note_block"])
      item: 'note_block{name: "<yellow>Pling <gold>Sound", lore: ["<grey><italic>block.note_block.pling"]}'
      slot: 13
    Sound_Snare:
      spell: sb-prepare-sound(args=["block.note_block.snare", "block_note_block"])
      item: 'note_block{name: "<yellow>Snare <gold>Sound", lore: ["<grey><italic>block.note_block.snare"]}'
      slot: 14
    Sound_Xylophone:
      spell: sb-prepare-sound(args=["block.note_block.xylophone", "block_note_block"])
      item: 'note_block{name: "<yellow>Xylophone <gold>Sound", lore: ["<grey><italic>block.note_block.xylophone"]}'
      slot: 15
    Imitate:
      spell: sb-block-note_block-imitate
      item: 'note_block{name: "<gold>Imitate Sounds"}'
      slot: 16
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-block-note_block-imitate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Imitate <aqua>Sounds
  options:
    Sound_Creeper:
      spell: sb-prepare-sound(args=["block.note_block.imitate.creeper", "block_note_block_imitate"])
      item: 'note_block{name: "<yellow>Creeper <gold>Sound", lore: ["<grey><italic>block.note_block.imitate.creeper"]}'
      slot: 0
    Sound_EnderDragon:
      spell: sb-prepare-sound(args=["block.note_block.imitate.ender_dragon", "block_note_block_imitate"])
      item: 'note_block{name: "<yellow>Ender Dragon <gold>Sound", lore: ["<grey><italic>block.note_block.imitate.ender_dragon"]}'
      slot: 1
    Sound_Piglin:
      spell: sb-prepare-sound(args=["block.note_block.imitate.piglin", "block_note_block_imitate"])
      item: 'note_block{name: "<yellow>Piglin <gold>Sound", lore: ["<grey><italic>block.note_block.imitate.piglin"]}'
      slot: 2
    Sound_Skeleton:
      spell: sb-prepare-sound(args=["block.note_block.imitate.skeleton", "block_note_block_imitate"])
      item: 'note_block{name: "<yellow>Skeleton <gold>Sound", lore: ["<grey><italic>block.note_block.imitate.skeleton"]}'
      slot: 3
    Sound_WitherSkeleton:
      spell: sb-prepare-sound(args=["block.note_block.imitate.wither_skeleton", "block_note_block_imitate"])
      item: 'note_block{name: "<yellow>Wither Skeleton <gold>Sound", lore: ["<grey><italic>block.note_block.imitate.wither_skeleton"]}'
      slot: 4
    Sound_Zombie:
      spell: sb-prepare-sound(args=["block.note_block.imitate.zombie", "block_note_block_imitate"])
      item: 'note_block{name: "<yellow>Zombie <gold>Sound", lore: ["<grey><italic>block.note_block.imitate.zombie"]}'
      slot: 5
    Button_Back:
      spell: sb-block-note_block
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-nylium:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nylium <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.nylium.break", "block_nylium"])
      item: 'crimson_nylium{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.nylium.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.nylium.fall", "block_nylium"])
      item: 'crimson_nylium{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.nylium.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.nylium.hit", "block_nylium"])
      item: 'crimson_nylium{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.nylium.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.nylium.place", "block_nylium"])
      item: 'crimson_nylium{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.nylium.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.nylium.step", "block_nylium"])
      item: 'crimson_nylium{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.nylium.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-packed_mud:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Packed Mud <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.packed_mud.break", "block_packed_mud"])
      item: 'packed_mud{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.packed_mud.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.packed_mud.fall", "block_packed_mud"])
      item: 'packed_mud{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.packed_mud.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.packed_mud.hit", "block_packed_mud"])
      item: 'packed_mud{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.packed_mud.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.packed_mud.place", "block_packed_mud"])
      item: 'packed_mud{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.packed_mud.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.packed_mud.step", "block_packed_mud"])
      item: 'packed_mud{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.packed_mud.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-pale_hanging_moss:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pale Hanging Moss <aqua>Sounds
  options:
    Sound_Idle:
      spell: sb-prepare-sound(args=["block.pale_hanging_moss.idle", "block_pale_hanging_moss"])
      item: 'pale_hanging_moss{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>block.pale_hanging_moss.idle"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-pink_petals:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pink Petals <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.pink_petals.break", "block_pink_petals"])
      item: 'pink_petals{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.pink_petals.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.pink_petals.fall", "block_pink_petals"])
      item: 'pink_petals{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.pink_petals.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.pink_petals.hit", "block_pink_petals"])
      item: 'pink_petals{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.pink_petals.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.pink_petals.place", "block_pink_petals"])
      item: 'pink_petals{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.pink_petals.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.pink_petals.step", "block_pink_petals"])
      item: 'pink_petals{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.pink_petals.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-piston:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Piston <aqua>Sounds
  options:
    Sound_Contract:
      spell: sb-prepare-sound(args=["block.piston.contract", "block_piston"])
      item: 'piston{name: "<yellow>Contract <gold>Sound", lore: ["<grey><italic>block.piston.contract"]}'
      slot: 0
    Sound_Extend:
      spell: sb-prepare-sound(args=["block.piston.extend", "block_piston"])
      item: 'piston{name: "<yellow>Extend <gold>Sound", lore: ["<grey><italic>block.piston.extend"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-pointed_dripstone:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pointed Dripstone <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.break", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.break"]}'
      slot: 0
    Sound_DripLava:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.drip_lava", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Drip Lava <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.drip_lava"]}'
      slot: 1
    Sound_DripLavaIntoCauldron:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.drip_lava_into_cauldron", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Drip Lava Into Cauldron <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.drip_lava_into_cauldron"]}'
      slot: 2
    Sound_DripWater:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.drip_water", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Drip Water <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.drip_water"]}'
      slot: 3
    Sound_DripWaterIntoCauldron:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.drip_water_into_cauldron", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Drip Water Into Cauldron <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.drip_water_into_cauldron"]}'
      slot: 4
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.fall", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.fall"]}'
      slot: 5
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.hit", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.hit"]}'
      slot: 6
    Sound_Land:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.land", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Land <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.land"]}'
      slot: 7
    Sound_Place:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.place", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.place"]}'
      slot: 8
    Sound_Step:
      spell: sb-prepare-sound(args=["block.pointed_dripstone.step", "block_pointed_dripstone"])
      item: 'pointed_dripstone{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.pointed_dripstone.step"]}'
      slot: 9
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-block-polished_deepslate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Polished Deepslate <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.polished_deepslate.break", "block_polished_deepslate"])
      item: 'polished_deepslate{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.polished_deepslate.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.polished_deepslate.fall", "block_polished_deepslate"])
      item: 'polished_deepslate{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.polished_deepslate.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.polished_deepslate.hit", "block_polished_deepslate"])
      item: 'polished_deepslate{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.polished_deepslate.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.polished_deepslate.place", "block_polished_deepslate"])
      item: 'polished_deepslate{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.polished_deepslate.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.polished_deepslate.step", "block_polished_deepslate"])
      item: 'polished_deepslate{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.polished_deepslate.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-polished_tuff:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Polished Tuff <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.polished_tuff.break", "block_polished_tuff"])
      item: 'polished_tuff{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.polished_tuff.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.polished_tuff.fall", "block_polished_tuff"])
      item: 'polished_tuff{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.polished_tuff.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.polished_tuff.hit", "block_polished_tuff"])
      item: 'polished_tuff{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.polished_tuff.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.polished_tuff.place", "block_polished_tuff"])
      item: 'polished_tuff{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.polished_tuff.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.polished_tuff.step", "block_polished_tuff"])
      item: 'polished_tuff{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.polished_tuff.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-portal:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Portal <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.portal.ambient", "block_portal"])
      item: 'obsidian{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.portal.ambient"]}'
      slot: 0
    Sound_Travel:
      spell: sb-prepare-sound(args=["block.portal.travel", "block_portal"])
      item: 'obsidian{name: "<yellow>Travel <gold>Sound", lore: ["<grey><italic>block.portal.travel"]}'
      slot: 1
    Sound_Trigger:
      spell: sb-prepare-sound(args=["block.portal.trigger", "block_portal"])
      item: 'obsidian{name: "<yellow>Trigger <gold>Sound", lore: ["<grey><italic>block.portal.trigger"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-powder_snow:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Powder Snow <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.powder_snow.break", "block_powder_snow"])
      item: 'powder_snow_bucket{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.powder_snow.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.powder_snow.fall", "block_powder_snow"])
      item: 'powder_snow_bucket{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.powder_snow.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.powder_snow.hit", "block_powder_snow"])
      item: 'powder_snow_bucket{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.powder_snow.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.powder_snow.place", "block_powder_snow"])
      item: 'powder_snow_bucket{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.powder_snow.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.powder_snow.step", "block_powder_snow"])
      item: 'powder_snow_bucket{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.powder_snow.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-pumpkin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pumpkin <aqua>Sounds
  options:
    Sound_Carve:
      spell: sb-prepare-sound(args=["block.pumpkin.carve", "block_pumpkin"])
      item: 'pumpkin{name: "<yellow>Carve <gold>Sound", lore: ["<grey><italic>block.pumpkin.carve"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-redstone_torch:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Redstone Torch <aqua>Sounds
  options:
    Sound_Burnout:
      spell: sb-prepare-sound(args=["block.redstone_torch.burnout", "block_redstone_torch"])
      item: 'redstone_torch{name: "<yellow>Burnout <gold>Sound", lore: ["<grey><italic>block.redstone_torch.burnout"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-resin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Resin <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.resin.break", "block_resin"])
      item: 'resin_clump{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.resin.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.resin.fall", "block_resin"])
      item: 'resin_clump{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.resin.fall"]}'
      slot: 1
    Sound_Place:
      spell: sb-prepare-sound(args=["block.resin.place", "block_resin"])
      item: 'resin_clump{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.resin.place"]}'
      slot: 2
    Sound_Step:
      spell: sb-prepare-sound(args=["block.resin.step", "block_resin"])
      item: 'resin_clump{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.resin.step"]}'
      slot: 3
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-resin_bricks:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Resin Bricks <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.resin_bricks.break", "block_resin_bricks"])
      item: 'resin_bricks{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.resin_bricks.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.resin_bricks.fall", "block_resin_bricks"])
      item: 'resin_bricks{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.resin_bricks.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.resin_bricks.hit", "block_resin_bricks"])
      item: 'resin_bricks{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.resin_bricks.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.resin_bricks.place", "block_resin_bricks"])
      item: 'resin_bricks{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.resin_bricks.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.resin_bricks.step", "block_resin_bricks"])
      item: 'resin_bricks{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.resin_bricks.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-respawn_anchor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Respawn Anchor <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.respawn_anchor.ambient", "block_respawn_anchor"])
      item: 'respawn_anchor{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.respawn_anchor.ambient"]}'
      slot: 0
    Sound_Charge:
      spell: sb-prepare-sound(args=["block.respawn_anchor.charge", "block_respawn_anchor"])
      item: 'respawn_anchor{name: "<yellow>Charge <gold>Sound", lore: ["<grey><italic>block.respawn_anchor.charge"]}'
      slot: 1
    Sound_Deplete:
      spell: sb-prepare-sound(args=["block.respawn_anchor.deplete", "block_respawn_anchor"])
      item: 'respawn_anchor{name: "<yellow>Deplete <gold>Sound", lore: ["<grey><italic>block.respawn_anchor.deplete"]}'
      slot: 2
    Sound_SetSpawn:
      spell: sb-prepare-sound(args=["block.respawn_anchor.set_spawn", "block_respawn_anchor"])
      item: 'respawn_anchor{name: "<yellow>Set Spawn <gold>Sound", lore: ["<grey><italic>block.respawn_anchor.set_spawn"]}'
      slot: 3
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-rooted_dirt:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Rooted Dirt <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.rooted_dirt.break", "block_rooted_dirt"])
      item: 'rooted_dirt{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.rooted_dirt.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.rooted_dirt.fall", "block_rooted_dirt"])
      item: 'rooted_dirt{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.rooted_dirt.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.rooted_dirt.hit", "block_rooted_dirt"])
      item: 'rooted_dirt{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.rooted_dirt.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.rooted_dirt.place", "block_rooted_dirt"])
      item: 'rooted_dirt{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.rooted_dirt.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.rooted_dirt.step", "block_rooted_dirt"])
      item: 'rooted_dirt{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.rooted_dirt.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-roots:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Roots <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.roots.break", "block_roots"])
      item: 'crimson_roots{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.roots.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.roots.fall", "block_roots"])
      item: 'crimson_roots{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.roots.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.roots.hit", "block_roots"])
      item: 'crimson_roots{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.roots.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.roots.place", "block_roots"])
      item: 'crimson_roots{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.roots.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.roots.step", "block_roots"])
      item: 'crimson_roots{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.roots.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sand:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sand <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sand.break", "block_sand"])
      item: 'sand{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sand.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sand.fall", "block_sand"])
      item: 'sand{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sand.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sand.hit", "block_sand"])
      item: 'sand{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sand.hit"]}'
      slot: 2
    Sound_Idle:
      spell: sb-prepare-sound(args=["block.sand.idle", "block_sand"])
      item: 'sand{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>block.sand.idle"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sand.place", "block_sand"])
      item: 'sand{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sand.place"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sand.step", "block_sand"])
      item: 'sand{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sand.step"]}'
      slot: 5
    Sound_Wind:
      spell: sb-prepare-sound(args=["block.sand.wind", "block_sand"])
      item: 'sand{name: "<yellow>Wind <gold>Sound", lore: ["<grey><italic>block.sand.wind"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-scaffolding:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Scaffolding <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.scaffolding.break", "block_scaffolding"])
      item: 'scaffolding{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.scaffolding.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.scaffolding.fall", "block_scaffolding"])
      item: 'scaffolding{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.scaffolding.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.scaffolding.hit", "block_scaffolding"])
      item: 'scaffolding{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.scaffolding.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.scaffolding.place", "block_scaffolding"])
      item: 'scaffolding{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.scaffolding.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.scaffolding.step", "block_scaffolding"])
      item: 'scaffolding{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.scaffolding.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sculk:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sculk <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sculk.break", "block_sculk"])
      item: 'sculk{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sculk.break"]}'
      slot: 0
    Sound_Charge:
      spell: sb-prepare-sound(args=["block.sculk.charge", "block_sculk"])
      item: 'sculk{name: "<yellow>Charge <gold>Sound", lore: ["<grey><italic>block.sculk.charge"]}'
      slot: 1
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sculk.fall", "block_sculk"])
      item: 'sculk{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sculk.fall"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sculk.hit", "block_sculk"])
      item: 'sculk{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sculk.hit"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sculk.place", "block_sculk"])
      item: 'sculk{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sculk.place"]}'
      slot: 4
    Sound_Spread:
      spell: sb-prepare-sound(args=["block.sculk.spread", "block_sculk"])
      item: 'sculk{name: "<yellow>Spread <gold>Sound", lore: ["<grey><italic>block.sculk.spread"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sculk.step", "block_sculk"])
      item: 'sculk{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sculk.step"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sculk_catalyst:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sculk Catalyst <aqua>Sounds
  options:
    Sound_Bloom:
      spell: sb-prepare-sound(args=["block.sculk_catalyst.bloom", "block_sculk_catalyst"])
      item: 'sculk_catalyst{name: "<yellow>Bloom <gold>Sound", lore: ["<grey><italic>block.sculk_catalyst.bloom"]}'
      slot: 0
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sculk_catalyst.break", "block_sculk_catalyst"])
      item: 'sculk_catalyst{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sculk_catalyst.break"]}'
      slot: 1
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sculk_catalyst.fall", "block_sculk_catalyst"])
      item: 'sculk_catalyst{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sculk_catalyst.fall"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sculk_catalyst.hit", "block_sculk_catalyst"])
      item: 'sculk_catalyst{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sculk_catalyst.hit"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sculk_catalyst.place", "block_sculk_catalyst"])
      item: 'sculk_catalyst{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sculk_catalyst.place"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sculk_catalyst.step", "block_sculk_catalyst"])
      item: 'sculk_catalyst{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sculk_catalyst.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sculk_sensor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sculk Sensor <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sculk_sensor.break", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.break"]}'
      slot: 0
    Sound_Clicking:
      spell: sb-prepare-sound(args=["block.sculk_sensor.clicking", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Clicking <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.clicking"]}'
      slot: 1
    Sound_ClickingStop:
      spell: sb-prepare-sound(args=["block.sculk_sensor.clicking_stop", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Clicking Stop <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.clicking_stop"]}'
      slot: 2
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sculk_sensor.fall", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.fall"]}'
      slot: 3
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sculk_sensor.hit", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.hit"]}'
      slot: 4
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sculk_sensor.place", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.place"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sculk_sensor.step", "block_sculk_sensor"])
      item: 'sculk_sensor{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sculk_sensor.step"]}'
      slot: 6
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sculk_shrieker:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sculk Shrieker <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sculk_shrieker.break", "block_sculk_shrieker"])
      item: 'sculk_shrieker{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sculk_shrieker.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sculk_shrieker.fall", "block_sculk_shrieker"])
      item: 'sculk_shrieker{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sculk_shrieker.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sculk_shrieker.hit", "block_sculk_shrieker"])
      item: 'sculk_shrieker{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sculk_shrieker.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sculk_shrieker.place", "block_sculk_shrieker"])
      item: 'sculk_shrieker{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sculk_shrieker.place"]}'
      slot: 3
    Sound_Shriek:
      spell: sb-prepare-sound(args=["block.sculk_shrieker.shriek", "block_sculk_shrieker"])
      item: 'sculk_shrieker{name: "<yellow>Shriek <gold>Sound", lore: ["<grey><italic>block.sculk_shrieker.shriek"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sculk_shrieker.step", "block_sculk_shrieker"])
      item: 'sculk_shrieker{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sculk_shrieker.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sculk_vein:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sculk Vein <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sculk_vein.break", "block_sculk_vein"])
      item: 'sculk_vein{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sculk_vein.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sculk_vein.fall", "block_sculk_vein"])
      item: 'sculk_vein{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sculk_vein.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sculk_vein.hit", "block_sculk_vein"])
      item: 'sculk_vein{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sculk_vein.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sculk_vein.place", "block_sculk_vein"])
      item: 'sculk_vein{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sculk_vein.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sculk_vein.step", "block_sculk_vein"])
      item: 'sculk_vein{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sculk_vein.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-shroomlight:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Shroomlight <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.shroomlight.break", "block_shroomlight"])
      item: 'shroomlight{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.shroomlight.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.shroomlight.fall", "block_shroomlight"])
      item: 'shroomlight{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.shroomlight.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.shroomlight.hit", "block_shroomlight"])
      item: 'shroomlight{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.shroomlight.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.shroomlight.place", "block_shroomlight"])
      item: 'shroomlight{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.shroomlight.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.shroomlight.step", "block_shroomlight"])
      item: 'shroomlight{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.shroomlight.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-shulker_box:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Shulker Box <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.shulker_box.close", "block_shulker_box"])
      item: 'shulker_box{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.shulker_box.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.shulker_box.open", "block_shulker_box"])
      item: 'shulker_box{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.shulker_box.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sign:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sign <aqua>Sounds
  options:
    Sound_WaxedInteractFail:
      spell: sb-prepare-sound(args=["block.sign.waxed_interact_fail", "block_sign"])
      item: 'oak_sign{name: "<yellow>Waxed Interact Fail <gold>Sound", lore: ["<grey><italic>block.sign.waxed_interact_fail"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-slime_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Slime Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.slime_block.break", "block_slime_block"])
      item: 'slime_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.slime_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.slime_block.fall", "block_slime_block"])
      item: 'slime_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.slime_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.slime_block.hit", "block_slime_block"])
      item: 'slime_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.slime_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.slime_block.place", "block_slime_block"])
      item: 'slime_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.slime_block.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.slime_block.step", "block_slime_block"])
      item: 'slime_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.slime_block.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-small_amethyst_bud:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Small Amethyst Bud <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.small_amethyst_bud.break", "block_small_amethyst_bud"])
      item: 'small_amethyst_bud{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.small_amethyst_bud.break"]}'
      slot: 0
    Sound_Place:
      spell: sb-prepare-sound(args=["block.small_amethyst_bud.place", "block_small_amethyst_bud"])
      item: 'small_amethyst_bud{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.small_amethyst_bud.place"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-small_dripleaf:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Small Dripleaf <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.small_dripleaf.break", "block_small_dripleaf"])
      item: 'small_dripleaf{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.small_dripleaf.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.small_dripleaf.fall", "block_small_dripleaf"])
      item: 'small_dripleaf{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.small_dripleaf.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.small_dripleaf.hit", "block_small_dripleaf"])
      item: 'small_dripleaf{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.small_dripleaf.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.small_dripleaf.place", "block_small_dripleaf"])
      item: 'small_dripleaf{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.small_dripleaf.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.small_dripleaf.step", "block_small_dripleaf"])
      item: 'small_dripleaf{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.small_dripleaf.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-smithing_table:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Smithing Table <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["block.smithing_table.use", "block_smithing_table"])
      item: 'smithing_table{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>block.smithing_table.use"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-smoker:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Smoker <aqua>Sounds
  options:
    Sound_Smoke:
      spell: sb-prepare-sound(args=["block.smoker.smoke", "block_smoker"])
      item: 'smoker{name: "<yellow>Smoke <gold>Sound", lore: ["<grey><italic>block.smoker.smoke"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sniffer_egg:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sniffer Egg <aqua>Sounds
  options:
    Sound_Crack:
      spell: sb-prepare-sound(args=["block.sniffer_egg.crack", "block_sniffer_egg"])
      item: 'sniffer_egg{name: "<yellow>Crack <gold>Sound", lore: ["<grey><italic>block.sniffer_egg.crack"]}'
      slot: 0
    Sound_Hatch:
      spell: sb-prepare-sound(args=["block.sniffer_egg.hatch", "block_sniffer_egg"])
      item: 'sniffer_egg{name: "<yellow>Hatch <gold>Sound", lore: ["<grey><italic>block.sniffer_egg.hatch"]}'
      slot: 1
    Sound_Plop:
      spell: sb-prepare-sound(args=["block.sniffer_egg.plop", "block_sniffer_egg"])
      item: 'sniffer_egg{name: "<yellow>Plop <gold>Sound", lore: ["<grey><italic>block.sniffer_egg.plop"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-snow:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Snow <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.snow.break", "block_snow"])
      item: 'snow{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.snow.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.snow.fall", "block_snow"])
      item: 'snow{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.snow.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.snow.hit", "block_snow"])
      item: 'snow{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.snow.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.snow.place", "block_snow"])
      item: 'snow{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.snow.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.snow.step", "block_snow"])
      item: 'snow{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.snow.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-soul_sand:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Soul Sand <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.soul_sand.break", "block_soul_sand"])
      item: 'soul_sand{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.soul_sand.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.soul_sand.fall", "block_soul_sand"])
      item: 'soul_sand{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.soul_sand.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.soul_sand.hit", "block_soul_sand"])
      item: 'soul_sand{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.soul_sand.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.soul_sand.place", "block_soul_sand"])
      item: 'soul_sand{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.soul_sand.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.soul_sand.step", "block_soul_sand"])
      item: 'soul_sand{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.soul_sand.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-soul_soil:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Soul Soil <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.soul_soil.break", "block_soul_soil"])
      item: 'soul_soil{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.soul_soil.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.soul_soil.fall", "block_soul_soil"])
      item: 'soul_soil{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.soul_soil.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.soul_soil.hit", "block_soul_soil"])
      item: 'soul_soil{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.soul_soil.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.soul_soil.place", "block_soul_soil"])
      item: 'soul_soil{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.soul_soil.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.soul_soil.step", "block_soul_soil"])
      item: 'soul_soil{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.soul_soil.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-spawner:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Spawner <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.spawner.break", "block_spawner"])
      item: 'spawner{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.spawner.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.spawner.fall", "block_spawner"])
      item: 'spawner{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.spawner.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.spawner.hit", "block_spawner"])
      item: 'spawner{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.spawner.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.spawner.place", "block_spawner"])
      item: 'spawner{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.spawner.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.spawner.step", "block_spawner"])
      item: 'spawner{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.spawner.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sponge:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sponge <aqua>Sounds
  options:
    Sound_Absorb:
      spell: sb-prepare-sound(args=["block.sponge.absorb", "block_sponge"])
      item: 'sponge{name: "<yellow>Absorb <gold>Sound", lore: ["<grey><italic>block.sponge.absorb"]}'
      slot: 0
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sponge.break", "block_sponge"])
      item: 'sponge{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sponge.break"]}'
      slot: 1
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.sponge.fall", "block_sponge"])
      item: 'sponge{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.sponge.fall"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.sponge.hit", "block_sponge"])
      item: 'sponge{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.sponge.hit"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sponge.place", "block_sponge"])
      item: 'sponge{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sponge.place"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.sponge.step", "block_sponge"])
      item: 'sponge{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.sponge.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-spore_blossom:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Spore Blossom <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.spore_blossom.break", "block_spore_blossom"])
      item: 'spore_blossom{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.spore_blossom.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.spore_blossom.fall", "block_spore_blossom"])
      item: 'spore_blossom{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.spore_blossom.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.spore_blossom.hit", "block_spore_blossom"])
      item: 'spore_blossom{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.spore_blossom.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.spore_blossom.place", "block_spore_blossom"])
      item: 'spore_blossom{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.spore_blossom.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.spore_blossom.step", "block_spore_blossom"])
      item: 'spore_blossom{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.spore_blossom.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-stem:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Stem <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.stem.break", "block_stem"])
      item: 'crimson_stem{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.stem.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.stem.fall", "block_stem"])
      item: 'crimson_stem{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.stem.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.stem.hit", "block_stem"])
      item: 'crimson_stem{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.stem.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.stem.place", "block_stem"])
      item: 'crimson_stem{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.stem.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.stem.step", "block_stem"])
      item: 'crimson_stem{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.stem.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-stone:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Stone <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.stone.break", "block_stone"])
      item: 'stone{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.stone.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.stone.fall", "block_stone"])
      item: 'stone{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.stone.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.stone.hit", "block_stone"])
      item: 'stone{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.stone.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.stone.place", "block_stone"])
      item: 'stone{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.stone.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.stone.step", "block_stone"])
      item: 'stone{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.stone.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-stone_button:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Stone Button <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.stone_button.click_off", "block_stone_button"])
      item: 'stone_button{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.stone_button.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.stone_button.click_on", "block_stone_button"])
      item: 'stone_button{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.stone_button.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-stone_pressure_plate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Stone Pressure Plate <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.stone_pressure_plate.click_off", "block_stone_pressure_plate"])
      item: 'stone_pressure_plate{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.stone_pressure_plate.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.stone_pressure_plate.click_on", "block_stone_pressure_plate"])
      item: 'stone_pressure_plate{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.stone_pressure_plate.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-suspicious_gravel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Suspicious Gravel <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.suspicious_gravel.break", "block_suspicious_gravel"])
      item: 'suspicious_gravel{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.suspicious_gravel.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.suspicious_gravel.fall", "block_suspicious_gravel"])
      item: 'suspicious_gravel{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.suspicious_gravel.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.suspicious_gravel.hit", "block_suspicious_gravel"])
      item: 'suspicious_gravel{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.suspicious_gravel.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.suspicious_gravel.place", "block_suspicious_gravel"])
      item: 'suspicious_gravel{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.suspicious_gravel.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.suspicious_gravel.step", "block_suspicious_gravel"])
      item: 'suspicious_gravel{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.suspicious_gravel.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-suspicious_sand:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Suspicious Sand <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.suspicious_sand.break", "block_suspicious_sand"])
      item: 'suspicious_sand{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.suspicious_sand.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.suspicious_sand.fall", "block_suspicious_sand"])
      item: 'suspicious_sand{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.suspicious_sand.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.suspicious_sand.hit", "block_suspicious_sand"])
      item: 'suspicious_sand{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.suspicious_sand.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.suspicious_sand.place", "block_suspicious_sand"])
      item: 'suspicious_sand{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.suspicious_sand.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.suspicious_sand.step", "block_suspicious_sand"])
      item: 'suspicious_sand{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.suspicious_sand.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-sweet_berry_bush:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sweet Berry Bush <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.sweet_berry_bush.break", "block_sweet_berry_bush"])
      item: 'sweet_berries{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.sweet_berry_bush.break"]}'
      slot: 0
    Sound_PickBerries:
      spell: sb-prepare-sound(args=["block.sweet_berry_bush.pick_berries", "block_sweet_berry_bush"])
      item: 'sweet_berries{name: "<yellow>Pick Berries <gold>Sound", lore: ["<grey><italic>block.sweet_berry_bush.pick_berries"]}'
      slot: 1
    Sound_Place:
      spell: sb-prepare-sound(args=["block.sweet_berry_bush.place", "block_sweet_berry_bush"])
      item: 'sweet_berries{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.sweet_berry_bush.place"]}'
      slot: 2
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-trial_spawner:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Trial Spawner <aqua>Sounds
  options:
    Sound_AboutTOSpawnItem:
      spell: sb-prepare-sound(args=["block.trial_spawner.about_to_spawn_item", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>About TO Spawn Item <gold>Sound", lore: ["<grey><italic>block.trial_spawner.about_to_spawn_item"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.trial_spawner.ambient", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.trial_spawner.ambient"]}'
      slot: 1
    Sound_AmbientOminous:
      spell: sb-prepare-sound(args=["block.trial_spawner.ambient_ominous", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Ambient Ominous <gold>Sound", lore: ["<grey><italic>block.trial_spawner.ambient_ominous"]}'
      slot: 2
    Sound_Break:
      spell: sb-prepare-sound(args=["block.trial_spawner.break", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.trial_spawner.break"]}'
      slot: 3
    Sound_CloseShutter:
      spell: sb-prepare-sound(args=["block.trial_spawner.close_shutter", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Close Shutter <gold>Sound", lore: ["<grey><italic>block.trial_spawner.close_shutter"]}'
      slot: 4
    Sound_DetectPlayer:
      spell: sb-prepare-sound(args=["block.trial_spawner.detect_player", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Detect Player <gold>Sound", lore: ["<grey><italic>block.trial_spawner.detect_player"]}'
      slot: 5
    Sound_EjectItem:
      spell: sb-prepare-sound(args=["block.trial_spawner.eject_item", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Eject Item <gold>Sound", lore: ["<grey><italic>block.trial_spawner.eject_item"]}'
      slot: 6
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.trial_spawner.fall", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.trial_spawner.fall"]}'
      slot: 7
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.trial_spawner.hit", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.trial_spawner.hit"]}'
      slot: 8
    Sound_OminousActivate:
      spell: sb-prepare-sound(args=["block.trial_spawner.ominous_activate", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Ominous Activate <gold>Sound", lore: ["<grey><italic>block.trial_spawner.ominous_activate"]}'
      slot: 9
    Sound_OpenShutter:
      spell: sb-prepare-sound(args=["block.trial_spawner.open_shutter", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Open Shutter <gold>Sound", lore: ["<grey><italic>block.trial_spawner.open_shutter"]}'
      slot: 10
    Sound_Place:
      spell: sb-prepare-sound(args=["block.trial_spawner.place", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.trial_spawner.place"]}'
      slot: 11
    Sound_SpawnItem:
      spell: sb-prepare-sound(args=["block.trial_spawner.spawn_item", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Spawn Item <gold>Sound", lore: ["<grey><italic>block.trial_spawner.spawn_item"]}'
      slot: 12
    Sound_SpawnItemBegin:
      spell: sb-prepare-sound(args=["block.trial_spawner.spawn_item_begin", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Spawn Item Begin <gold>Sound", lore: ["<grey><italic>block.trial_spawner.spawn_item_begin"]}'
      slot: 13
    Sound_SpawnMob:
      spell: sb-prepare-sound(args=["block.trial_spawner.spawn_mob", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Spawn Mob <gold>Sound", lore: ["<grey><italic>block.trial_spawner.spawn_mob"]}'
      slot: 14
    Sound_Step:
      spell: sb-prepare-sound(args=["block.trial_spawner.step", "block_trial_spawner"])
      item: 'trial_spawner{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.trial_spawner.step"]}'
      slot: 15
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-block-tripwire:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Tripwire <aqua>Sounds
  options:
    Sound_Attach:
      spell: sb-prepare-sound(args=["block.tripwire.attach", "block_tripwire"])
      item: 'tripwire_hook{name: "<yellow>Attach <gold>Sound", lore: ["<grey><italic>block.tripwire.attach"]}'
      slot: 0
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.tripwire.click_off", "block_tripwire"])
      item: 'tripwire_hook{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.tripwire.click_off"]}'
      slot: 1
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.tripwire.click_on", "block_tripwire"])
      item: 'tripwire_hook{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.tripwire.click_on"]}'
      slot: 2
    Sound_Detach:
      spell: sb-prepare-sound(args=["block.tripwire.detach", "block_tripwire"])
      item: 'tripwire_hook{name: "<yellow>Detach <gold>Sound", lore: ["<grey><italic>block.tripwire.detach"]}'
      slot: 3
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-tuff:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Tuff <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.tuff.break", "block_tuff"])
      item: 'tuff{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.tuff.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.tuff.fall", "block_tuff"])
      item: 'tuff{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.tuff.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.tuff.hit", "block_tuff"])
      item: 'tuff{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.tuff.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.tuff.place", "block_tuff"])
      item: 'tuff{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.tuff.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.tuff.step", "block_tuff"])
      item: 'tuff{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.tuff.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-tuff_bricks:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Tuff Bricks <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.tuff_bricks.break", "block_tuff_bricks"])
      item: 'tuff_bricks{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.tuff_bricks.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.tuff_bricks.fall", "block_tuff_bricks"])
      item: 'tuff_bricks{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.tuff_bricks.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.tuff_bricks.hit", "block_tuff_bricks"])
      item: 'tuff_bricks{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.tuff_bricks.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.tuff_bricks.place", "block_tuff_bricks"])
      item: 'tuff_bricks{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.tuff_bricks.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.tuff_bricks.step", "block_tuff_bricks"])
      item: 'tuff_bricks{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.tuff_bricks.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-vault:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Vault <aqua>Sounds
  options:
    Sound_Activate:
      spell: sb-prepare-sound(args=["block.vault.activate", "block_vault"])
      item: 'vault{name: "<yellow>Activate <gold>Sound", lore: ["<grey><italic>block.vault.activate"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.vault.ambient", "block_vault"])
      item: 'vault{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.vault.ambient"]}'
      slot: 1
    Sound_Break:
      spell: sb-prepare-sound(args=["block.vault.break", "block_vault"])
      item: 'vault{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.vault.break"]}'
      slot: 2
    Sound_CloseShutter:
      spell: sb-prepare-sound(args=["block.vault.close_shutter", "block_vault"])
      item: 'vault{name: "<yellow>Close Shutter <gold>Sound", lore: ["<grey><italic>block.vault.close_shutter"]}'
      slot: 3
    Sound_Deactivate:
      spell: sb-prepare-sound(args=["block.vault.deactivate", "block_vault"])
      item: 'vault{name: "<yellow>Deactivate <gold>Sound", lore: ["<grey><italic>block.vault.deactivate"]}'
      slot: 4
    Sound_EjectItem:
      spell: sb-prepare-sound(args=["block.vault.eject_item", "block_vault"])
      item: 'vault{name: "<yellow>Eject Item <gold>Sound", lore: ["<grey><italic>block.vault.eject_item"]}'
      slot: 5
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.vault.fall", "block_vault"])
      item: 'vault{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.vault.fall"]}'
      slot: 6
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.vault.hit", "block_vault"])
      item: 'vault{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.vault.hit"]}'
      slot: 7
    Sound_InsertItem:
      spell: sb-prepare-sound(args=["block.vault.insert_item", "block_vault"])
      item: 'vault{name: "<yellow>Insert Item <gold>Sound", lore: ["<grey><italic>block.vault.insert_item"]}'
      slot: 8
    Sound_InsertItemFail:
      spell: sb-prepare-sound(args=["block.vault.insert_item_fail", "block_vault"])
      item: 'vault{name: "<yellow>Insert Item Fail <gold>Sound", lore: ["<grey><italic>block.vault.insert_item_fail"]}'
      slot: 9
    Sound_OpenShutter:
      spell: sb-prepare-sound(args=["block.vault.open_shutter", "block_vault"])
      item: 'vault{name: "<yellow>Open Shutter <gold>Sound", lore: ["<grey><italic>block.vault.open_shutter"]}'
      slot: 10
    Sound_Place:
      spell: sb-prepare-sound(args=["block.vault.place", "block_vault"])
      item: 'vault{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.vault.place"]}'
      slot: 11
    Sound_RejectRewardedPlayer:
      spell: sb-prepare-sound(args=["block.vault.reject_rewarded_player", "block_vault"])
      item: 'vault{name: "<yellow>Reject Rewarded Player <gold>Sound", lore: ["<grey><italic>block.vault.reject_rewarded_player"]}'
      slot: 12
    Sound_Step:
      spell: sb-prepare-sound(args=["block.vault.step", "block_vault"])
      item: 'vault{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.vault.step"]}'
      slot: 13
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-block-vine:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Vine <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.vine.break", "block_vine"])
      item: 'vine{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.vine.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.vine.fall", "block_vine"])
      item: 'vine{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.vine.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.vine.hit", "block_vine"])
      item: 'vine{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.vine.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.vine.place", "block_vine"])
      item: 'vine{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.vine.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.vine.step", "block_vine"])
      item: 'vine{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.vine.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wart_block:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wart Block <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.wart_block.break", "block_wart_block"])
      item: 'warped_wart_block{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.wart_block.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.wart_block.fall", "block_wart_block"])
      item: 'warped_wart_block{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.wart_block.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.wart_block.hit", "block_wart_block"])
      item: 'warped_wart_block{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.wart_block.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.wart_block.place", "block_wart_block"])
      item: 'warped_wart_block{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.wart_block.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.wart_block.step", "block_wart_block"])
      item: 'warped_wart_block{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.wart_block.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-water:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Water <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["block.water.ambient", "block_water"])
      item: 'water_bucket{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>block.water.ambient"]}'
      slot: 0
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-weeping_vines:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Weeping Vines <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.weeping_vines.break", "block_weeping_vines"])
      item: 'weeping_vines{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.weeping_vines.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.weeping_vines.fall", "block_weeping_vines"])
      item: 'weeping_vines{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.weeping_vines.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.weeping_vines.hit", "block_weeping_vines"])
      item: 'weeping_vines{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.weeping_vines.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.weeping_vines.place", "block_weeping_vines"])
      item: 'weeping_vines{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.weeping_vines.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.weeping_vines.step", "block_weeping_vines"])
      item: 'weeping_vines{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.weeping_vines.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wet_grass:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wet Grass <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.wet_grass.break", "block_wet_grass"])
      item: 'kelp{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.wet_grass.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.wet_grass.fall", "block_wet_grass"])
      item: 'kelp{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.wet_grass.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.wet_grass.hit", "block_wet_grass"])
      item: 'kelp{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.wet_grass.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.wet_grass.place", "block_wet_grass"])
      item: 'kelp{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.wet_grass.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.wet_grass.step", "block_wet_grass"])
      item: 'kelp{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.wet_grass.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wet_sponge:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wet Sponge <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.wet_sponge.break", "block_wet_sponge"])
      item: 'wet_sponge{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.wet_sponge.break"]}'
      slot: 0
    Sound_Dries:
      spell: sb-prepare-sound(args=["block.wet_sponge.dries", "block_wet_sponge"])
      item: 'wet_sponge{name: "<yellow>Dries <gold>Sound", lore: ["<grey><italic>block.wet_sponge.dries"]}'
      slot: 1
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.wet_sponge.fall", "block_wet_sponge"])
      item: 'wet_sponge{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.wet_sponge.fall"]}'
      slot: 2
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.wet_sponge.hit", "block_wet_sponge"])
      item: 'wet_sponge{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.wet_sponge.hit"]}'
      slot: 3
    Sound_Place:
      spell: sb-prepare-sound(args=["block.wet_sponge.place", "block_wet_sponge"])
      item: 'wet_sponge{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.wet_sponge.place"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["block.wet_sponge.step", "block_wet_sponge"])
      item: 'wet_sponge{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.wet_sponge.step"]}'
      slot: 5
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wood:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wood <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.wood.break", "block_wood"])
      item: 'oak_log{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.wood.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.wood.fall", "block_wood"])
      item: 'oak_log{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.wood.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.wood.hit", "block_wood"])
      item: 'oak_log{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.wood.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.wood.place", "block_wood"])
      item: 'oak_log{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.wood.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.wood.step", "block_wood"])
      item: 'oak_log{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.wood.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wooden_button:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wooden Button <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.wooden_button.click_off", "block_wooden_button"])
      item: 'oak_button{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.wooden_button.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.wooden_button.click_on", "block_wooden_button"])
      item: 'oak_button{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.wooden_button.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wooden_door:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wooden Door <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.wooden_door.close", "block_wooden_door"])
      item: 'oak_door{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.wooden_door.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.wooden_door.open", "block_wooden_door"])
      item: 'oak_door{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.wooden_door.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wooden_pressure_plate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wooden Pressure Plate <aqua>Sounds
  options:
    Sound_ClickOff:
      spell: sb-prepare-sound(args=["block.wooden_pressure_plate.click_off", "block_wooden_pressure_plate"])
      item: 'oak_pressure_plate{name: "<yellow>Click Off <gold>Sound", lore: ["<grey><italic>block.wooden_pressure_plate.click_off"]}'
      slot: 0
    Sound_ClickON:
      spell: sb-prepare-sound(args=["block.wooden_pressure_plate.click_on", "block_wooden_pressure_plate"])
      item: 'oak_pressure_plate{name: "<yellow>Click ON <gold>Sound", lore: ["<grey><italic>block.wooden_pressure_plate.click_on"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wooden_trapdoor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wooden Trapdoor <aqua>Sounds
  options:
    Sound_Close:
      spell: sb-prepare-sound(args=["block.wooden_trapdoor.close", "block_wooden_trapdoor"])
      item: 'oak_trapdoor{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>block.wooden_trapdoor.close"]}'
      slot: 0
    Sound_Open:
      spell: sb-prepare-sound(args=["block.wooden_trapdoor.open", "block_wooden_trapdoor"])
      item: 'oak_trapdoor{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>block.wooden_trapdoor.open"]}'
      slot: 1
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-block-wool:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wool <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["block.wool.break", "block_wool"])
      item: 'white_wool{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>block.wool.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["block.wool.fall", "block_wool"])
      item: 'white_wool{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>block.wool.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["block.wool.hit", "block_wool"])
      item: 'white_wool{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>block.wool.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["block.wool.place", "block_wool"])
      item: 'white_wool{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>block.wool.place"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["block.wool.step", "block_wool"])
      item: 'white_wool{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>block.wool.step"]}'
      slot: 4
    Button_Back:
      spell: sb-block1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-enchant:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Enchant <aqua>Sounds
  options:
    Thorns:
      spell: sb-enchant-thorns
      item: 'enchanted_book{name: "<gold>Thorns Sounds"}'
      slot: 0
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-enchant-thorns:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Thorns <aqua>Sounds
  options:
    Sound_Hit:
      spell: sb-prepare-sound(args=["enchant.thorns.hit", "enchant_thorns"])
      item: 'enchanted_book{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>enchant.thorns.hit"]}'
      slot: 0
    Button_Back:
      spell: sb-enchant
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity1:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Entity <aqua>Sounds
  options:
    Allay:
      spell: sb-entity-allay
      item: 'allay_spawn_egg{name: "<gold>Allay Sounds"}'
      slot: 0
    Armadillo:
      spell: sb-entity-armadillo
      item: 'armadillo_spawn_egg{name: "<gold>Armadillo Sounds"}'
      slot: 1
    ArmorStand:
      spell: sb-entity-armor_stand
      item: 'armor_stand{name: "<gold>Armor Stand Sounds"}'
      slot: 2
    Arrow:
      spell: sb-entity-arrow
      item: 'arrow{name: "<gold>Arrow Sounds"}'
      slot: 3
    Axolotl:
      spell: sb-entity-axolotl
      item: 'axolotl_bucket{name: "<gold>Axolotl Sounds"}'
      slot: 4
    Bat:
      spell: sb-entity-bat
      item: 'bat_spawn_egg{name: "<gold>Bat Sounds"}'
      slot: 5
    Bee:
      spell: sb-entity-bee
      item: 'bee_spawn_egg{name: "<gold>Bee Sounds"}'
      slot: 6
    Blaze:
      spell: sb-entity-blaze
      item: 'blaze_spawn_egg{name: "<gold>Blaze Sounds"}'
      slot: 7
    Boat:
      spell: sb-entity-boat
      item: 'oak_boat{name: "<gold>Boat Sounds"}'
      slot: 8
    Bogged:
      spell: sb-entity-bogged
      item: 'bogged_spawn_egg{name: "<gold>Bogged Sounds"}'
      slot: 9
    Breeze:
      spell: sb-entity-breeze
      item: 'breeze_spawn_egg{name: "<gold>Breeze Sounds"}'
      slot: 10
    Camel:
      spell: sb-entity-camel
      item: 'camel_spawn_egg{name: "<gold>Camel Sounds"}'
      slot: 11
    Cat:
      spell: sb-entity-cat
      item: 'cat_spawn_egg{name: "<gold>Cat Sounds"}'
      slot: 12
    Chicken:
      spell: sb-entity-chicken
      item: 'chicken_spawn_egg{name: "<gold>Chicken Sounds"}'
      slot: 13
    Cod:
      spell: sb-entity-cod
      item: 'cod_spawn_egg{name: "<gold>Cod Sounds"}'
      slot: 14
    Cow:
      spell: sb-entity-cow
      item: 'cow_spawn_egg{name: "<gold>Cow Sounds"}'
      slot: 15
    Creaking:
      spell: sb-entity-creaking
      item: 'creaking_spawn_egg{name: "<gold>Creaking Sounds"}'
      slot: 16
    Creeper:
      spell: sb-entity-creeper
      item: 'creeper_spawn_egg{name: "<gold>Creeper Sounds"}'
      slot: 17
    Dolphin:
      spell: sb-entity-dolphin
      item: 'dolphin_spawn_egg{name: "<gold>Dolphin Sounds"}'
      slot: 18
    Donkey:
      spell: sb-entity-donkey
      item: 'donkey_spawn_egg{name: "<gold>Donkey Sounds"}'
      slot: 19
    DragonFireball:
      spell: sb-entity-dragon_fireball
      item: 'fire_charge{name: "<gold>Dragon Fireball Sounds"}'
      slot: 20
    Drowned:
      spell: sb-entity-drowned
      item: 'drowned_spawn_egg{name: "<gold>Drowned Sounds"}'
      slot: 21
    Egg:
      spell: sb-entity-egg
      item: 'egg{name: "<gold>Egg Sounds"}'
      slot: 22
    ElderGuardian:
      spell: sb-entity-elder_guardian
      item: 'elder_guardian_spawn_egg{name: "<gold>Elder Guardian Sounds"}'
      slot: 23
    EnderDragon:
      spell: sb-entity-ender_dragon
      item: 'dragon_head{name: "<gold>Ender Dragon Sounds"}'
      slot: 24
    EnderEye:
      spell: sb-entity-ender_eye
      item: 'ender_eye{name: "<gold>Ender Eye Sounds"}'
      slot: 25
    EnderPearl:
      spell: sb-entity-ender_pearl
      item: 'ender_pearl{name: "<gold>Ender Pearl Sounds"}'
      slot: 26
    Enderman:
      spell: sb-entity-enderman
      item: 'enderman_spawn_egg{name: "<gold>Enderman Sounds"}'
      slot: 27
    Endermite:
      spell: sb-entity-endermite
      item: 'endermite_spawn_egg{name: "<gold>Endermite Sounds"}'
      slot: 28
    Evoker:
      spell: sb-entity-evoker
      item: 'evoker_spawn_egg{name: "<gold>Evoker Sounds"}'
      slot: 29
    EvokerFangs:
      spell: sb-entity-evoker_fangs
      item: 'totem_of_undying{name: "<gold>Evoker Fangs Sounds"}'
      slot: 30
    ExperienceBottle:
      spell: sb-entity-experience_bottle
      item: 'experience_bottle{name: "<gold>Experience Bottle Sounds"}'
      slot: 31
    ExperienceOrb:
      spell: sb-entity-experience_orb
      item: 'experience_bottle{name: "<gold>Experience Orb Sounds"}'
      slot: 32
    FireworkRocket:
      spell: sb-entity-firework_rocket
      item: 'firework_rocket{name: "<gold>Firework Rocket Sounds"}'
      slot: 33
    Fish:
      spell: sb-entity-fish
      item: 'tropical_fish_bucket{name: "<gold>Fish Sounds"}'
      slot: 34
    FishingBobber:
      spell: sb-entity-fishing_bobber
      item: 'fishing_rod{name: "<gold>Fishing Bobber Sounds"}'
      slot: 35
    Fox:
      spell: sb-entity-fox
      item: 'fox_spawn_egg{name: "<gold>Fox Sounds"}'
      slot: 36
    Frog:
      spell: sb-entity-frog
      item: 'frog_spawn_egg{name: "<gold>Frog Sounds"}'
      slot: 37
    Generic:
      spell: sb-entity-generic
      item: 'bookshelf{name: "<gold>Generic Sounds"}'
      slot: 38
    Ghast:
      spell: sb-entity-ghast
      item: 'ghast_spawn_egg{name: "<gold>Ghast Sounds"}'
      slot: 39
    GlowItemFrame:
      spell: sb-entity-glow_item_frame
      item: 'glow_item_frame{name: "<gold>Glow Item Frame Sounds"}'
      slot: 40
    GlowSquid:
      spell: sb-entity-glow_squid
      item: 'glow_squid_spawn_egg{name: "<gold>Glow Squid Sounds"}'
      slot: 41
    Goat:
      spell: sb-entity-goat
      item: 'goat_spawn_egg{name: "<gold>Goat Sounds"}'
      slot: 42
    Guardian:
      spell: sb-entity-guardian
      item: 'guardian_spawn_egg{name: "<gold>Guardian Sounds"}'
      slot: 43
    Hoglin:
      spell: sb-entity-hoglin
      item: 'hoglin_spawn_egg{name: "<gold>Hoglin Sounds"}'
      slot: 44
    Button_Home:
      spell: sb
      item: 'book{name: "<gold>Home"}'
      slot: 49
    Button_Next_Page:
      spell: sb-entity2
      item:
        type: arrow
        name: <gold>Next Page
      slot: 51
sb-entity2:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Entity <aqua>Sounds
  options:
    Horse:
      spell: sb-entity-horse
      item: 'horse_spawn_egg{name: "<gold>Horse Sounds"}'
      slot: 0
    Hostile:
      spell: sb-entity-hostile
      item: 'wooden_sword{name: "<gold>Hostile Sounds"}'
      slot: 1
    Husk:
      spell: sb-entity-husk
      item: 'husk_spawn_egg{name: "<gold>Husk Sounds"}'
      slot: 2
    Illusioner:
      spell: sb-entity-illusioner
      item: 'lapis_lazuli{name: "<gold>Illusioner Sounds"}'
      slot: 3
    IronGolem:
      spell: sb-entity-iron_golem
      item: 'ghast_spawn_egg{name: "<gold>Iron Golem Sounds"}'
      slot: 4
    Item:
      spell: sb-entity-item
      item: 'paper{name: "<gold>Item Sounds"}'
      slot: 5
    ItemFrame:
      spell: sb-entity-item_frame
      item: 'item_frame{name: "<gold>Item Frame Sounds"}'
      slot: 6
    LeashKnot:
      spell: sb-entity-leash_knot
      item: 'lead{name: "<gold>Leash Knot Sounds"}'
      slot: 7
    LightningBolt:
      spell: sb-entity-lightning_bolt
      item: 'lightning_rod{name: "<gold>Lightning Bolt Sounds"}'
      slot: 8
    LingeringPotion:
      spell: sb-entity-lingering_potion
      item: 'lingering_potion{name: "<gold>Lingering Potion Sounds"}'
      slot: 9
    Llama:
      spell: sb-entity-llama
      item: 'llama_spawn_egg{name: "<gold>Llama Sounds"}'
      slot: 10
    MagmaCube:
      spell: sb-entity-magma_cube
      item: 'magma_cube_spawn_egg{name: "<gold>Magma Cube Sounds"}'
      slot: 11
    Minecart:
      spell: sb-entity-minecart
      item: 'minecart{name: "<gold>Minecart Sounds"}'
      slot: 12
    Mooshroom:
      spell: sb-entity-mooshroom
      item: 'mooshroom_spawn_egg{name: "<gold>Mooshroom Sounds"}'
      slot: 13
    Mule:
      spell: sb-entity-mule
      item: 'mule_spawn_egg{name: "<gold>Mule Sounds"}'
      slot: 14
    Ocelot:
      spell: sb-entity-ocelot
      item: 'ocelot_spawn_egg{name: "<gold>Ocelot Sounds"}'
      slot: 15
    Painting:
      spell: sb-entity-painting
      item: 'painting{name: "<gold>Painting Sounds"}'
      slot: 16
    Panda:
      spell: sb-entity-panda
      item: 'panda_spawn_egg{name: "<gold>Panda Sounds"}'
      slot: 17
    Parrot:
      spell: sb-entity-parrot
      item: 'parrot_spawn_egg{name: "<gold>Parrot Sounds"}'
      slot: 18
    Phantom:
      spell: sb-entity-phantom
      item: 'phantom_spawn_egg{name: "<gold>Phantom Sounds"}'
      slot: 19
    Pig:
      spell: sb-entity-pig
      item: 'pig_spawn_egg{name: "<gold>Pig Sounds"}'
      slot: 20
    Piglin:
      spell: sb-entity-piglin
      item: 'piglin_spawn_egg{name: "<gold>Piglin Sounds"}'
      slot: 21
    PiglinBrute:
      spell: sb-entity-piglin_brute
      item: 'piglin_brute_spawn_egg{name: "<gold>Piglin Brute Sounds"}'
      slot: 22
    Pillager:
      spell: sb-entity-pillager
      item: 'pillager_spawn_egg{name: "<gold>Pillager Sounds"}'
      slot: 23
    Player:
      spell: sb-entity-player
      item: 'player_head{name: "<gold>Player Sounds"}'
      slot: 24
    PolarBear:
      spell: sb-entity-polar_bear
      item: 'polar_bear_spawn_egg{name: "<gold>Polar Bear Sounds"}'
      slot: 25
    PufferFish:
      spell: sb-entity-puffer_fish
      item: 'pufferfish_spawn_egg{name: "<gold>Puffer Fish Sounds"}'
      slot: 26
    Rabbit:
      spell: sb-entity-rabbit
      item: 'rabbit_spawn_egg{name: "<gold>Rabbit Sounds"}'
      slot: 27
    Ravager:
      spell: sb-entity-ravager
      item: 'ravager_spawn_egg{name: "<gold>Ravager Sounds"}'
      slot: 28
    Salmon:
      spell: sb-entity-salmon
      item: 'salmon_spawn_egg{name: "<gold>Salmon Sounds"}'
      slot: 29
    Sheep:
      spell: sb-entity-sheep
      item: 'sheep_spawn_egg{name: "<gold>Sheep Sounds"}'
      slot: 30
    Shulker:
      spell: sb-entity-shulker
      item: 'shulker_spawn_egg{name: "<gold>Shulker Sounds"}'
      slot: 31
    ShulkerBullet:
      spell: sb-entity-shulker_bullet
      item: 'shulker_shell{name: "<gold>Shulker Bullet Sounds"}'
      slot: 32
    Silverfish:
      spell: sb-entity-silverfish
      item: 'silverfish_spawn_egg{name: "<gold>Silverfish Sounds"}'
      slot: 33
    Skeleton:
      spell: sb-entity-skeleton
      item: 'skeleton_spawn_egg{name: "<gold>Skeleton Sounds"}'
      slot: 34
    SkeletonHorse:
      spell: sb-entity-skeleton_horse
      item: 'skeleton_horse_spawn_egg{name: "<gold>Skeleton Horse Sounds"}'
      slot: 35
    Slime:
      spell: sb-entity-slime
      item: 'slime_spawn_egg{name: "<gold>Slime Sounds"}'
      slot: 36
    Sniffer:
      spell: sb-entity-sniffer
      item: 'sniffer_spawn_egg{name: "<gold>Sniffer Sounds"}'
      slot: 37
    SnowGolem:
      spell: sb-entity-snow_golem
      item: 'snow_golem_spawn_egg{name: "<gold>Snow Golem Sounds"}'
      slot: 38
    Snowball:
      spell: sb-entity-snowball
      item: 'snowball{name: "<gold>Snowball Sounds"}'
      slot: 39
    Spider:
      spell: sb-entity-spider
      item: 'spider_spawn_egg{name: "<gold>Spider Sounds"}'
      slot: 40
    SplashPotion:
      spell: sb-entity-splash_potion
      item: 'splash_potion{name: "<gold>Splash Potion Sounds"}'
      slot: 41
    Squid:
      spell: sb-entity-squid
      item: 'squid_spawn_egg{name: "<gold>Squid Sounds"}'
      slot: 42
    Stray:
      spell: sb-entity-stray
      item: 'stray_spawn_egg{name: "<gold>Stray Sounds"}'
      slot: 43
    Strider:
      spell: sb-entity-strider
      item: 'strider_spawn_egg{name: "<gold>Strider Sounds"}'
      slot: 44
    Button_Previous_Page:
      spell: sb-entity1
      item: 'arrow{name: "<gold>Previous Page"}'
      slot: 47
    Button_Home:
      spell: sb
      item: 'book{name: "<gold>Home"}'
      slot: 49
    Button_Next_Page:
      spell: sb-entity3
      item:
        type: arrow
        name: <gold>Next Page
      slot: 51
sb-entity3:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Entity <aqua>Sounds
  options:
    Tadpole:
      spell: sb-entity-tadpole
      item: 'tadpole_spawn_egg{name: "<gold>Tadpole Sounds"}'
      slot: 0
    Tnt:
      spell: sb-entity-tnt
      item: 'tnt{name: "<gold>Tnt Sounds"}'
      slot: 1
    TropicalFish:
      spell: sb-entity-tropical_fish
      item: 'tropical_fish_spawn_egg{name: "<gold>Tropical Fish Sounds"}'
      slot: 2
    Turtle:
      spell: sb-entity-turtle
      item: 'turtle_spawn_egg{name: "<gold>Turtle Sounds"}'
      slot: 3
    Vex:
      spell: sb-entity-vex
      item: 'vex_spawn_egg{name: "<gold>Vex Sounds"}'
      slot: 4
    Villager:
      spell: sb-entity-villager
      item: 'villager_spawn_egg{name: "<gold>Villager Sounds"}'
      slot: 5
    Vindicator:
      spell: sb-entity-vindicator
      item: 'vindicator_spawn_egg{name: "<gold>Vindicator Sounds"}'
      slot: 6
    WanderingTrader:
      spell: sb-entity-wandering_trader
      item: 'wandering_trader_spawn_egg{name: "<gold>Wandering Trader Sounds"}'
      slot: 7
    Warden:
      spell: sb-entity-warden
      item: 'warden_spawn_egg{name: "<gold>Warden Sounds"}'
      slot: 8
    WindCharge:
      spell: sb-entity-wind_charge
      item: 'wind_charge{name: "<gold>Wind Charge Sounds"}'
      slot: 9
    Witch:
      spell: sb-entity-witch
      item: 'witch_spawn_egg{name: "<gold>Witch Sounds"}'
      slot: 10
    Wither:
      spell: sb-entity-wither
      item: 'nether_star{name: "<gold>Wither Sounds"}'
      slot: 11
    WitherSkeleton:
      spell: sb-entity-wither_skeleton
      item: 'wither_skeleton_spawn_egg{name: "<gold>Wither Skeleton Sounds"}'
      slot: 12
    Wolf:
      spell: sb-entity-wolf
      item: 'wolf_spawn_egg{name: "<gold>Wolf Sounds"}'
      slot: 13
    WolfAngry:
      spell: sb-entity-wolf_angry
      item: 'wolf_spawn_egg{name: "<gold>Wolf Angry Sounds"}'
      slot: 14
    WolfBig:
      spell: sb-entity-wolf_big
      item: 'wolf_spawn_egg{name: "<gold>Wolf Big Sounds"}'
      slot: 15
    WolfCute:
      spell: sb-entity-wolf_cute
      item: 'wolf_spawn_egg{name: "<gold>Wolf Cute Sounds"}'
      slot: 16
    WolfGrumpy:
      spell: sb-entity-wolf_grumpy
      item: 'wolf_spawn_egg{name: "<gold>Wolf Grumpy Sounds"}'
      slot: 17
    WolfPuglin:
      spell: sb-entity-wolf_puglin
      item: 'wolf_spawn_egg{name: "<gold>Wolf Puglin Sounds"}'
      slot: 18
    WolfSad:
      spell: sb-entity-wolf_sad
      item: 'wolf_spawn_egg{name: "<gold>Wolf Sad Sounds"}'
      slot: 19
    Zoglin:
      spell: sb-entity-zoglin
      item: 'zoglin_spawn_egg{name: "<gold>Zoglin Sounds"}'
      slot: 20
    Zombie:
      spell: sb-entity-zombie
      item: 'zombie_spawn_egg{name: "<gold>Zombie Sounds"}'
      slot: 21
    ZombieHorse:
      spell: sb-entity-zombie_horse
      item: 'zombie_horse_spawn_egg{name: "<gold>Zombie Horse Sounds"}'
      slot: 22
    ZombieVillager:
      spell: sb-entity-zombie_villager
      item: 'zombie_villager_spawn_egg{name: "<gold>Zombie Villager Sounds"}'
      slot: 23
    ZombifiedPiglin:
      spell: sb-entity-zombified_piglin
      item: 'zombified_piglin_spawn_egg{name: "<gold>Zombified Piglin Sounds"}'
      slot: 24
    Button_Previous_Page:
      spell: sb-entity2
      item: 'arrow{name: "<gold>Previous Page"}'
      slot: 29
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 31
sb-entity-allay:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Allay <aqua>Sounds
  options:
    Sound_AmbientWithItem:
      spell: sb-prepare-sound(args=["entity.allay.ambient_with_item", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Ambient With Item <gold>Sound", lore: ["<grey><italic>entity.allay.ambient_with_item"]}'
      slot: 0
    Sound_AmbientWithoutItem:
      spell: sb-prepare-sound(args=["entity.allay.ambient_without_item", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Ambient Without Item <gold>Sound", lore: ["<grey><italic>entity.allay.ambient_without_item"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.allay.death", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.allay.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.allay.hurt", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.allay.hurt"]}'
      slot: 3
    Sound_ItemGiven:
      spell: sb-prepare-sound(args=["entity.allay.item_given", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Item Given <gold>Sound", lore: ["<grey><italic>entity.allay.item_given"]}'
      slot: 4
    Sound_ItemTaken:
      spell: sb-prepare-sound(args=["entity.allay.item_taken", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Item Taken <gold>Sound", lore: ["<grey><italic>entity.allay.item_taken"]}'
      slot: 5
    Sound_ItemThrown:
      spell: sb-prepare-sound(args=["entity.allay.item_thrown", "entity_allay"])
      item: 'allay_spawn_egg{name: "<yellow>Item Thrown <gold>Sound", lore: ["<grey><italic>entity.allay.item_thrown"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-armadillo:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Armadillo <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.armadillo.ambient", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.armadillo.ambient"]}'
      slot: 0
    Sound_Brush:
      spell: sb-prepare-sound(args=["entity.armadillo.brush", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Brush <gold>Sound", lore: ["<grey><italic>entity.armadillo.brush"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.armadillo.death", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.armadillo.death"]}'
      slot: 2
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.armadillo.eat", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.armadillo.eat"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.armadillo.hurt", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.armadillo.hurt"]}'
      slot: 4
    Sound_HurtReduced:
      spell: sb-prepare-sound(args=["entity.armadillo.hurt_reduced", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Hurt Reduced <gold>Sound", lore: ["<grey><italic>entity.armadillo.hurt_reduced"]}'
      slot: 5
    Sound_Land:
      spell: sb-prepare-sound(args=["entity.armadillo.land", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Land <gold>Sound", lore: ["<grey><italic>entity.armadillo.land"]}'
      slot: 6
    Sound_Peek:
      spell: sb-prepare-sound(args=["entity.armadillo.peek", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Peek <gold>Sound", lore: ["<grey><italic>entity.armadillo.peek"]}'
      slot: 7
    Sound_Roll:
      spell: sb-prepare-sound(args=["entity.armadillo.roll", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Roll <gold>Sound", lore: ["<grey><italic>entity.armadillo.roll"]}'
      slot: 8
    Sound_ScuteDrop:
      spell: sb-prepare-sound(args=["entity.armadillo.scute_drop", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Scute Drop <gold>Sound", lore: ["<grey><italic>entity.armadillo.scute_drop"]}'
      slot: 9
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.armadillo.step", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.armadillo.step"]}'
      slot: 10
    Sound_UnrollFinish:
      spell: sb-prepare-sound(args=["entity.armadillo.unroll_finish", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Unroll Finish <gold>Sound", lore: ["<grey><italic>entity.armadillo.unroll_finish"]}'
      slot: 11
    Sound_UnrollStart:
      spell: sb-prepare-sound(args=["entity.armadillo.unroll_start", "entity_armadillo"])
      item: 'armadillo_spawn_egg{name: "<yellow>Unroll Start <gold>Sound", lore: ["<grey><italic>entity.armadillo.unroll_start"]}'
      slot: 12
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-armor_stand:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Armor Stand <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.armor_stand.break", "entity_armor_stand"])
      item: 'armor_stand{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.armor_stand.break"]}'
      slot: 0
    Sound_Fall:
      spell: sb-prepare-sound(args=["entity.armor_stand.fall", "entity_armor_stand"])
      item: 'armor_stand{name: "<yellow>Fall <gold>Sound", lore: ["<grey><italic>entity.armor_stand.fall"]}'
      slot: 1
    Sound_Hit:
      spell: sb-prepare-sound(args=["entity.armor_stand.hit", "entity_armor_stand"])
      item: 'armor_stand{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>entity.armor_stand.hit"]}'
      slot: 2
    Sound_Place:
      spell: sb-prepare-sound(args=["entity.armor_stand.place", "entity_armor_stand"])
      item: 'armor_stand{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>entity.armor_stand.place"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-arrow:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Arrow <aqua>Sounds
  options:
    Sound_Hit:
      spell: sb-prepare-sound(args=["entity.arrow.hit", "entity_arrow"])
      item: 'arrow{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>entity.arrow.hit"]}'
      slot: 0
    Sound_HitPlayer:
      spell: sb-prepare-sound(args=["entity.arrow.hit_player", "entity_arrow"])
      item: 'arrow{name: "<yellow>Hit Player <gold>Sound", lore: ["<grey><italic>entity.arrow.hit_player"]}'
      slot: 1
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.arrow.shoot", "entity_arrow"])
      item: 'arrow{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.arrow.shoot"]}'
      slot: 2
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-axolotl:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Axolotl <aqua>Sounds
  options:
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.axolotl.attack", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.axolotl.attack"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.axolotl.death", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.axolotl.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.axolotl.hurt", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.axolotl.hurt"]}'
      slot: 2
    Sound_IdleAir:
      spell: sb-prepare-sound(args=["entity.axolotl.idle_air", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Idle Air <gold>Sound", lore: ["<grey><italic>entity.axolotl.idle_air"]}'
      slot: 3
    Sound_IdleWater:
      spell: sb-prepare-sound(args=["entity.axolotl.idle_water", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Idle Water <gold>Sound", lore: ["<grey><italic>entity.axolotl.idle_water"]}'
      slot: 4
    Sound_Splash:
      spell: sb-prepare-sound(args=["entity.axolotl.splash", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Splash <gold>Sound", lore: ["<grey><italic>entity.axolotl.splash"]}'
      slot: 5
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.axolotl.swim", "entity_axolotl"])
      item: 'axolotl_bucket{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.axolotl.swim"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-bat:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bat <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.bat.ambient", "entity_bat"])
      item: 'bat_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.bat.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.bat.death", "entity_bat"])
      item: 'bat_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.bat.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.bat.hurt", "entity_bat"])
      item: 'bat_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.bat.hurt"]}'
      slot: 2
    Sound_Loop:
      spell: sb-prepare-sound(args=["entity.bat.loop", "entity_bat"])
      item: 'bat_spawn_egg{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>entity.bat.loop"]}'
      slot: 3
    Sound_Takeoff:
      spell: sb-prepare-sound(args=["entity.bat.takeoff", "entity_bat"])
      item: 'bat_spawn_egg{name: "<yellow>Takeoff <gold>Sound", lore: ["<grey><italic>entity.bat.takeoff"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-bee:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bee <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.bee.death", "entity_bee"])
      item: 'bee_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.bee.death"]}'
      slot: 0
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.bee.hurt", "entity_bee"])
      item: 'bee_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.bee.hurt"]}'
      slot: 1
    Sound_Loop:
      spell: sb-prepare-sound(args=["entity.bee.loop", "entity_bee"])
      item: 'bee_spawn_egg{name: "<yellow>Loop <gold>Sound", lore: ["<grey><italic>entity.bee.loop"]}'
      slot: 2
    Sound_LoopAggressive:
      spell: sb-prepare-sound(args=["entity.bee.loop_aggressive", "entity_bee"])
      item: 'bee_spawn_egg{name: "<yellow>Loop Aggressive <gold>Sound", lore: ["<grey><italic>entity.bee.loop_aggressive"]}'
      slot: 3
    Sound_Pollinate:
      spell: sb-prepare-sound(args=["entity.bee.pollinate", "entity_bee"])
      item: 'bee_spawn_egg{name: "<yellow>Pollinate <gold>Sound", lore: ["<grey><italic>entity.bee.pollinate"]}'
      slot: 4
    Sound_Sting:
      spell: sb-prepare-sound(args=["entity.bee.sting", "entity_bee"])
      item: 'bee_spawn_egg{name: "<yellow>Sting <gold>Sound", lore: ["<grey><italic>entity.bee.sting"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-blaze:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Blaze <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.blaze.ambient", "entity_blaze"])
      item: 'blaze_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.blaze.ambient"]}'
      slot: 0
    Sound_Burn:
      spell: sb-prepare-sound(args=["entity.blaze.burn", "entity_blaze"])
      item: 'blaze_spawn_egg{name: "<yellow>Burn <gold>Sound", lore: ["<grey><italic>entity.blaze.burn"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.blaze.death", "entity_blaze"])
      item: 'blaze_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.blaze.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.blaze.hurt", "entity_blaze"])
      item: 'blaze_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.blaze.hurt"]}'
      slot: 3
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.blaze.shoot", "entity_blaze"])
      item: 'blaze_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.blaze.shoot"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-boat:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Boat <aqua>Sounds
  options:
    Sound_PaddleLand:
      spell: sb-prepare-sound(args=["entity.boat.paddle_land", "entity_boat"])
      item: 'oak_boat{name: "<yellow>Paddle Land <gold>Sound", lore: ["<grey><italic>entity.boat.paddle_land"]}'
      slot: 0
    Sound_PaddleWater:
      spell: sb-prepare-sound(args=["entity.boat.paddle_water", "entity_boat"])
      item: 'oak_boat{name: "<yellow>Paddle Water <gold>Sound", lore: ["<grey><italic>entity.boat.paddle_water"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-bogged:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bogged <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.bogged.ambient", "entity_bogged"])
      item: 'bogged_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.bogged.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.bogged.death", "entity_bogged"])
      item: 'bogged_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.bogged.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.bogged.hurt", "entity_bogged"])
      item: 'bogged_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.bogged.hurt"]}'
      slot: 2
    Sound_Shear:
      spell: sb-prepare-sound(args=["entity.bogged.shear", "entity_bogged"])
      item: 'bogged_spawn_egg{name: "<yellow>Shear <gold>Sound", lore: ["<grey><italic>entity.bogged.shear"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.bogged.step", "entity_bogged"])
      item: 'bogged_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.bogged.step"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-breeze:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Breeze <aqua>Sounds
  options:
    Sound_Charge:
      spell: sb-prepare-sound(args=["entity.breeze.charge", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Charge <gold>Sound", lore: ["<grey><italic>entity.breeze.charge"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.breeze.death", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.breeze.death"]}'
      slot: 1
    Sound_Deflect:
      spell: sb-prepare-sound(args=["entity.breeze.deflect", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Deflect <gold>Sound", lore: ["<grey><italic>entity.breeze.deflect"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.breeze.hurt", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.breeze.hurt"]}'
      slot: 3
    Sound_IdleAir:
      spell: sb-prepare-sound(args=["entity.breeze.idle_air", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Idle Air <gold>Sound", lore: ["<grey><italic>entity.breeze.idle_air"]}'
      slot: 4
    Sound_IdleGround:
      spell: sb-prepare-sound(args=["entity.breeze.idle_ground", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Idle Ground <gold>Sound", lore: ["<grey><italic>entity.breeze.idle_ground"]}'
      slot: 5
    Sound_Inhale:
      spell: sb-prepare-sound(args=["entity.breeze.inhale", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Inhale <gold>Sound", lore: ["<grey><italic>entity.breeze.inhale"]}'
      slot: 6
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.breeze.jump", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.breeze.jump"]}'
      slot: 7
    Sound_Land:
      spell: sb-prepare-sound(args=["entity.breeze.land", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Land <gold>Sound", lore: ["<grey><italic>entity.breeze.land"]}'
      slot: 8
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.breeze.shoot", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.breeze.shoot"]}'
      slot: 9
    Sound_Slide:
      spell: sb-prepare-sound(args=["entity.breeze.slide", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Slide <gold>Sound", lore: ["<grey><italic>entity.breeze.slide"]}'
      slot: 10
    Sound_Whirl:
      spell: sb-prepare-sound(args=["entity.breeze.whirl", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Whirl <gold>Sound", lore: ["<grey><italic>entity.breeze.whirl"]}'
      slot: 11
    Sound_WindBurst:
      spell: sb-prepare-sound(args=["entity.breeze.wind_burst", "entity_breeze"])
      item: 'breeze_spawn_egg{name: "<yellow>Wind Burst <gold>Sound", lore: ["<grey><italic>entity.breeze.wind_burst"]}'
      slot: 12
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-camel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Camel <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.camel.ambient", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.camel.ambient"]}'
      slot: 0
    Sound_Dash:
      spell: sb-prepare-sound(args=["entity.camel.dash", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Dash <gold>Sound", lore: ["<grey><italic>entity.camel.dash"]}'
      slot: 1
    Sound_DashReady:
      spell: sb-prepare-sound(args=["entity.camel.dash_ready", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Dash Ready <gold>Sound", lore: ["<grey><italic>entity.camel.dash_ready"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.camel.death", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.camel.death"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.camel.eat", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.camel.eat"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.camel.hurt", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.camel.hurt"]}'
      slot: 5
    Sound_Saddle:
      spell: sb-prepare-sound(args=["entity.camel.saddle", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Saddle <gold>Sound", lore: ["<grey><italic>entity.camel.saddle"]}'
      slot: 6
    Sound_Sit:
      spell: sb-prepare-sound(args=["entity.camel.sit", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Sit <gold>Sound", lore: ["<grey><italic>entity.camel.sit"]}'
      slot: 7
    Sound_Stand:
      spell: sb-prepare-sound(args=["entity.camel.stand", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Stand <gold>Sound", lore: ["<grey><italic>entity.camel.stand"]}'
      slot: 8
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.camel.step", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.camel.step"]}'
      slot: 9
    Sound_StepSand:
      spell: sb-prepare-sound(args=["entity.camel.step_sand", "entity_camel"])
      item: 'camel_spawn_egg{name: "<yellow>Step Sand <gold>Sound", lore: ["<grey><italic>entity.camel.step_sand"]}'
      slot: 10
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-cat:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cat <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.cat.ambient", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.cat.ambient"]}'
      slot: 0
    Sound_BegForFood:
      spell: sb-prepare-sound(args=["entity.cat.beg_for_food", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Beg For Food <gold>Sound", lore: ["<grey><italic>entity.cat.beg_for_food"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.cat.death", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.cat.death"]}'
      slot: 2
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.cat.eat", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.cat.eat"]}'
      slot: 3
    Sound_Hiss:
      spell: sb-prepare-sound(args=["entity.cat.hiss", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Hiss <gold>Sound", lore: ["<grey><italic>entity.cat.hiss"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.cat.hurt", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.cat.hurt"]}'
      slot: 5
    Sound_Purr:
      spell: sb-prepare-sound(args=["entity.cat.purr", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Purr <gold>Sound", lore: ["<grey><italic>entity.cat.purr"]}'
      slot: 6
    Sound_Purreow:
      spell: sb-prepare-sound(args=["entity.cat.purreow", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Purreow <gold>Sound", lore: ["<grey><italic>entity.cat.purreow"]}'
      slot: 7
    Sound_StrayAmbient:
      spell: sb-prepare-sound(args=["entity.cat.stray_ambient", "entity_cat"])
      item: 'cat_spawn_egg{name: "<yellow>Stray Ambient <gold>Sound", lore: ["<grey><italic>entity.cat.stray_ambient"]}'
      slot: 8
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-chicken:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Chicken <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.chicken.ambient", "entity_chicken"])
      item: 'chicken_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.chicken.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.chicken.death", "entity_chicken"])
      item: 'chicken_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.chicken.death"]}'
      slot: 1
    Sound_Egg:
      spell: sb-prepare-sound(args=["entity.chicken.egg", "entity_chicken"])
      item: 'chicken_spawn_egg{name: "<yellow>Egg <gold>Sound", lore: ["<grey><italic>entity.chicken.egg"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.chicken.hurt", "entity_chicken"])
      item: 'chicken_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.chicken.hurt"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.chicken.step", "entity_chicken"])
      item: 'chicken_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.chicken.step"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-cod:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cod <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.cod.ambient", "entity_cod"])
      item: 'cod_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.cod.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.cod.death", "entity_cod"])
      item: 'cod_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.cod.death"]}'
      slot: 1
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.cod.flop", "entity_cod"])
      item: 'cod_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.cod.flop"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.cod.hurt", "entity_cod"])
      item: 'cod_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.cod.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-cow:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cow <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.cow.ambient", "entity_cow"])
      item: 'cow_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.cow.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.cow.death", "entity_cow"])
      item: 'cow_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.cow.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.cow.hurt", "entity_cow"])
      item: 'cow_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.cow.hurt"]}'
      slot: 2
    Sound_Milk:
      spell: sb-prepare-sound(args=["entity.cow.milk", "entity_cow"])
      item: 'cow_spawn_egg{name: "<yellow>Milk <gold>Sound", lore: ["<grey><italic>entity.cow.milk"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.cow.step", "entity_cow"])
      item: 'cow_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.cow.step"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-creaking:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Creaking <aqua>Sounds
  options:
    Sound_Activate:
      spell: sb-prepare-sound(args=["entity.creaking.activate", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Activate <gold>Sound", lore: ["<grey><italic>entity.creaking.activate"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.creaking.ambient", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.creaking.ambient"]}'
      slot: 1
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.creaking.attack", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.creaking.attack"]}'
      slot: 2
    Sound_Deactivate:
      spell: sb-prepare-sound(args=["entity.creaking.deactivate", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Deactivate <gold>Sound", lore: ["<grey><italic>entity.creaking.deactivate"]}'
      slot: 3
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.creaking.death", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.creaking.death"]}'
      slot: 4
    Sound_Freeze:
      spell: sb-prepare-sound(args=["entity.creaking.freeze", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Freeze <gold>Sound", lore: ["<grey><italic>entity.creaking.freeze"]}'
      slot: 5
    Sound_Spawn:
      spell: sb-prepare-sound(args=["entity.creaking.spawn", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Spawn <gold>Sound", lore: ["<grey><italic>entity.creaking.spawn"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.creaking.step", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.creaking.step"]}'
      slot: 7
    Sound_Sway:
      spell: sb-prepare-sound(args=["entity.creaking.sway", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Sway <gold>Sound", lore: ["<grey><italic>entity.creaking.sway"]}'
      slot: 8
    Sound_Twitch:
      spell: sb-prepare-sound(args=["entity.creaking.twitch", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Twitch <gold>Sound", lore: ["<grey><italic>entity.creaking.twitch"]}'
      slot: 9
    Sound_Unfreeze:
      spell: sb-prepare-sound(args=["entity.creaking.unfreeze", "entity_creaking"])
      item: 'creaking_spawn_egg{name: "<yellow>Unfreeze <gold>Sound", lore: ["<grey><italic>entity.creaking.unfreeze"]}'
      slot: 10
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-creeper:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Creeper <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.creeper.death", "entity_creeper"])
      item: 'creeper_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.creeper.death"]}'
      slot: 0
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.creeper.hurt", "entity_creeper"])
      item: 'creeper_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.creeper.hurt"]}'
      slot: 1
    Sound_Primed:
      spell: sb-prepare-sound(args=["entity.creeper.primed", "entity_creeper"])
      item: 'creeper_spawn_egg{name: "<yellow>Primed <gold>Sound", lore: ["<grey><italic>entity.creeper.primed"]}'
      slot: 2
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-dolphin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Dolphin <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.dolphin.ambient", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.dolphin.ambient"]}'
      slot: 0
    Sound_AmbientWater:
      spell: sb-prepare-sound(args=["entity.dolphin.ambient_water", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Ambient Water <gold>Sound", lore: ["<grey><italic>entity.dolphin.ambient_water"]}'
      slot: 1
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.dolphin.attack", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.dolphin.attack"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.dolphin.death", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.dolphin.death"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.dolphin.eat", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.dolphin.eat"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.dolphin.hurt", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.dolphin.hurt"]}'
      slot: 5
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.dolphin.jump", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.dolphin.jump"]}'
      slot: 6
    Sound_Play:
      spell: sb-prepare-sound(args=["entity.dolphin.play", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Play <gold>Sound", lore: ["<grey><italic>entity.dolphin.play"]}'
      slot: 7
    Sound_Splash:
      spell: sb-prepare-sound(args=["entity.dolphin.splash", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Splash <gold>Sound", lore: ["<grey><italic>entity.dolphin.splash"]}'
      slot: 8
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.dolphin.swim", "entity_dolphin"])
      item: 'dolphin_spawn_egg{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.dolphin.swim"]}'
      slot: 9
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-donkey:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Donkey <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.donkey.ambient", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.donkey.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.donkey.angry", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.donkey.angry"]}'
      slot: 1
    Sound_Chest:
      spell: sb-prepare-sound(args=["entity.donkey.chest", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Chest <gold>Sound", lore: ["<grey><italic>entity.donkey.chest"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.donkey.death", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.donkey.death"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.donkey.eat", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.donkey.eat"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.donkey.hurt", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.donkey.hurt"]}'
      slot: 5
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.donkey.jump", "entity_donkey"])
      item: 'donkey_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.donkey.jump"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-dragon_fireball:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Dragon Fireball <aqua>Sounds
  options:
    Sound_Explode:
      spell: sb-prepare-sound(args=["entity.dragon_fireball.explode", "entity_dragon_fireball"])
      item: 'fire_charge{name: "<yellow>Explode <gold>Sound", lore: ["<grey><italic>entity.dragon_fireball.explode"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-drowned:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Drowned <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.drowned.ambient", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.drowned.ambient"]}'
      slot: 0
    Sound_AmbientWater:
      spell: sb-prepare-sound(args=["entity.drowned.ambient_water", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Ambient Water <gold>Sound", lore: ["<grey><italic>entity.drowned.ambient_water"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.drowned.death", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.drowned.death"]}'
      slot: 2
    Sound_DeathWater:
      spell: sb-prepare-sound(args=["entity.drowned.death_water", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Death Water <gold>Sound", lore: ["<grey><italic>entity.drowned.death_water"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.drowned.hurt", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.drowned.hurt"]}'
      slot: 4
    Sound_HurtWater:
      spell: sb-prepare-sound(args=["entity.drowned.hurt_water", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Hurt Water <gold>Sound", lore: ["<grey><italic>entity.drowned.hurt_water"]}'
      slot: 5
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.drowned.shoot", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.drowned.shoot"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.drowned.step", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.drowned.step"]}'
      slot: 7
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.drowned.swim", "entity_drowned"])
      item: 'drowned_spawn_egg{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.drowned.swim"]}'
      slot: 8
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-egg:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Egg <aqua>Sounds
  options:
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.egg.throw", "entity_egg"])
      item: 'egg{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.egg.throw"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-elder_guardian:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Elder Guardian <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.elder_guardian.ambient", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.ambient"]}'
      slot: 0
    Sound_AmbientLand:
      spell: sb-prepare-sound(args=["entity.elder_guardian.ambient_land", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Ambient Land <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.ambient_land"]}'
      slot: 1
    Sound_Curse:
      spell: sb-prepare-sound(args=["entity.elder_guardian.curse", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Curse <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.curse"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.elder_guardian.death", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.death"]}'
      slot: 3
    Sound_DeathLand:
      spell: sb-prepare-sound(args=["entity.elder_guardian.death_land", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Death Land <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.death_land"]}'
      slot: 4
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.elder_guardian.flop", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.flop"]}'
      slot: 5
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.elder_guardian.hurt", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.hurt"]}'
      slot: 6
    Sound_HurtLand:
      spell: sb-prepare-sound(args=["entity.elder_guardian.hurt_land", "entity_elder_guardian"])
      item: 'elder_guardian_spawn_egg{name: "<yellow>Hurt Land <gold>Sound", lore: ["<grey><italic>entity.elder_guardian.hurt_land"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-ender_dragon:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ender Dragon <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.ender_dragon.ambient", "entity_ender_dragon"])
      item: 'dragon_head{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.ender_dragon.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.ender_dragon.death", "entity_ender_dragon"])
      item: 'dragon_head{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.ender_dragon.death"]}'
      slot: 1
    Sound_Flap:
      spell: sb-prepare-sound(args=["entity.ender_dragon.flap", "entity_ender_dragon"])
      item: 'dragon_head{name: "<yellow>Flap <gold>Sound", lore: ["<grey><italic>entity.ender_dragon.flap"]}'
      slot: 2
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.ender_dragon.growl", "entity_ender_dragon"])
      item: 'dragon_head{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.ender_dragon.growl"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.ender_dragon.hurt", "entity_ender_dragon"])
      item: 'dragon_head{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.ender_dragon.hurt"]}'
      slot: 4
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.ender_dragon.shoot", "entity_ender_dragon"])
      item: 'dragon_head{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.ender_dragon.shoot"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-ender_eye:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ender Eye <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.ender_eye.death", "entity_ender_eye"])
      item: 'ender_eye{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.ender_eye.death"]}'
      slot: 0
    Sound_Launch:
      spell: sb-prepare-sound(args=["entity.ender_eye.launch", "entity_ender_eye"])
      item: 'ender_eye{name: "<yellow>Launch <gold>Sound", lore: ["<grey><italic>entity.ender_eye.launch"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-ender_pearl:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ender Pearl <aqua>Sounds
  options:
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.ender_pearl.throw", "entity_ender_pearl"])
      item: 'ender_pearl{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.ender_pearl.throw"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-enderman:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Enderman <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.enderman.ambient", "entity_enderman"])
      item: 'enderman_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.enderman.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.enderman.death", "entity_enderman"])
      item: 'enderman_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.enderman.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.enderman.hurt", "entity_enderman"])
      item: 'enderman_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.enderman.hurt"]}'
      slot: 2
    Sound_Scream:
      spell: sb-prepare-sound(args=["entity.enderman.scream", "entity_enderman"])
      item: 'enderman_spawn_egg{name: "<yellow>Scream <gold>Sound", lore: ["<grey><italic>entity.enderman.scream"]}'
      slot: 3
    Sound_Stare:
      spell: sb-prepare-sound(args=["entity.enderman.stare", "entity_enderman"])
      item: 'enderman_spawn_egg{name: "<yellow>Stare <gold>Sound", lore: ["<grey><italic>entity.enderman.stare"]}'
      slot: 4
    Sound_Teleport:
      spell: sb-prepare-sound(args=["entity.enderman.teleport", "entity_enderman"])
      item: 'enderman_spawn_egg{name: "<yellow>Teleport <gold>Sound", lore: ["<grey><italic>entity.enderman.teleport"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-endermite:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Endermite <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.endermite.ambient", "entity_endermite"])
      item: 'endermite_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.endermite.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.endermite.death", "entity_endermite"])
      item: 'endermite_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.endermite.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.endermite.hurt", "entity_endermite"])
      item: 'endermite_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.endermite.hurt"]}'
      slot: 2
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.endermite.step", "entity_endermite"])
      item: 'endermite_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.endermite.step"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-evoker:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Evoker <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.evoker.ambient", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.evoker.ambient"]}'
      slot: 0
    Sound_CastSpell:
      spell: sb-prepare-sound(args=["entity.evoker.cast_spell", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Cast Spell <gold>Sound", lore: ["<grey><italic>entity.evoker.cast_spell"]}'
      slot: 1
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.evoker.celebrate", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.evoker.celebrate"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.evoker.death", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.evoker.death"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.evoker.hurt", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.evoker.hurt"]}'
      slot: 4
    Sound_PrepareAttack:
      spell: sb-prepare-sound(args=["entity.evoker.prepare_attack", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Prepare Attack <gold>Sound", lore: ["<grey><italic>entity.evoker.prepare_attack"]}'
      slot: 5
    Sound_PrepareSummon:
      spell: sb-prepare-sound(args=["entity.evoker.prepare_summon", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Prepare Summon <gold>Sound", lore: ["<grey><italic>entity.evoker.prepare_summon"]}'
      slot: 6
    Sound_PrepareWololo:
      spell: sb-prepare-sound(args=["entity.evoker.prepare_wololo", "entity_evoker"])
      item: 'evoker_spawn_egg{name: "<yellow>Prepare Wololo <gold>Sound", lore: ["<grey><italic>entity.evoker.prepare_wololo"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-evoker_fangs:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Evoker Fangs <aqua>Sounds
  options:
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.evoker_fangs.attack", "entity_evoker_fangs"])
      item: 'totem_of_undying{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.evoker_fangs.attack"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-experience_bottle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Experience Bottle <aqua>Sounds
  options:
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.experience_bottle.throw", "entity_experience_bottle"])
      item: 'experience_bottle{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.experience_bottle.throw"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-experience_orb:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Experience Orb <aqua>Sounds
  options:
    Sound_Pickup:
      spell: sb-prepare-sound(args=["entity.experience_orb.pickup", "entity_experience_orb"])
      item: 'experience_bottle{name: "<yellow>Pickup <gold>Sound", lore: ["<grey><italic>entity.experience_orb.pickup"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-firework_rocket:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Firework Rocket <aqua>Sounds
  options:
    Sound_Blast:
      spell: sb-prepare-sound(args=["entity.firework_rocket.blast", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Blast <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.blast"]}'
      slot: 0
    Sound_BlastFar:
      spell: sb-prepare-sound(args=["entity.firework_rocket.blast_far", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Blast Far <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.blast_far"]}'
      slot: 1
    Sound_LargeBlast:
      spell: sb-prepare-sound(args=["entity.firework_rocket.large_blast", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Large Blast <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.large_blast"]}'
      slot: 2
    Sound_LargeBlastFar:
      spell: sb-prepare-sound(args=["entity.firework_rocket.large_blast_far", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Large Blast Far <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.large_blast_far"]}'
      slot: 3
    Sound_Launch:
      spell: sb-prepare-sound(args=["entity.firework_rocket.launch", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Launch <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.launch"]}'
      slot: 4
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.firework_rocket.shoot", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.shoot"]}'
      slot: 5
    Sound_Twinkle:
      spell: sb-prepare-sound(args=["entity.firework_rocket.twinkle", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Twinkle <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.twinkle"]}'
      slot: 6
    Sound_TwinkleFar:
      spell: sb-prepare-sound(args=["entity.firework_rocket.twinkle_far", "entity_firework_rocket"])
      item: 'firework_rocket{name: "<yellow>Twinkle Far <gold>Sound", lore: ["<grey><italic>entity.firework_rocket.twinkle_far"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-fish:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Fish <aqua>Sounds
  options:
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.fish.swim", "entity_fish"])
      item: 'tropical_fish_bucket{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.fish.swim"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-fishing_bobber:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Fishing Bobber <aqua>Sounds
  options:
    Sound_Retrieve:
      spell: sb-prepare-sound(args=["entity.fishing_bobber.retrieve", "entity_fishing_bobber"])
      item: 'fishing_rod{name: "<yellow>Retrieve <gold>Sound", lore: ["<grey><italic>entity.fishing_bobber.retrieve"]}'
      slot: 0
    Sound_Splash:
      spell: sb-prepare-sound(args=["entity.fishing_bobber.splash", "entity_fishing_bobber"])
      item: 'fishing_rod{name: "<yellow>Splash <gold>Sound", lore: ["<grey><italic>entity.fishing_bobber.splash"]}'
      slot: 1
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.fishing_bobber.throw", "entity_fishing_bobber"])
      item: 'fishing_rod{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.fishing_bobber.throw"]}'
      slot: 2
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-fox:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Fox <aqua>Sounds
  options:
    Sound_Aggro:
      spell: sb-prepare-sound(args=["entity.fox.aggro", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Aggro <gold>Sound", lore: ["<grey><italic>entity.fox.aggro"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.fox.ambient", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.fox.ambient"]}'
      slot: 1
    Sound_Bite:
      spell: sb-prepare-sound(args=["entity.fox.bite", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Bite <gold>Sound", lore: ["<grey><italic>entity.fox.bite"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.fox.death", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.fox.death"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.fox.eat", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.fox.eat"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.fox.hurt", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.fox.hurt"]}'
      slot: 5
    Sound_Screech:
      spell: sb-prepare-sound(args=["entity.fox.screech", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Screech <gold>Sound", lore: ["<grey><italic>entity.fox.screech"]}'
      slot: 6
    Sound_Sleep:
      spell: sb-prepare-sound(args=["entity.fox.sleep", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Sleep <gold>Sound", lore: ["<grey><italic>entity.fox.sleep"]}'
      slot: 7
    Sound_Sniff:
      spell: sb-prepare-sound(args=["entity.fox.sniff", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Sniff <gold>Sound", lore: ["<grey><italic>entity.fox.sniff"]}'
      slot: 8
    Sound_Spit:
      spell: sb-prepare-sound(args=["entity.fox.spit", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Spit <gold>Sound", lore: ["<grey><italic>entity.fox.spit"]}'
      slot: 9
    Sound_Teleport:
      spell: sb-prepare-sound(args=["entity.fox.teleport", "entity_fox"])
      item: 'fox_spawn_egg{name: "<yellow>Teleport <gold>Sound", lore: ["<grey><italic>entity.fox.teleport"]}'
      slot: 10
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-frog:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Frog <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.frog.ambient", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.frog.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.frog.death", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.frog.death"]}'
      slot: 1
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.frog.eat", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.frog.eat"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.frog.hurt", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.frog.hurt"]}'
      slot: 3
    Sound_LaySpawn:
      spell: sb-prepare-sound(args=["entity.frog.lay_spawn", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Lay Spawn <gold>Sound", lore: ["<grey><italic>entity.frog.lay_spawn"]}'
      slot: 4
    Sound_LongJump:
      spell: sb-prepare-sound(args=["entity.frog.long_jump", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Long Jump <gold>Sound", lore: ["<grey><italic>entity.frog.long_jump"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.frog.step", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.frog.step"]}'
      slot: 6
    Sound_Tongue:
      spell: sb-prepare-sound(args=["entity.frog.tongue", "entity_frog"])
      item: 'frog_spawn_egg{name: "<yellow>Tongue <gold>Sound", lore: ["<grey><italic>entity.frog.tongue"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-generic:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Generic <aqua>Sounds
  options:
    Sound_BigFall:
      spell: sb-prepare-sound(args=["entity.generic.big_fall", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Big Fall <gold>Sound", lore: ["<grey><italic>entity.generic.big_fall"]}'
      slot: 0
    Sound_Burn:
      spell: sb-prepare-sound(args=["entity.generic.burn", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Burn <gold>Sound", lore: ["<grey><italic>entity.generic.burn"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.generic.death", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.generic.death"]}'
      slot: 2
    Sound_Drink:
      spell: sb-prepare-sound(args=["entity.generic.drink", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Drink <gold>Sound", lore: ["<grey><italic>entity.generic.drink"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.generic.eat", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.generic.eat"]}'
      slot: 4
    Sound_Explode:
      spell: sb-prepare-sound(args=["entity.generic.explode", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Explode <gold>Sound", lore: ["<grey><italic>entity.generic.explode"]}'
      slot: 5
    Sound_ExtinguishFire:
      spell: sb-prepare-sound(args=["entity.generic.extinguish_fire", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Extinguish Fire <gold>Sound", lore: ["<grey><italic>entity.generic.extinguish_fire"]}'
      slot: 6
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.generic.hurt", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.generic.hurt"]}'
      slot: 7
    Sound_SmallFall:
      spell: sb-prepare-sound(args=["entity.generic.small_fall", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Small Fall <gold>Sound", lore: ["<grey><italic>entity.generic.small_fall"]}'
      slot: 8
    Sound_Splash:
      spell: sb-prepare-sound(args=["entity.generic.splash", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Splash <gold>Sound", lore: ["<grey><italic>entity.generic.splash"]}'
      slot: 9
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.generic.swim", "entity_generic"])
      item: 'bookshelf{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.generic.swim"]}'
      slot: 10
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-ghast:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ghast <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.ghast.ambient", "entity_ghast"])
      item: 'ghast_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.ghast.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.ghast.death", "entity_ghast"])
      item: 'ghast_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.ghast.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.ghast.hurt", "entity_ghast"])
      item: 'ghast_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.ghast.hurt"]}'
      slot: 2
    Sound_Scream:
      spell: sb-prepare-sound(args=["entity.ghast.scream", "entity_ghast"])
      item: 'ghast_spawn_egg{name: "<yellow>Scream <gold>Sound", lore: ["<grey><italic>entity.ghast.scream"]}'
      slot: 3
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.ghast.shoot", "entity_ghast"])
      item: 'ghast_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.ghast.shoot"]}'
      slot: 4
    Sound_Warn:
      spell: sb-prepare-sound(args=["entity.ghast.warn", "entity_ghast"])
      item: 'ghast_spawn_egg{name: "<yellow>Warn <gold>Sound", lore: ["<grey><italic>entity.ghast.warn"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-glow_item_frame:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Glow Item Frame <aqua>Sounds
  options:
    Sound_AddItem:
      spell: sb-prepare-sound(args=["entity.glow_item_frame.add_item", "entity_glow_item_frame"])
      item: 'glow_item_frame{name: "<yellow>Add Item <gold>Sound", lore: ["<grey><italic>entity.glow_item_frame.add_item"]}'
      slot: 0
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.glow_item_frame.break", "entity_glow_item_frame"])
      item: 'glow_item_frame{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.glow_item_frame.break"]}'
      slot: 1
    Sound_Place:
      spell: sb-prepare-sound(args=["entity.glow_item_frame.place", "entity_glow_item_frame"])
      item: 'glow_item_frame{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>entity.glow_item_frame.place"]}'
      slot: 2
    Sound_RemoveItem:
      spell: sb-prepare-sound(args=["entity.glow_item_frame.remove_item", "entity_glow_item_frame"])
      item: 'glow_item_frame{name: "<yellow>Remove Item <gold>Sound", lore: ["<grey><italic>entity.glow_item_frame.remove_item"]}'
      slot: 3
    Sound_RotateItem:
      spell: sb-prepare-sound(args=["entity.glow_item_frame.rotate_item", "entity_glow_item_frame"])
      item: 'glow_item_frame{name: "<yellow>Rotate Item <gold>Sound", lore: ["<grey><italic>entity.glow_item_frame.rotate_item"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-glow_squid:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Glow Squid <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.glow_squid.ambient", "entity_glow_squid"])
      item: 'glow_squid_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.glow_squid.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.glow_squid.death", "entity_glow_squid"])
      item: 'glow_squid_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.glow_squid.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.glow_squid.hurt", "entity_glow_squid"])
      item: 'glow_squid_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.glow_squid.hurt"]}'
      slot: 2
    Sound_Squirt:
      spell: sb-prepare-sound(args=["entity.glow_squid.squirt", "entity_glow_squid"])
      item: 'glow_squid_spawn_egg{name: "<yellow>Squirt <gold>Sound", lore: ["<grey><italic>entity.glow_squid.squirt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-goat:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Goat <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.goat.ambient", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.goat.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.goat.death", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.goat.death"]}'
      slot: 1
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.goat.eat", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.goat.eat"]}'
      slot: 2
    Sound_HornBreak:
      spell: sb-prepare-sound(args=["entity.goat.horn_break", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Horn Break <gold>Sound", lore: ["<grey><italic>entity.goat.horn_break"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.goat.hurt", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.goat.hurt"]}'
      slot: 4
    Sound_LongJump:
      spell: sb-prepare-sound(args=["entity.goat.long_jump", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Long Jump <gold>Sound", lore: ["<grey><italic>entity.goat.long_jump"]}'
      slot: 5
    Sound_Milk:
      spell: sb-prepare-sound(args=["entity.goat.milk", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Milk <gold>Sound", lore: ["<grey><italic>entity.goat.milk"]}'
      slot: 6
    Sound_PrepareRam:
      spell: sb-prepare-sound(args=["entity.goat.prepare_ram", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Prepare Ram <gold>Sound", lore: ["<grey><italic>entity.goat.prepare_ram"]}'
      slot: 7
    Sound_RamImpact:
      spell: sb-prepare-sound(args=["entity.goat.ram_impact", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Ram Impact <gold>Sound", lore: ["<grey><italic>entity.goat.ram_impact"]}'
      slot: 8
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.goat.step", "entity_goat"])
      item: 'goat_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.goat.step"]}'
      slot: 9
    Screaming:
      spell: sb-entity-goat-screaming
      item: 'goat_spawn_egg{name: "<gold>Screaming Sounds"}'
      slot: 10
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-goat-screaming:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Screaming <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.goat.screaming.ambient", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.goat.screaming.death", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.death"]}'
      slot: 1
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.goat.screaming.eat", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.eat"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.goat.screaming.hurt", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.hurt"]}'
      slot: 3
    Sound_LongJump:
      spell: sb-prepare-sound(args=["entity.goat.screaming.long_jump", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Long Jump <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.long_jump"]}'
      slot: 4
    Sound_Milk:
      spell: sb-prepare-sound(args=["entity.goat.screaming.milk", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Milk <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.milk"]}'
      slot: 5
    Sound_PrepareRam:
      spell: sb-prepare-sound(args=["entity.goat.screaming.prepare_ram", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Prepare Ram <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.prepare_ram"]}'
      slot: 6
    Sound_RamImpact:
      spell: sb-prepare-sound(args=["entity.goat.screaming.ram_impact", "entity_goat_screaming"])
      item: 'goat_spawn_egg{name: "<yellow>Ram Impact <gold>Sound", lore: ["<grey><italic>entity.goat.screaming.ram_impact"]}'
      slot: 7
    Button_Back:
      spell: sb-entity-goat
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-guardian:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Guardian <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.guardian.ambient", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.guardian.ambient"]}'
      slot: 0
    Sound_AmbientLand:
      spell: sb-prepare-sound(args=["entity.guardian.ambient_land", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Ambient Land <gold>Sound", lore: ["<grey><italic>entity.guardian.ambient_land"]}'
      slot: 1
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.guardian.attack", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.guardian.attack"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.guardian.death", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.guardian.death"]}'
      slot: 3
    Sound_DeathLand:
      spell: sb-prepare-sound(args=["entity.guardian.death_land", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Death Land <gold>Sound", lore: ["<grey><italic>entity.guardian.death_land"]}'
      slot: 4
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.guardian.flop", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.guardian.flop"]}'
      slot: 5
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.guardian.hurt", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.guardian.hurt"]}'
      slot: 6
    Sound_HurtLand:
      spell: sb-prepare-sound(args=["entity.guardian.hurt_land", "entity_guardian"])
      item: 'guardian_spawn_egg{name: "<yellow>Hurt Land <gold>Sound", lore: ["<grey><italic>entity.guardian.hurt_land"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-hoglin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Hoglin <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.hoglin.ambient", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.hoglin.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.hoglin.angry", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.hoglin.angry"]}'
      slot: 1
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.hoglin.attack", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.hoglin.attack"]}'
      slot: 2
    Sound_ConvertedTOZombified:
      spell: sb-prepare-sound(args=["entity.hoglin.converted_to_zombified", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Converted TO Zombified <gold>Sound", lore: ["<grey><italic>entity.hoglin.converted_to_zombified"]}'
      slot: 3
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.hoglin.death", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.hoglin.death"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.hoglin.hurt", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.hoglin.hurt"]}'
      slot: 5
    Sound_Retreat:
      spell: sb-prepare-sound(args=["entity.hoglin.retreat", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Retreat <gold>Sound", lore: ["<grey><italic>entity.hoglin.retreat"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.hoglin.step", "entity_hoglin"])
      item: 'hoglin_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.hoglin.step"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-horse:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Horse <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.horse.ambient", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.horse.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.horse.angry", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.horse.angry"]}'
      slot: 1
    Sound_Armor:
      spell: sb-prepare-sound(args=["entity.horse.armor", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Armor <gold>Sound", lore: ["<grey><italic>entity.horse.armor"]}'
      slot: 2
    Sound_Breathe:
      spell: sb-prepare-sound(args=["entity.horse.breathe", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Breathe <gold>Sound", lore: ["<grey><italic>entity.horse.breathe"]}'
      slot: 3
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.horse.death", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.horse.death"]}'
      slot: 4
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.horse.eat", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.horse.eat"]}'
      slot: 5
    Sound_Gallop:
      spell: sb-prepare-sound(args=["entity.horse.gallop", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Gallop <gold>Sound", lore: ["<grey><italic>entity.horse.gallop"]}'
      slot: 6
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.horse.hurt", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.horse.hurt"]}'
      slot: 7
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.horse.jump", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.horse.jump"]}'
      slot: 8
    Sound_Land:
      spell: sb-prepare-sound(args=["entity.horse.land", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Land <gold>Sound", lore: ["<grey><italic>entity.horse.land"]}'
      slot: 9
    Sound_Saddle:
      spell: sb-prepare-sound(args=["entity.horse.saddle", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Saddle <gold>Sound", lore: ["<grey><italic>entity.horse.saddle"]}'
      slot: 10
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.horse.step", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.horse.step"]}'
      slot: 11
    Sound_StepWood:
      spell: sb-prepare-sound(args=["entity.horse.step_wood", "entity_horse"])
      item: 'horse_spawn_egg{name: "<yellow>Step Wood <gold>Sound", lore: ["<grey><italic>entity.horse.step_wood"]}'
      slot: 12
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-hostile:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Hostile <aqua>Sounds
  options:
    Sound_BigFall:
      spell: sb-prepare-sound(args=["entity.hostile.big_fall", "entity_hostile"])
      item: 'wooden_sword{name: "<yellow>Big Fall <gold>Sound", lore: ["<grey><italic>entity.hostile.big_fall"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.hostile.death", "entity_hostile"])
      item: 'wooden_sword{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.hostile.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.hostile.hurt", "entity_hostile"])
      item: 'wooden_sword{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.hostile.hurt"]}'
      slot: 2
    Sound_SmallFall:
      spell: sb-prepare-sound(args=["entity.hostile.small_fall", "entity_hostile"])
      item: 'wooden_sword{name: "<yellow>Small Fall <gold>Sound", lore: ["<grey><italic>entity.hostile.small_fall"]}'
      slot: 3
    Sound_Splash:
      spell: sb-prepare-sound(args=["entity.hostile.splash", "entity_hostile"])
      item: 'wooden_sword{name: "<yellow>Splash <gold>Sound", lore: ["<grey><italic>entity.hostile.splash"]}'
      slot: 4
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.hostile.swim", "entity_hostile"])
      item: 'wooden_sword{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.hostile.swim"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-husk:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Husk <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.husk.ambient", "entity_husk"])
      item: 'husk_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.husk.ambient"]}'
      slot: 0
    Sound_ConvertedTOZombie:
      spell: sb-prepare-sound(args=["entity.husk.converted_to_zombie", "entity_husk"])
      item: 'husk_spawn_egg{name: "<yellow>Converted TO Zombie <gold>Sound", lore: ["<grey><italic>entity.husk.converted_to_zombie"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.husk.death", "entity_husk"])
      item: 'husk_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.husk.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.husk.hurt", "entity_husk"])
      item: 'husk_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.husk.hurt"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.husk.step", "entity_husk"])
      item: 'husk_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.husk.step"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-illusioner:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Illusioner <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.illusioner.ambient", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.illusioner.ambient"]}'
      slot: 0
    Sound_CastSpell:
      spell: sb-prepare-sound(args=["entity.illusioner.cast_spell", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Cast Spell <gold>Sound", lore: ["<grey><italic>entity.illusioner.cast_spell"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.illusioner.death", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.illusioner.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.illusioner.hurt", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.illusioner.hurt"]}'
      slot: 3
    Sound_MirrorMove:
      spell: sb-prepare-sound(args=["entity.illusioner.mirror_move", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Mirror Move <gold>Sound", lore: ["<grey><italic>entity.illusioner.mirror_move"]}'
      slot: 4
    Sound_PrepareBlindness:
      spell: sb-prepare-sound(args=["entity.illusioner.prepare_blindness", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Prepare Blindness <gold>Sound", lore: ["<grey><italic>entity.illusioner.prepare_blindness"]}'
      slot: 5
    Sound_PrepareMirror:
      spell: sb-prepare-sound(args=["entity.illusioner.prepare_mirror", "entity_illusioner"])
      item: 'lapis_lazuli{name: "<yellow>Prepare Mirror <gold>Sound", lore: ["<grey><italic>entity.illusioner.prepare_mirror"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-iron_golem:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Iron Golem <aqua>Sounds
  options:
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.iron_golem.attack", "entity_iron_golem"])
      item: 'ghast_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.iron_golem.attack"]}'
      slot: 0
    Sound_Damage:
      spell: sb-prepare-sound(args=["entity.iron_golem.damage", "entity_iron_golem"])
      item: 'ghast_spawn_egg{name: "<yellow>Damage <gold>Sound", lore: ["<grey><italic>entity.iron_golem.damage"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.iron_golem.death", "entity_iron_golem"])
      item: 'ghast_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.iron_golem.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.iron_golem.hurt", "entity_iron_golem"])
      item: 'ghast_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.iron_golem.hurt"]}'
      slot: 3
    Sound_Repair:
      spell: sb-prepare-sound(args=["entity.iron_golem.repair", "entity_iron_golem"])
      item: 'ghast_spawn_egg{name: "<yellow>Repair <gold>Sound", lore: ["<grey><italic>entity.iron_golem.repair"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.iron_golem.step", "entity_iron_golem"])
      item: 'ghast_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.iron_golem.step"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-item:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Item <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.item.break", "entity_item"])
      item: 'paper{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.item.break"]}'
      slot: 0
    Sound_Pickup:
      spell: sb-prepare-sound(args=["entity.item.pickup", "entity_item"])
      item: 'paper{name: "<yellow>Pickup <gold>Sound", lore: ["<grey><italic>entity.item.pickup"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-item_frame:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Item Frame <aqua>Sounds
  options:
    Sound_AddItem:
      spell: sb-prepare-sound(args=["entity.item_frame.add_item", "entity_item_frame"])
      item: 'item_frame{name: "<yellow>Add Item <gold>Sound", lore: ["<grey><italic>entity.item_frame.add_item"]}'
      slot: 0
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.item_frame.break", "entity_item_frame"])
      item: 'item_frame{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.item_frame.break"]}'
      slot: 1
    Sound_Place:
      spell: sb-prepare-sound(args=["entity.item_frame.place", "entity_item_frame"])
      item: 'item_frame{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>entity.item_frame.place"]}'
      slot: 2
    Sound_RemoveItem:
      spell: sb-prepare-sound(args=["entity.item_frame.remove_item", "entity_item_frame"])
      item: 'item_frame{name: "<yellow>Remove Item <gold>Sound", lore: ["<grey><italic>entity.item_frame.remove_item"]}'
      slot: 3
    Sound_RotateItem:
      spell: sb-prepare-sound(args=["entity.item_frame.rotate_item", "entity_item_frame"])
      item: 'item_frame{name: "<yellow>Rotate Item <gold>Sound", lore: ["<grey><italic>entity.item_frame.rotate_item"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-leash_knot:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Leash Knot <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.leash_knot.break", "entity_leash_knot"])
      item: 'lead{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.leash_knot.break"]}'
      slot: 0
    Sound_Place:
      spell: sb-prepare-sound(args=["entity.leash_knot.place", "entity_leash_knot"])
      item: 'lead{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>entity.leash_knot.place"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-lightning_bolt:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lightning Bolt <aqua>Sounds
  options:
    Sound_Impact:
      spell: sb-prepare-sound(args=["entity.lightning_bolt.impact", "entity_lightning_bolt"])
      item: 'lightning_rod{name: "<yellow>Impact <gold>Sound", lore: ["<grey><italic>entity.lightning_bolt.impact"]}'
      slot: 0
    Sound_Thunder:
      spell: sb-prepare-sound(args=["entity.lightning_bolt.thunder", "entity_lightning_bolt"])
      item: 'lightning_rod{name: "<yellow>Thunder <gold>Sound", lore: ["<grey><italic>entity.lightning_bolt.thunder"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-lingering_potion:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lingering Potion <aqua>Sounds
  options:
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.lingering_potion.throw", "entity_lingering_potion"])
      item: 'lingering_potion{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.lingering_potion.throw"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-llama:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Llama <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.llama.ambient", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.llama.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.llama.angry", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.llama.angry"]}'
      slot: 1
    Sound_Chest:
      spell: sb-prepare-sound(args=["entity.llama.chest", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Chest <gold>Sound", lore: ["<grey><italic>entity.llama.chest"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.llama.death", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.llama.death"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.llama.eat", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.llama.eat"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.llama.hurt", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.llama.hurt"]}'
      slot: 5
    Sound_Spit:
      spell: sb-prepare-sound(args=["entity.llama.spit", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Spit <gold>Sound", lore: ["<grey><italic>entity.llama.spit"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.llama.step", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.llama.step"]}'
      slot: 7
    Sound_Swag:
      spell: sb-prepare-sound(args=["entity.llama.swag", "entity_llama"])
      item: 'llama_spawn_egg{name: "<yellow>Swag <gold>Sound", lore: ["<grey><italic>entity.llama.swag"]}'
      slot: 8
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-magma_cube:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Magma Cube <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.magma_cube.death", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.magma_cube.death"]}'
      slot: 0
    Sound_DeathSmall:
      spell: sb-prepare-sound(args=["entity.magma_cube.death_small", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Death Small <gold>Sound", lore: ["<grey><italic>entity.magma_cube.death_small"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.magma_cube.hurt", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.magma_cube.hurt"]}'
      slot: 2
    Sound_HurtSmall:
      spell: sb-prepare-sound(args=["entity.magma_cube.hurt_small", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Hurt Small <gold>Sound", lore: ["<grey><italic>entity.magma_cube.hurt_small"]}'
      slot: 3
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.magma_cube.jump", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.magma_cube.jump"]}'
      slot: 4
    Sound_Squish:
      spell: sb-prepare-sound(args=["entity.magma_cube.squish", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Squish <gold>Sound", lore: ["<grey><italic>entity.magma_cube.squish"]}'
      slot: 5
    Sound_SquishSmall:
      spell: sb-prepare-sound(args=["entity.magma_cube.squish_small", "entity_magma_cube"])
      item: 'magma_cube_spawn_egg{name: "<yellow>Squish Small <gold>Sound", lore: ["<grey><italic>entity.magma_cube.squish_small"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-minecart:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Minecart <aqua>Sounds
  options:
    Sound_Inside:
      spell: sb-prepare-sound(args=["entity.minecart.inside", "entity_minecart"])
      item: 'minecart{name: "<yellow>Inside <gold>Sound", lore: ["<grey><italic>entity.minecart.inside"]}'
      slot: 0
    Sound_Riding:
      spell: sb-prepare-sound(args=["entity.minecart.riding", "entity_minecart"])
      item: 'minecart{name: "<yellow>Riding <gold>Sound", lore: ["<grey><italic>entity.minecart.riding"]}'
      slot: 1
    Inside:
      spell: sb-entity-minecart-inside
      item: 'minecart{name: "<gold>Inside Sounds"}'
      slot: 2
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-minecart-inside:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Inside <aqua>Sounds
  options:
    Sound_Underwater:
      spell: sb-prepare-sound(args=["entity.minecart.inside.underwater", "entity_minecart_inside"])
      item: 'minecart{name: "<yellow>Underwater <gold>Sound", lore: ["<grey><italic>entity.minecart.inside.underwater"]}'
      slot: 0
    Button_Back:
      spell: sb-entity-minecart
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-mooshroom:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mooshroom <aqua>Sounds
  options:
    Sound_Convert:
      spell: sb-prepare-sound(args=["entity.mooshroom.convert", "entity_mooshroom"])
      item: 'mooshroom_spawn_egg{name: "<yellow>Convert <gold>Sound", lore: ["<grey><italic>entity.mooshroom.convert"]}'
      slot: 0
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.mooshroom.eat", "entity_mooshroom"])
      item: 'mooshroom_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.mooshroom.eat"]}'
      slot: 1
    Sound_Milk:
      spell: sb-prepare-sound(args=["entity.mooshroom.milk", "entity_mooshroom"])
      item: 'mooshroom_spawn_egg{name: "<yellow>Milk <gold>Sound", lore: ["<grey><italic>entity.mooshroom.milk"]}'
      slot: 2
    Sound_Shear:
      spell: sb-prepare-sound(args=["entity.mooshroom.shear", "entity_mooshroom"])
      item: 'mooshroom_spawn_egg{name: "<yellow>Shear <gold>Sound", lore: ["<grey><italic>entity.mooshroom.shear"]}'
      slot: 3
    Sound_SuspiciousMilk:
      spell: sb-prepare-sound(args=["entity.mooshroom.suspicious_milk", "entity_mooshroom"])
      item: 'mooshroom_spawn_egg{name: "<yellow>Suspicious Milk <gold>Sound", lore: ["<grey><italic>entity.mooshroom.suspicious_milk"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-mule:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mule <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.mule.ambient", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.mule.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.mule.angry", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.mule.angry"]}'
      slot: 1
    Sound_Chest:
      spell: sb-prepare-sound(args=["entity.mule.chest", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Chest <gold>Sound", lore: ["<grey><italic>entity.mule.chest"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.mule.death", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.mule.death"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.mule.eat", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.mule.eat"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.mule.hurt", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.mule.hurt"]}'
      slot: 5
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.mule.jump", "entity_mule"])
      item: 'mule_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.mule.jump"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-ocelot:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ocelot <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.ocelot.ambient", "entity_ocelot"])
      item: 'ocelot_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.ocelot.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.ocelot.death", "entity_ocelot"])
      item: 'ocelot_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.ocelot.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.ocelot.hurt", "entity_ocelot"])
      item: 'ocelot_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.ocelot.hurt"]}'
      slot: 2
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-painting:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Painting <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.painting.break", "entity_painting"])
      item: 'painting{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.painting.break"]}'
      slot: 0
    Sound_Place:
      spell: sb-prepare-sound(args=["entity.painting.place", "entity_painting"])
      item: 'painting{name: "<yellow>Place <gold>Sound", lore: ["<grey><italic>entity.painting.place"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-panda:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Panda <aqua>Sounds
  options:
    Sound_AggressiveAmbient:
      spell: sb-prepare-sound(args=["entity.panda.aggressive_ambient", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Aggressive Ambient <gold>Sound", lore: ["<grey><italic>entity.panda.aggressive_ambient"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.panda.ambient", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.panda.ambient"]}'
      slot: 1
    Sound_Bite:
      spell: sb-prepare-sound(args=["entity.panda.bite", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Bite <gold>Sound", lore: ["<grey><italic>entity.panda.bite"]}'
      slot: 2
    Sound_CantBreed:
      spell: sb-prepare-sound(args=["entity.panda.cant_breed", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Cant Breed <gold>Sound", lore: ["<grey><italic>entity.panda.cant_breed"]}'
      slot: 3
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.panda.death", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.panda.death"]}'
      slot: 4
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.panda.eat", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.panda.eat"]}'
      slot: 5
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.panda.hurt", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.panda.hurt"]}'
      slot: 6
    Sound_PreSneeze:
      spell: sb-prepare-sound(args=["entity.panda.pre_sneeze", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Pre Sneeze <gold>Sound", lore: ["<grey><italic>entity.panda.pre_sneeze"]}'
      slot: 7
    Sound_Sneeze:
      spell: sb-prepare-sound(args=["entity.panda.sneeze", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Sneeze <gold>Sound", lore: ["<grey><italic>entity.panda.sneeze"]}'
      slot: 8
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.panda.step", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.panda.step"]}'
      slot: 9
    Sound_WorriedAmbient:
      spell: sb-prepare-sound(args=["entity.panda.worried_ambient", "entity_panda"])
      item: 'panda_spawn_egg{name: "<yellow>Worried Ambient <gold>Sound", lore: ["<grey><italic>entity.panda.worried_ambient"]}'
      slot: 10
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-parrot:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Parrot <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.parrot.ambient", "entity_parrot"])
      item: 'parrot_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.parrot.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.parrot.death", "entity_parrot"])
      item: 'parrot_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.parrot.death"]}'
      slot: 1
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.parrot.eat", "entity_parrot"])
      item: 'parrot_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.parrot.eat"]}'
      slot: 2
    Sound_Fly:
      spell: sb-prepare-sound(args=["entity.parrot.fly", "entity_parrot"])
      item: 'parrot_spawn_egg{name: "<yellow>Fly <gold>Sound", lore: ["<grey><italic>entity.parrot.fly"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.parrot.hurt", "entity_parrot"])
      item: 'parrot_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.parrot.hurt"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.parrot.step", "entity_parrot"])
      item: 'parrot_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.parrot.step"]}'
      slot: 5
    Imitate:
      spell: sb-entity-parrot-imitate
      item: 'parrot_spawn_egg{name: "<gold>Imitate Sounds"}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-parrot-imitate:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Imitate <aqua>Sounds
  options:
    Sound_Blaze:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.blaze", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Blaze <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.blaze"]}'
      slot: 0
    Sound_Bogged:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.bogged", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Bogged <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.bogged"]}'
      slot: 1
    Sound_Breeze:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.breeze", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Breeze <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.breeze"]}'
      slot: 2
    Sound_Creaking:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.creaking", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Creaking <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.creaking"]}'
      slot: 3
    Sound_Creeper:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.creeper", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Creeper <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.creeper"]}'
      slot: 4
    Sound_Drowned:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.drowned", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Drowned <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.drowned"]}'
      slot: 5
    Sound_ElderGuardian:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.elder_guardian", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Elder Guardian <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.elder_guardian"]}'
      slot: 6
    Sound_EnderDragon:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.ender_dragon", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Ender Dragon <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.ender_dragon"]}'
      slot: 7
    Sound_Endermite:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.endermite", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Endermite <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.endermite"]}'
      slot: 8
    Sound_Evoker:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.evoker", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Evoker <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.evoker"]}'
      slot: 9
    Sound_Ghast:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.ghast", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Ghast <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.ghast"]}'
      slot: 10
    Sound_Guardian:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.guardian", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Guardian <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.guardian"]}'
      slot: 11
    Sound_Hoglin:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.hoglin", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Hoglin <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.hoglin"]}'
      slot: 12
    Sound_Husk:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.husk", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Husk <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.husk"]}'
      slot: 13
    Sound_Illusioner:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.illusioner", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Illusioner <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.illusioner"]}'
      slot: 14
    Sound_MagmaCube:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.magma_cube", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Magma Cube <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.magma_cube"]}'
      slot: 15
    Sound_Phantom:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.phantom", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Phantom <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.phantom"]}'
      slot: 16
    Sound_Piglin:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.piglin", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Piglin <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.piglin"]}'
      slot: 17
    Sound_PiglinBrute:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.piglin_brute", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Piglin Brute <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.piglin_brute"]}'
      slot: 18
    Sound_Pillager:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.pillager", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Pillager <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.pillager"]}'
      slot: 19
    Sound_Ravager:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.ravager", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Ravager <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.ravager"]}'
      slot: 20
    Sound_Shulker:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.shulker", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Shulker <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.shulker"]}'
      slot: 21
    Sound_Silverfish:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.silverfish", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Silverfish <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.silverfish"]}'
      slot: 22
    Sound_Skeleton:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.skeleton", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Skeleton <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.skeleton"]}'
      slot: 23
    Sound_Slime:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.slime", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Slime <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.slime"]}'
      slot: 24
    Sound_Spider:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.spider", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Spider <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.spider"]}'
      slot: 25
    Sound_Stray:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.stray", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Stray <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.stray"]}'
      slot: 26
    Sound_Vex:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.vex", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Vex <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.vex"]}'
      slot: 27
    Sound_Vindicator:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.vindicator", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Vindicator <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.vindicator"]}'
      slot: 28
    Sound_Warden:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.warden", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Warden <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.warden"]}'
      slot: 29
    Sound_Witch:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.witch", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Witch <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.witch"]}'
      slot: 30
    Sound_Wither:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.wither", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Wither <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.wither"]}'
      slot: 31
    Sound_WitherSkeleton:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.wither_skeleton", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Wither Skeleton <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.wither_skeleton"]}'
      slot: 32
    Sound_Zoglin:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.zoglin", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Zoglin <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.zoglin"]}'
      slot: 33
    Sound_Zombie:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.zombie", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Zombie <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.zombie"]}'
      slot: 34
    Sound_ZombieVillager:
      spell: sb-prepare-sound(args=["entity.parrot.imitate.zombie_villager", "entity_parrot_imitate"])
      item: 'parrot_spawn_egg{name: "<yellow>Zombie Villager <gold>Sound", lore: ["<grey><italic>entity.parrot.imitate.zombie_villager"]}'
      slot: 35
    Button_Back:
      spell: sb-entity-parrot
      item: 'book{name: "<gold>Back"}'
      slot: 40
sb-entity-phantom:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Phantom <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.phantom.ambient", "entity_phantom"])
      item: 'phantom_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.phantom.ambient"]}'
      slot: 0
    Sound_Bite:
      spell: sb-prepare-sound(args=["entity.phantom.bite", "entity_phantom"])
      item: 'phantom_spawn_egg{name: "<yellow>Bite <gold>Sound", lore: ["<grey><italic>entity.phantom.bite"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.phantom.death", "entity_phantom"])
      item: 'phantom_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.phantom.death"]}'
      slot: 2
    Sound_Flap:
      spell: sb-prepare-sound(args=["entity.phantom.flap", "entity_phantom"])
      item: 'phantom_spawn_egg{name: "<yellow>Flap <gold>Sound", lore: ["<grey><italic>entity.phantom.flap"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.phantom.hurt", "entity_phantom"])
      item: 'phantom_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.phantom.hurt"]}'
      slot: 4
    Sound_Swoop:
      spell: sb-prepare-sound(args=["entity.phantom.swoop", "entity_phantom"])
      item: 'phantom_spawn_egg{name: "<yellow>Swoop <gold>Sound", lore: ["<grey><italic>entity.phantom.swoop"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-pig:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pig <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.pig.ambient", "entity_pig"])
      item: 'pig_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.pig.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.pig.death", "entity_pig"])
      item: 'pig_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.pig.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.pig.hurt", "entity_pig"])
      item: 'pig_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.pig.hurt"]}'
      slot: 2
    Sound_Saddle:
      spell: sb-prepare-sound(args=["entity.pig.saddle", "entity_pig"])
      item: 'pig_spawn_egg{name: "<yellow>Saddle <gold>Sound", lore: ["<grey><italic>entity.pig.saddle"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.pig.step", "entity_pig"])
      item: 'pig_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.pig.step"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-piglin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Piglin <aqua>Sounds
  options:
    Sound_AdmiringItem:
      spell: sb-prepare-sound(args=["entity.piglin.admiring_item", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Admiring Item <gold>Sound", lore: ["<grey><italic>entity.piglin.admiring_item"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.piglin.ambient", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.piglin.ambient"]}'
      slot: 1
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.piglin.angry", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.piglin.angry"]}'
      slot: 2
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.piglin.celebrate", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.piglin.celebrate"]}'
      slot: 3
    Sound_ConvertedTOZombified:
      spell: sb-prepare-sound(args=["entity.piglin.converted_to_zombified", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Converted TO Zombified <gold>Sound", lore: ["<grey><italic>entity.piglin.converted_to_zombified"]}'
      slot: 4
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.piglin.death", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.piglin.death"]}'
      slot: 5
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.piglin.hurt", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.piglin.hurt"]}'
      slot: 6
    Sound_Jealous:
      spell: sb-prepare-sound(args=["entity.piglin.jealous", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Jealous <gold>Sound", lore: ["<grey><italic>entity.piglin.jealous"]}'
      slot: 7
    Sound_Retreat:
      spell: sb-prepare-sound(args=["entity.piglin.retreat", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Retreat <gold>Sound", lore: ["<grey><italic>entity.piglin.retreat"]}'
      slot: 8
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.piglin.step", "entity_piglin"])
      item: 'piglin_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.piglin.step"]}'
      slot: 9
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-piglin_brute:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Piglin Brute <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.piglin_brute.ambient", "entity_piglin_brute"])
      item: 'piglin_brute_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.piglin_brute.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.piglin_brute.angry", "entity_piglin_brute"])
      item: 'piglin_brute_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.piglin_brute.angry"]}'
      slot: 1
    Sound_ConvertedTOZombified:
      spell: sb-prepare-sound(args=["entity.piglin_brute.converted_to_zombified", "entity_piglin_brute"])
      item: 'piglin_brute_spawn_egg{name: "<yellow>Converted TO Zombified <gold>Sound", lore: ["<grey><italic>entity.piglin_brute.converted_to_zombified"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.piglin_brute.death", "entity_piglin_brute"])
      item: 'piglin_brute_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.piglin_brute.death"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.piglin_brute.hurt", "entity_piglin_brute"])
      item: 'piglin_brute_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.piglin_brute.hurt"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.piglin_brute.step", "entity_piglin_brute"])
      item: 'piglin_brute_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.piglin_brute.step"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-pillager:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Pillager <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.pillager.ambient", "entity_pillager"])
      item: 'pillager_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.pillager.ambient"]}'
      slot: 0
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.pillager.celebrate", "entity_pillager"])
      item: 'pillager_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.pillager.celebrate"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.pillager.death", "entity_pillager"])
      item: 'pillager_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.pillager.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.pillager.hurt", "entity_pillager"])
      item: 'pillager_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.pillager.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-player:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Player <aqua>Sounds
  options:
    Sound_BigFall:
      spell: sb-prepare-sound(args=["entity.player.big_fall", "entity_player"])
      item: 'player_head{name: "<yellow>Big Fall <gold>Sound", lore: ["<grey><italic>entity.player.big_fall"]}'
      slot: 0
    Sound_Breath:
      spell: sb-prepare-sound(args=["entity.player.breath", "entity_player"])
      item: 'player_head{name: "<yellow>Breath <gold>Sound", lore: ["<grey><italic>entity.player.breath"]}'
      slot: 1
    Sound_Burp:
      spell: sb-prepare-sound(args=["entity.player.burp", "entity_player"])
      item: 'player_head{name: "<yellow>Burp <gold>Sound", lore: ["<grey><italic>entity.player.burp"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.player.death", "entity_player"])
      item: 'player_head{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.player.death"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.player.hurt", "entity_player"])
      item: 'player_head{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.player.hurt"]}'
      slot: 4
    Sound_HurtDrown:
      spell: sb-prepare-sound(args=["entity.player.hurt_drown", "entity_player"])
      item: 'player_head{name: "<yellow>Hurt Drown <gold>Sound", lore: ["<grey><italic>entity.player.hurt_drown"]}'
      slot: 5
    Sound_HurtFreeze:
      spell: sb-prepare-sound(args=["entity.player.hurt_freeze", "entity_player"])
      item: 'player_head{name: "<yellow>Hurt Freeze <gold>Sound", lore: ["<grey><italic>entity.player.hurt_freeze"]}'
      slot: 6
    Sound_HurtONFire:
      spell: sb-prepare-sound(args=["entity.player.hurt_on_fire", "entity_player"])
      item: 'player_head{name: "<yellow>Hurt ON Fire <gold>Sound", lore: ["<grey><italic>entity.player.hurt_on_fire"]}'
      slot: 7
    Sound_HurtSweetBerryBush:
      spell: sb-prepare-sound(args=["entity.player.hurt_sweet_berry_bush", "entity_player"])
      item: 'player_head{name: "<yellow>Hurt Sweet Berry Bush <gold>Sound", lore: ["<grey><italic>entity.player.hurt_sweet_berry_bush"]}'
      slot: 8
    Sound_Levelup:
      spell: sb-prepare-sound(args=["entity.player.levelup", "entity_player"])
      item: 'player_head{name: "<yellow>Levelup <gold>Sound", lore: ["<grey><italic>entity.player.levelup"]}'
      slot: 9
    Sound_SmallFall:
      spell: sb-prepare-sound(args=["entity.player.small_fall", "entity_player"])
      item: 'player_head{name: "<yellow>Small Fall <gold>Sound", lore: ["<grey><italic>entity.player.small_fall"]}'
      slot: 10
    Sound_Splash:
      spell: sb-prepare-sound(args=["entity.player.splash", "entity_player"])
      item: 'player_head{name: "<yellow>Splash <gold>Sound", lore: ["<grey><italic>entity.player.splash"]}'
      slot: 11
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.player.swim", "entity_player"])
      item: 'player_head{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.player.swim"]}'
      slot: 12
    Sound_Teleport:
      spell: sb-prepare-sound(args=["entity.player.teleport", "entity_player"])
      item: 'player_head{name: "<yellow>Teleport <gold>Sound", lore: ["<grey><italic>entity.player.teleport"]}'
      slot: 13
    Attack:
      spell: sb-entity-player-attack
      item: 'iron_sword{name: "<gold>Attack Sounds"}'
      slot: 14
    Splash:
      spell: sb-entity-player-splash
      item: 'water_bucket{name: "<gold>Splash Sounds"}'
      slot: 15
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-player-attack:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Attack <aqua>Sounds
  options:
    Sound_Crit:
      spell: sb-prepare-sound(args=["entity.player.attack.crit", "entity_player_attack"])
      item: 'iron_sword{name: "<yellow>Crit <gold>Sound", lore: ["<grey><italic>entity.player.attack.crit"]}'
      slot: 0
    Sound_Knockback:
      spell: sb-prepare-sound(args=["entity.player.attack.knockback", "entity_player_attack"])
      item: 'iron_sword{name: "<yellow>Knockback <gold>Sound", lore: ["<grey><italic>entity.player.attack.knockback"]}'
      slot: 1
    Sound_Nodamage:
      spell: sb-prepare-sound(args=["entity.player.attack.nodamage", "entity_player_attack"])
      item: 'iron_sword{name: "<yellow>Nodamage <gold>Sound", lore: ["<grey><italic>entity.player.attack.nodamage"]}'
      slot: 2
    Sound_Strong:
      spell: sb-prepare-sound(args=["entity.player.attack.strong", "entity_player_attack"])
      item: 'iron_sword{name: "<yellow>Strong <gold>Sound", lore: ["<grey><italic>entity.player.attack.strong"]}'
      slot: 3
    Sound_Sweep:
      spell: sb-prepare-sound(args=["entity.player.attack.sweep", "entity_player_attack"])
      item: 'iron_sword{name: "<yellow>Sweep <gold>Sound", lore: ["<grey><italic>entity.player.attack.sweep"]}'
      slot: 4
    Sound_Weak:
      spell: sb-prepare-sound(args=["entity.player.attack.weak", "entity_player_attack"])
      item: 'iron_sword{name: "<yellow>Weak <gold>Sound", lore: ["<grey><italic>entity.player.attack.weak"]}'
      slot: 5
    Button_Back:
      spell: sb-entity-player
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-player-splash:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Splash <aqua>Sounds
  options:
    Sound_HighSpeed:
      spell: sb-prepare-sound(args=["entity.player.splash.high_speed", "entity_player_splash"])
      item: 'water_bucket{name: "<yellow>High Speed <gold>Sound", lore: ["<grey><italic>entity.player.splash.high_speed"]}'
      slot: 0
    Button_Back:
      spell: sb-entity-player
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-polar_bear:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Polar Bear <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.polar_bear.ambient", "entity_polar_bear"])
      item: 'polar_bear_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.polar_bear.ambient"]}'
      slot: 0
    Sound_AmbientBaby:
      spell: sb-prepare-sound(args=["entity.polar_bear.ambient_baby", "entity_polar_bear"])
      item: 'polar_bear_spawn_egg{name: "<yellow>Ambient Baby <gold>Sound", lore: ["<grey><italic>entity.polar_bear.ambient_baby"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.polar_bear.death", "entity_polar_bear"])
      item: 'polar_bear_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.polar_bear.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.polar_bear.hurt", "entity_polar_bear"])
      item: 'polar_bear_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.polar_bear.hurt"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.polar_bear.step", "entity_polar_bear"])
      item: 'polar_bear_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.polar_bear.step"]}'
      slot: 4
    Sound_Warning:
      spell: sb-prepare-sound(args=["entity.polar_bear.warning", "entity_polar_bear"])
      item: 'polar_bear_spawn_egg{name: "<yellow>Warning <gold>Sound", lore: ["<grey><italic>entity.polar_bear.warning"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-puffer_fish:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Puffer Fish <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.puffer_fish.ambient", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.ambient"]}'
      slot: 0
    Sound_BlowOut:
      spell: sb-prepare-sound(args=["entity.puffer_fish.blow_out", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Blow Out <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.blow_out"]}'
      slot: 1
    Sound_BlowUP:
      spell: sb-prepare-sound(args=["entity.puffer_fish.blow_up", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Blow UP <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.blow_up"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.puffer_fish.death", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.death"]}'
      slot: 3
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.puffer_fish.flop", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.flop"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.puffer_fish.hurt", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.hurt"]}'
      slot: 5
    Sound_Sting:
      spell: sb-prepare-sound(args=["entity.puffer_fish.sting", "entity_puffer_fish"])
      item: 'pufferfish_spawn_egg{name: "<yellow>Sting <gold>Sound", lore: ["<grey><italic>entity.puffer_fish.sting"]}'
      slot: 6
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-rabbit:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Rabbit <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.rabbit.ambient", "entity_rabbit"])
      item: 'rabbit_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.rabbit.ambient"]}'
      slot: 0
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.rabbit.attack", "entity_rabbit"])
      item: 'rabbit_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.rabbit.attack"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.rabbit.death", "entity_rabbit"])
      item: 'rabbit_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.rabbit.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.rabbit.hurt", "entity_rabbit"])
      item: 'rabbit_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.rabbit.hurt"]}'
      slot: 3
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.rabbit.jump", "entity_rabbit"])
      item: 'rabbit_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.rabbit.jump"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-ravager:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ravager <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.ravager.ambient", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.ravager.ambient"]}'
      slot: 0
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.ravager.attack", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.ravager.attack"]}'
      slot: 1
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.ravager.celebrate", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.ravager.celebrate"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.ravager.death", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.ravager.death"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.ravager.hurt", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.ravager.hurt"]}'
      slot: 4
    Sound_Roar:
      spell: sb-prepare-sound(args=["entity.ravager.roar", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Roar <gold>Sound", lore: ["<grey><italic>entity.ravager.roar"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.ravager.step", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.ravager.step"]}'
      slot: 6
    Sound_Stunned:
      spell: sb-prepare-sound(args=["entity.ravager.stunned", "entity_ravager"])
      item: 'ravager_spawn_egg{name: "<yellow>Stunned <gold>Sound", lore: ["<grey><italic>entity.ravager.stunned"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-salmon:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Salmon <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.salmon.ambient", "entity_salmon"])
      item: 'salmon_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.salmon.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.salmon.death", "entity_salmon"])
      item: 'salmon_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.salmon.death"]}'
      slot: 1
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.salmon.flop", "entity_salmon"])
      item: 'salmon_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.salmon.flop"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.salmon.hurt", "entity_salmon"])
      item: 'salmon_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.salmon.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-sheep:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sheep <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.sheep.ambient", "entity_sheep"])
      item: 'sheep_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.sheep.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.sheep.death", "entity_sheep"])
      item: 'sheep_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.sheep.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.sheep.hurt", "entity_sheep"])
      item: 'sheep_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.sheep.hurt"]}'
      slot: 2
    Sound_Shear:
      spell: sb-prepare-sound(args=["entity.sheep.shear", "entity_sheep"])
      item: 'sheep_spawn_egg{name: "<yellow>Shear <gold>Sound", lore: ["<grey><italic>entity.sheep.shear"]}'
      slot: 3
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.sheep.step", "entity_sheep"])
      item: 'sheep_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.sheep.step"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-shulker:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Shulker <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.shulker.ambient", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.shulker.ambient"]}'
      slot: 0
    Sound_Close:
      spell: sb-prepare-sound(args=["entity.shulker.close", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Close <gold>Sound", lore: ["<grey><italic>entity.shulker.close"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.shulker.death", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.shulker.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.shulker.hurt", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.shulker.hurt"]}'
      slot: 3
    Sound_HurtClosed:
      spell: sb-prepare-sound(args=["entity.shulker.hurt_closed", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Hurt Closed <gold>Sound", lore: ["<grey><italic>entity.shulker.hurt_closed"]}'
      slot: 4
    Sound_Open:
      spell: sb-prepare-sound(args=["entity.shulker.open", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Open <gold>Sound", lore: ["<grey><italic>entity.shulker.open"]}'
      slot: 5
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.shulker.shoot", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.shulker.shoot"]}'
      slot: 6
    Sound_Teleport:
      spell: sb-prepare-sound(args=["entity.shulker.teleport", "entity_shulker"])
      item: 'shulker_spawn_egg{name: "<yellow>Teleport <gold>Sound", lore: ["<grey><italic>entity.shulker.teleport"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-shulker_bullet:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Shulker Bullet <aqua>Sounds
  options:
    Sound_Hit:
      spell: sb-prepare-sound(args=["entity.shulker_bullet.hit", "entity_shulker_bullet"])
      item: 'shulker_shell{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>entity.shulker_bullet.hit"]}'
      slot: 0
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.shulker_bullet.hurt", "entity_shulker_bullet"])
      item: 'shulker_shell{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.shulker_bullet.hurt"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-silverfish:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Silverfish <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.silverfish.ambient", "entity_silverfish"])
      item: 'silverfish_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.silverfish.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.silverfish.death", "entity_silverfish"])
      item: 'silverfish_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.silverfish.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.silverfish.hurt", "entity_silverfish"])
      item: 'silverfish_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.silverfish.hurt"]}'
      slot: 2
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.silverfish.step", "entity_silverfish"])
      item: 'silverfish_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.silverfish.step"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-skeleton:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Skeleton <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.skeleton.ambient", "entity_skeleton"])
      item: 'skeleton_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.skeleton.ambient"]}'
      slot: 0
    Sound_ConvertedTOStray:
      spell: sb-prepare-sound(args=["entity.skeleton.converted_to_stray", "entity_skeleton"])
      item: 'skeleton_spawn_egg{name: "<yellow>Converted TO Stray <gold>Sound", lore: ["<grey><italic>entity.skeleton.converted_to_stray"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.skeleton.death", "entity_skeleton"])
      item: 'skeleton_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.skeleton.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.skeleton.hurt", "entity_skeleton"])
      item: 'skeleton_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.skeleton.hurt"]}'
      slot: 3
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.skeleton.shoot", "entity_skeleton"])
      item: 'skeleton_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.skeleton.shoot"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.skeleton.step", "entity_skeleton"])
      item: 'skeleton_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.skeleton.step"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-skeleton_horse:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Skeleton Horse <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.ambient", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.ambient"]}'
      slot: 0
    Sound_AmbientWater:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.ambient_water", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Ambient Water <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.ambient_water"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.death", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.death"]}'
      slot: 2
    Sound_GallopWater:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.gallop_water", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Gallop Water <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.gallop_water"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.hurt", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.hurt"]}'
      slot: 4
    Sound_JumpWater:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.jump_water", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Jump Water <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.jump_water"]}'
      slot: 5
    Sound_StepWater:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.step_water", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Step Water <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.step_water"]}'
      slot: 6
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.skeleton_horse.swim", "entity_skeleton_horse"])
      item: 'skeleton_horse_spawn_egg{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.skeleton_horse.swim"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-slime:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Slime <aqua>Sounds
  options:
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.slime.attack", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.slime.attack"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.slime.death", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.slime.death"]}'
      slot: 1
    Sound_DeathSmall:
      spell: sb-prepare-sound(args=["entity.slime.death_small", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Death Small <gold>Sound", lore: ["<grey><italic>entity.slime.death_small"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.slime.hurt", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.slime.hurt"]}'
      slot: 3
    Sound_HurtSmall:
      spell: sb-prepare-sound(args=["entity.slime.hurt_small", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Hurt Small <gold>Sound", lore: ["<grey><italic>entity.slime.hurt_small"]}'
      slot: 4
    Sound_Jump:
      spell: sb-prepare-sound(args=["entity.slime.jump", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Jump <gold>Sound", lore: ["<grey><italic>entity.slime.jump"]}'
      slot: 5
    Sound_JumpSmall:
      spell: sb-prepare-sound(args=["entity.slime.jump_small", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Jump Small <gold>Sound", lore: ["<grey><italic>entity.slime.jump_small"]}'
      slot: 6
    Sound_Squish:
      spell: sb-prepare-sound(args=["entity.slime.squish", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Squish <gold>Sound", lore: ["<grey><italic>entity.slime.squish"]}'
      slot: 7
    Sound_SquishSmall:
      spell: sb-prepare-sound(args=["entity.slime.squish_small", "entity_slime"])
      item: 'slime_spawn_egg{name: "<yellow>Squish Small <gold>Sound", lore: ["<grey><italic>entity.slime.squish_small"]}'
      slot: 8
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-sniffer:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sniffer <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.sniffer.death", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.sniffer.death"]}'
      slot: 0
    Sound_Digging:
      spell: sb-prepare-sound(args=["entity.sniffer.digging", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Digging <gold>Sound", lore: ["<grey><italic>entity.sniffer.digging"]}'
      slot: 1
    Sound_DiggingStop:
      spell: sb-prepare-sound(args=["entity.sniffer.digging_stop", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Digging Stop <gold>Sound", lore: ["<grey><italic>entity.sniffer.digging_stop"]}'
      slot: 2
    Sound_DropSeed:
      spell: sb-prepare-sound(args=["entity.sniffer.drop_seed", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Drop Seed <gold>Sound", lore: ["<grey><italic>entity.sniffer.drop_seed"]}'
      slot: 3
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.sniffer.eat", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.sniffer.eat"]}'
      slot: 4
    Sound_Happy:
      spell: sb-prepare-sound(args=["entity.sniffer.happy", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Happy <gold>Sound", lore: ["<grey><italic>entity.sniffer.happy"]}'
      slot: 5
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.sniffer.hurt", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.sniffer.hurt"]}'
      slot: 6
    Sound_Idle:
      spell: sb-prepare-sound(args=["entity.sniffer.idle", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Idle <gold>Sound", lore: ["<grey><italic>entity.sniffer.idle"]}'
      slot: 7
    Sound_Scenting:
      spell: sb-prepare-sound(args=["entity.sniffer.scenting", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Scenting <gold>Sound", lore: ["<grey><italic>entity.sniffer.scenting"]}'
      slot: 8
    Sound_Searching:
      spell: sb-prepare-sound(args=["entity.sniffer.searching", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Searching <gold>Sound", lore: ["<grey><italic>entity.sniffer.searching"]}'
      slot: 9
    Sound_Sniffing:
      spell: sb-prepare-sound(args=["entity.sniffer.sniffing", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Sniffing <gold>Sound", lore: ["<grey><italic>entity.sniffer.sniffing"]}'
      slot: 10
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.sniffer.step", "entity_sniffer"])
      item: 'sniffer_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.sniffer.step"]}'
      slot: 11
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-snow_golem:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Snow Golem <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.snow_golem.ambient", "entity_snow_golem"])
      item: 'snow_golem_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.snow_golem.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.snow_golem.death", "entity_snow_golem"])
      item: 'snow_golem_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.snow_golem.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.snow_golem.hurt", "entity_snow_golem"])
      item: 'snow_golem_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.snow_golem.hurt"]}'
      slot: 2
    Sound_Shear:
      spell: sb-prepare-sound(args=["entity.snow_golem.shear", "entity_snow_golem"])
      item: 'snow_golem_spawn_egg{name: "<yellow>Shear <gold>Sound", lore: ["<grey><italic>entity.snow_golem.shear"]}'
      slot: 3
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.snow_golem.shoot", "entity_snow_golem"])
      item: 'snow_golem_spawn_egg{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.snow_golem.shoot"]}'
      slot: 4
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-snowball:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Snowball <aqua>Sounds
  options:
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.snowball.throw", "entity_snowball"])
      item: 'snowball{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.snowball.throw"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-spider:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Spider <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.spider.ambient", "entity_spider"])
      item: 'spider_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.spider.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.spider.death", "entity_spider"])
      item: 'spider_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.spider.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.spider.hurt", "entity_spider"])
      item: 'spider_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.spider.hurt"]}'
      slot: 2
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.spider.step", "entity_spider"])
      item: 'spider_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.spider.step"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-splash_potion:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Splash Potion <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["entity.splash_potion.break", "entity_splash_potion"])
      item: 'splash_potion{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>entity.splash_potion.break"]}'
      slot: 0
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.splash_potion.throw", "entity_splash_potion"])
      item: 'splash_potion{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.splash_potion.throw"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-squid:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Squid <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.squid.ambient", "entity_squid"])
      item: 'squid_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.squid.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.squid.death", "entity_squid"])
      item: 'squid_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.squid.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.squid.hurt", "entity_squid"])
      item: 'squid_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.squid.hurt"]}'
      slot: 2
    Sound_Squirt:
      spell: sb-prepare-sound(args=["entity.squid.squirt", "entity_squid"])
      item: 'squid_spawn_egg{name: "<yellow>Squirt <gold>Sound", lore: ["<grey><italic>entity.squid.squirt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-stray:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Stray <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.stray.ambient", "entity_stray"])
      item: 'stray_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.stray.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.stray.death", "entity_stray"])
      item: 'stray_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.stray.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.stray.hurt", "entity_stray"])
      item: 'stray_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.stray.hurt"]}'
      slot: 2
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.stray.step", "entity_stray"])
      item: 'stray_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.stray.step"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-strider:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Strider <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.strider.ambient", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.strider.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.strider.death", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.strider.death"]}'
      slot: 1
    Sound_Eat:
      spell: sb-prepare-sound(args=["entity.strider.eat", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Eat <gold>Sound", lore: ["<grey><italic>entity.strider.eat"]}'
      slot: 2
    Sound_Happy:
      spell: sb-prepare-sound(args=["entity.strider.happy", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Happy <gold>Sound", lore: ["<grey><italic>entity.strider.happy"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.strider.hurt", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.strider.hurt"]}'
      slot: 4
    Sound_Retreat:
      spell: sb-prepare-sound(args=["entity.strider.retreat", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Retreat <gold>Sound", lore: ["<grey><italic>entity.strider.retreat"]}'
      slot: 5
    Sound_Saddle:
      spell: sb-prepare-sound(args=["entity.strider.saddle", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Saddle <gold>Sound", lore: ["<grey><italic>entity.strider.saddle"]}'
      slot: 6
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.strider.step", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.strider.step"]}'
      slot: 7
    Sound_StepLava:
      spell: sb-prepare-sound(args=["entity.strider.step_lava", "entity_strider"])
      item: 'strider_spawn_egg{name: "<yellow>Step Lava <gold>Sound", lore: ["<grey><italic>entity.strider.step_lava"]}'
      slot: 8
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-tadpole:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Tadpole <aqua>Sounds
  options:
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.tadpole.death", "entity_tadpole"])
      item: 'tadpole_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.tadpole.death"]}'
      slot: 0
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.tadpole.flop", "entity_tadpole"])
      item: 'tadpole_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.tadpole.flop"]}'
      slot: 1
    Sound_GrowUP:
      spell: sb-prepare-sound(args=["entity.tadpole.grow_up", "entity_tadpole"])
      item: 'tadpole_spawn_egg{name: "<yellow>Grow UP <gold>Sound", lore: ["<grey><italic>entity.tadpole.grow_up"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.tadpole.hurt", "entity_tadpole"])
      item: 'tadpole_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.tadpole.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-tnt:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Tnt <aqua>Sounds
  options:
    Sound_Primed:
      spell: sb-prepare-sound(args=["entity.tnt.primed", "entity_tnt"])
      item: 'tnt{name: "<yellow>Primed <gold>Sound", lore: ["<grey><italic>entity.tnt.primed"]}'
      slot: 0
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-tropical_fish:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Tropical Fish <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.tropical_fish.ambient", "entity_tropical_fish"])
      item: 'tropical_fish_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.tropical_fish.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.tropical_fish.death", "entity_tropical_fish"])
      item: 'tropical_fish_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.tropical_fish.death"]}'
      slot: 1
    Sound_Flop:
      spell: sb-prepare-sound(args=["entity.tropical_fish.flop", "entity_tropical_fish"])
      item: 'tropical_fish_spawn_egg{name: "<yellow>Flop <gold>Sound", lore: ["<grey><italic>entity.tropical_fish.flop"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.tropical_fish.hurt", "entity_tropical_fish"])
      item: 'tropical_fish_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.tropical_fish.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-turtle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Turtle <aqua>Sounds
  options:
    Sound_AmbientLand:
      spell: sb-prepare-sound(args=["entity.turtle.ambient_land", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Ambient Land <gold>Sound", lore: ["<grey><italic>entity.turtle.ambient_land"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.turtle.death", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.turtle.death"]}'
      slot: 1
    Sound_DeathBaby:
      spell: sb-prepare-sound(args=["entity.turtle.death_baby", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Death Baby <gold>Sound", lore: ["<grey><italic>entity.turtle.death_baby"]}'
      slot: 2
    Sound_EggBreak:
      spell: sb-prepare-sound(args=["entity.turtle.egg_break", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Egg Break <gold>Sound", lore: ["<grey><italic>entity.turtle.egg_break"]}'
      slot: 3
    Sound_EggCrack:
      spell: sb-prepare-sound(args=["entity.turtle.egg_crack", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Egg Crack <gold>Sound", lore: ["<grey><italic>entity.turtle.egg_crack"]}'
      slot: 4
    Sound_EggHatch:
      spell: sb-prepare-sound(args=["entity.turtle.egg_hatch", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Egg Hatch <gold>Sound", lore: ["<grey><italic>entity.turtle.egg_hatch"]}'
      slot: 5
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.turtle.hurt", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.turtle.hurt"]}'
      slot: 6
    Sound_HurtBaby:
      spell: sb-prepare-sound(args=["entity.turtle.hurt_baby", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Hurt Baby <gold>Sound", lore: ["<grey><italic>entity.turtle.hurt_baby"]}'
      slot: 7
    Sound_LayEgg:
      spell: sb-prepare-sound(args=["entity.turtle.lay_egg", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Lay Egg <gold>Sound", lore: ["<grey><italic>entity.turtle.lay_egg"]}'
      slot: 8
    Sound_Shamble:
      spell: sb-prepare-sound(args=["entity.turtle.shamble", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Shamble <gold>Sound", lore: ["<grey><italic>entity.turtle.shamble"]}'
      slot: 9
    Sound_ShambleBaby:
      spell: sb-prepare-sound(args=["entity.turtle.shamble_baby", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Shamble Baby <gold>Sound", lore: ["<grey><italic>entity.turtle.shamble_baby"]}'
      slot: 10
    Sound_Swim:
      spell: sb-prepare-sound(args=["entity.turtle.swim", "entity_turtle"])
      item: 'turtle_spawn_egg{name: "<yellow>Swim <gold>Sound", lore: ["<grey><italic>entity.turtle.swim"]}'
      slot: 11
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-vex:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Vex <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.vex.ambient", "entity_vex"])
      item: 'vex_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.vex.ambient"]}'
      slot: 0
    Sound_Charge:
      spell: sb-prepare-sound(args=["entity.vex.charge", "entity_vex"])
      item: 'vex_spawn_egg{name: "<yellow>Charge <gold>Sound", lore: ["<grey><italic>entity.vex.charge"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.vex.death", "entity_vex"])
      item: 'vex_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.vex.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.vex.hurt", "entity_vex"])
      item: 'vex_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.vex.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-villager:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Villager <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.villager.ambient", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.villager.ambient"]}'
      slot: 0
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.villager.celebrate", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.villager.celebrate"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.villager.death", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.villager.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.villager.hurt", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.villager.hurt"]}'
      slot: 3
    Sound_NO:
      spell: sb-prepare-sound(args=["entity.villager.no", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>NO <gold>Sound", lore: ["<grey><italic>entity.villager.no"]}'
      slot: 4
    Sound_Trade:
      spell: sb-prepare-sound(args=["entity.villager.trade", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Trade <gold>Sound", lore: ["<grey><italic>entity.villager.trade"]}'
      slot: 5
    Sound_WorkArmorer:
      spell: sb-prepare-sound(args=["entity.villager.work_armorer", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Armorer <gold>Sound", lore: ["<grey><italic>entity.villager.work_armorer"]}'
      slot: 6
    Sound_WorkButcher:
      spell: sb-prepare-sound(args=["entity.villager.work_butcher", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Butcher <gold>Sound", lore: ["<grey><italic>entity.villager.work_butcher"]}'
      slot: 7
    Sound_WorkCartographer:
      spell: sb-prepare-sound(args=["entity.villager.work_cartographer", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Cartographer <gold>Sound", lore: ["<grey><italic>entity.villager.work_cartographer"]}'
      slot: 8
    Sound_WorkCleric:
      spell: sb-prepare-sound(args=["entity.villager.work_cleric", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Cleric <gold>Sound", lore: ["<grey><italic>entity.villager.work_cleric"]}'
      slot: 9
    Sound_WorkFarmer:
      spell: sb-prepare-sound(args=["entity.villager.work_farmer", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Farmer <gold>Sound", lore: ["<grey><italic>entity.villager.work_farmer"]}'
      slot: 10
    Sound_WorkFisherman:
      spell: sb-prepare-sound(args=["entity.villager.work_fisherman", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Fisherman <gold>Sound", lore: ["<grey><italic>entity.villager.work_fisherman"]}'
      slot: 11
    Sound_WorkFletcher:
      spell: sb-prepare-sound(args=["entity.villager.work_fletcher", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Fletcher <gold>Sound", lore: ["<grey><italic>entity.villager.work_fletcher"]}'
      slot: 12
    Sound_WorkLeatherworker:
      spell: sb-prepare-sound(args=["entity.villager.work_leatherworker", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Leatherworker <gold>Sound", lore: ["<grey><italic>entity.villager.work_leatherworker"]}'
      slot: 13
    Sound_WorkLibrarian:
      spell: sb-prepare-sound(args=["entity.villager.work_librarian", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Librarian <gold>Sound", lore: ["<grey><italic>entity.villager.work_librarian"]}'
      slot: 14
    Sound_WorkMason:
      spell: sb-prepare-sound(args=["entity.villager.work_mason", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Mason <gold>Sound", lore: ["<grey><italic>entity.villager.work_mason"]}'
      slot: 15
    Sound_WorkShepherd:
      spell: sb-prepare-sound(args=["entity.villager.work_shepherd", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Shepherd <gold>Sound", lore: ["<grey><italic>entity.villager.work_shepherd"]}'
      slot: 16
    Sound_WorkToolsmith:
      spell: sb-prepare-sound(args=["entity.villager.work_toolsmith", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Toolsmith <gold>Sound", lore: ["<grey><italic>entity.villager.work_toolsmith"]}'
      slot: 17
    Sound_WorkWeaponsmith:
      spell: sb-prepare-sound(args=["entity.villager.work_weaponsmith", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Work Weaponsmith <gold>Sound", lore: ["<grey><italic>entity.villager.work_weaponsmith"]}'
      slot: 18
    Sound_Yes:
      spell: sb-prepare-sound(args=["entity.villager.yes", "entity_villager"])
      item: 'villager_spawn_egg{name: "<yellow>Yes <gold>Sound", lore: ["<grey><italic>entity.villager.yes"]}'
      slot: 19
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 31
sb-entity-vindicator:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Vindicator <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.vindicator.ambient", "entity_vindicator"])
      item: 'vindicator_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.vindicator.ambient"]}'
      slot: 0
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.vindicator.celebrate", "entity_vindicator"])
      item: 'vindicator_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.vindicator.celebrate"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.vindicator.death", "entity_vindicator"])
      item: 'vindicator_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.vindicator.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.vindicator.hurt", "entity_vindicator"])
      item: 'vindicator_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.vindicator.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wandering_trader:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wandering Trader <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wandering_trader.ambient", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wandering_trader.death", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.death"]}'
      slot: 1
    Sound_Disappeared:
      spell: sb-prepare-sound(args=["entity.wandering_trader.disappeared", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Disappeared <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.disappeared"]}'
      slot: 2
    Sound_DrinkMilk:
      spell: sb-prepare-sound(args=["entity.wandering_trader.drink_milk", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Drink Milk <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.drink_milk"]}'
      slot: 3
    Sound_DrinkPotion:
      spell: sb-prepare-sound(args=["entity.wandering_trader.drink_potion", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Drink Potion <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.drink_potion"]}'
      slot: 4
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wandering_trader.hurt", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.hurt"]}'
      slot: 5
    Sound_NO:
      spell: sb-prepare-sound(args=["entity.wandering_trader.no", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>NO <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.no"]}'
      slot: 6
    Sound_Reappeared:
      spell: sb-prepare-sound(args=["entity.wandering_trader.reappeared", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Reappeared <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.reappeared"]}'
      slot: 7
    Sound_Trade:
      spell: sb-prepare-sound(args=["entity.wandering_trader.trade", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Trade <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.trade"]}'
      slot: 8
    Sound_Yes:
      spell: sb-prepare-sound(args=["entity.wandering_trader.yes", "entity_wandering_trader"])
      item: 'wandering_trader_spawn_egg{name: "<yellow>Yes <gold>Sound", lore: ["<grey><italic>entity.wandering_trader.yes"]}'
      slot: 9
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-warden:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Warden <aqua>Sounds
  options:
    Sound_Agitated:
      spell: sb-prepare-sound(args=["entity.warden.agitated", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Agitated <gold>Sound", lore: ["<grey><italic>entity.warden.agitated"]}'
      slot: 0
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.warden.ambient", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.warden.ambient"]}'
      slot: 1
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.warden.angry", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.warden.angry"]}'
      slot: 2
    Sound_AttackImpact:
      spell: sb-prepare-sound(args=["entity.warden.attack_impact", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Attack Impact <gold>Sound", lore: ["<grey><italic>entity.warden.attack_impact"]}'
      slot: 3
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.warden.death", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.warden.death"]}'
      slot: 4
    Sound_Dig:
      spell: sb-prepare-sound(args=["entity.warden.dig", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Dig <gold>Sound", lore: ["<grey><italic>entity.warden.dig"]}'
      slot: 5
    Sound_Emerge:
      spell: sb-prepare-sound(args=["entity.warden.emerge", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Emerge <gold>Sound", lore: ["<grey><italic>entity.warden.emerge"]}'
      slot: 6
    Sound_Heartbeat:
      spell: sb-prepare-sound(args=["entity.warden.heartbeat", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Heartbeat <gold>Sound", lore: ["<grey><italic>entity.warden.heartbeat"]}'
      slot: 7
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.warden.hurt", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.warden.hurt"]}'
      slot: 8
    Sound_Listening:
      spell: sb-prepare-sound(args=["entity.warden.listening", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Listening <gold>Sound", lore: ["<grey><italic>entity.warden.listening"]}'
      slot: 9
    Sound_ListeningAngry:
      spell: sb-prepare-sound(args=["entity.warden.listening_angry", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Listening Angry <gold>Sound", lore: ["<grey><italic>entity.warden.listening_angry"]}'
      slot: 10
    Sound_NearbyClose:
      spell: sb-prepare-sound(args=["entity.warden.nearby_close", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Nearby Close <gold>Sound", lore: ["<grey><italic>entity.warden.nearby_close"]}'
      slot: 11
    Sound_NearbyCloser:
      spell: sb-prepare-sound(args=["entity.warden.nearby_closer", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Nearby Closer <gold>Sound", lore: ["<grey><italic>entity.warden.nearby_closer"]}'
      slot: 12
    Sound_NearbyClosest:
      spell: sb-prepare-sound(args=["entity.warden.nearby_closest", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Nearby Closest <gold>Sound", lore: ["<grey><italic>entity.warden.nearby_closest"]}'
      slot: 13
    Sound_Roar:
      spell: sb-prepare-sound(args=["entity.warden.roar", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Roar <gold>Sound", lore: ["<grey><italic>entity.warden.roar"]}'
      slot: 14
    Sound_Sniff:
      spell: sb-prepare-sound(args=["entity.warden.sniff", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Sniff <gold>Sound", lore: ["<grey><italic>entity.warden.sniff"]}'
      slot: 15
    Sound_SonicBoom:
      spell: sb-prepare-sound(args=["entity.warden.sonic_boom", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Sonic Boom <gold>Sound", lore: ["<grey><italic>entity.warden.sonic_boom"]}'
      slot: 16
    Sound_SonicCharge:
      spell: sb-prepare-sound(args=["entity.warden.sonic_charge", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Sonic Charge <gold>Sound", lore: ["<grey><italic>entity.warden.sonic_charge"]}'
      slot: 17
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.warden.step", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.warden.step"]}'
      slot: 18
    Sound_TendrilClicks:
      spell: sb-prepare-sound(args=["entity.warden.tendril_clicks", "entity_warden"])
      item: 'warden_spawn_egg{name: "<yellow>Tendril Clicks <gold>Sound", lore: ["<grey><italic>entity.warden.tendril_clicks"]}'
      slot: 19
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 31
sb-entity-wind_charge:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wind Charge <aqua>Sounds
  options:
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.wind_charge.throw", "entity_wind_charge"])
      item: 'wind_charge{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.wind_charge.throw"]}'
      slot: 0
    Sound_WindBurst:
      spell: sb-prepare-sound(args=["entity.wind_charge.wind_burst", "entity_wind_charge"])
      item: 'wind_charge{name: "<yellow>Wind Burst <gold>Sound", lore: ["<grey><italic>entity.wind_charge.wind_burst"]}'
      slot: 1
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-witch:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Witch <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.witch.ambient", "entity_witch"])
      item: 'witch_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.witch.ambient"]}'
      slot: 0
    Sound_Celebrate:
      spell: sb-prepare-sound(args=["entity.witch.celebrate", "entity_witch"])
      item: 'witch_spawn_egg{name: "<yellow>Celebrate <gold>Sound", lore: ["<grey><italic>entity.witch.celebrate"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.witch.death", "entity_witch"])
      item: 'witch_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.witch.death"]}'
      slot: 2
    Sound_Drink:
      spell: sb-prepare-sound(args=["entity.witch.drink", "entity_witch"])
      item: 'witch_spawn_egg{name: "<yellow>Drink <gold>Sound", lore: ["<grey><italic>entity.witch.drink"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.witch.hurt", "entity_witch"])
      item: 'witch_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.witch.hurt"]}'
      slot: 4
    Sound_Throw:
      spell: sb-prepare-sound(args=["entity.witch.throw", "entity_witch"])
      item: 'witch_spawn_egg{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>entity.witch.throw"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wither:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wither <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wither.ambient", "entity_wither"])
      item: 'nether_star{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wither.ambient"]}'
      slot: 0
    Sound_BreakBlock:
      spell: sb-prepare-sound(args=["entity.wither.break_block", "entity_wither"])
      item: 'nether_star{name: "<yellow>Break Block <gold>Sound", lore: ["<grey><italic>entity.wither.break_block"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wither.death", "entity_wither"])
      item: 'nether_star{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wither.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wither.hurt", "entity_wither"])
      item: 'nether_star{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wither.hurt"]}'
      slot: 3
    Sound_Shoot:
      spell: sb-prepare-sound(args=["entity.wither.shoot", "entity_wither"])
      item: 'nether_star{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>entity.wither.shoot"]}'
      slot: 4
    Sound_Spawn:
      spell: sb-prepare-sound(args=["entity.wither.spawn", "entity_wither"])
      item: 'nether_star{name: "<yellow>Spawn <gold>Sound", lore: ["<grey><italic>entity.wither.spawn"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wither_skeleton:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wither Skeleton <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wither_skeleton.ambient", "entity_wither_skeleton"])
      item: 'wither_skeleton_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wither_skeleton.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wither_skeleton.death", "entity_wither_skeleton"])
      item: 'wither_skeleton_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wither_skeleton.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wither_skeleton.hurt", "entity_wither_skeleton"])
      item: 'wither_skeleton_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wither_skeleton.hurt"]}'
      slot: 2
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.wither_skeleton.step", "entity_wither_skeleton"])
      item: 'wither_skeleton_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.wither_skeleton.step"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf.ambient", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf.death", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf.growl", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf.hurt", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf.pant", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf.pant"]}'
      slot: 4
    Sound_Shake:
      spell: sb-prepare-sound(args=["entity.wolf.shake", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Shake <gold>Sound", lore: ["<grey><italic>entity.wolf.shake"]}'
      slot: 5
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.wolf.step", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.wolf.step"]}'
      slot: 6
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf.whine", "entity_wolf"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf.whine"]}'
      slot: 7
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf_angry:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Angry <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf_angry.ambient", "entity_wolf_angry"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf_angry.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf_angry.death", "entity_wolf_angry"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf_angry.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf_angry.growl", "entity_wolf_angry"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf_angry.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf_angry.hurt", "entity_wolf_angry"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf_angry.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf_angry.pant", "entity_wolf_angry"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf_angry.pant"]}'
      slot: 4
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf_angry.whine", "entity_wolf_angry"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf_angry.whine"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf_big:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Big <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf_big.ambient", "entity_wolf_big"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf_big.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf_big.death", "entity_wolf_big"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf_big.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf_big.growl", "entity_wolf_big"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf_big.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf_big.hurt", "entity_wolf_big"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf_big.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf_big.pant", "entity_wolf_big"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf_big.pant"]}'
      slot: 4
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf_big.whine", "entity_wolf_big"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf_big.whine"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf_cute:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Cute <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf_cute.ambient", "entity_wolf_cute"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf_cute.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf_cute.death", "entity_wolf_cute"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf_cute.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf_cute.growl", "entity_wolf_cute"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf_cute.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf_cute.hurt", "entity_wolf_cute"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf_cute.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf_cute.pant", "entity_wolf_cute"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf_cute.pant"]}'
      slot: 4
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf_cute.whine", "entity_wolf_cute"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf_cute.whine"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf_grumpy:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Grumpy <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf_grumpy.ambient", "entity_wolf_grumpy"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf_grumpy.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf_grumpy.death", "entity_wolf_grumpy"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf_grumpy.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf_grumpy.growl", "entity_wolf_grumpy"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf_grumpy.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf_grumpy.hurt", "entity_wolf_grumpy"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf_grumpy.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf_grumpy.pant", "entity_wolf_grumpy"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf_grumpy.pant"]}'
      slot: 4
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf_grumpy.whine", "entity_wolf_grumpy"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf_grumpy.whine"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf_puglin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Puglin <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf_puglin.ambient", "entity_wolf_puglin"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf_puglin.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf_puglin.death", "entity_wolf_puglin"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf_puglin.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf_puglin.growl", "entity_wolf_puglin"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf_puglin.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf_puglin.hurt", "entity_wolf_puglin"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf_puglin.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf_puglin.pant", "entity_wolf_puglin"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf_puglin.pant"]}'
      slot: 4
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf_puglin.whine", "entity_wolf_puglin"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf_puglin.whine"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-wolf_sad:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Sad <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.wolf_sad.ambient", "entity_wolf_sad"])
      item: 'wolf_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.wolf_sad.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.wolf_sad.death", "entity_wolf_sad"])
      item: 'wolf_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.wolf_sad.death"]}'
      slot: 1
    Sound_Growl:
      spell: sb-prepare-sound(args=["entity.wolf_sad.growl", "entity_wolf_sad"])
      item: 'wolf_spawn_egg{name: "<yellow>Growl <gold>Sound", lore: ["<grey><italic>entity.wolf_sad.growl"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.wolf_sad.hurt", "entity_wolf_sad"])
      item: 'wolf_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.wolf_sad.hurt"]}'
      slot: 3
    Sound_Pant:
      spell: sb-prepare-sound(args=["entity.wolf_sad.pant", "entity_wolf_sad"])
      item: 'wolf_spawn_egg{name: "<yellow>Pant <gold>Sound", lore: ["<grey><italic>entity.wolf_sad.pant"]}'
      slot: 4
    Sound_Whine:
      spell: sb-prepare-sound(args=["entity.wolf_sad.whine", "entity_wolf_sad"])
      item: 'wolf_spawn_egg{name: "<yellow>Whine <gold>Sound", lore: ["<grey><italic>entity.wolf_sad.whine"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-zoglin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Zoglin <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.zoglin.ambient", "entity_zoglin"])
      item: 'zoglin_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.zoglin.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.zoglin.angry", "entity_zoglin"])
      item: 'zoglin_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.zoglin.angry"]}'
      slot: 1
    Sound_Attack:
      spell: sb-prepare-sound(args=["entity.zoglin.attack", "entity_zoglin"])
      item: 'zoglin_spawn_egg{name: "<yellow>Attack <gold>Sound", lore: ["<grey><italic>entity.zoglin.attack"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.zoglin.death", "entity_zoglin"])
      item: 'zoglin_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.zoglin.death"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.zoglin.hurt", "entity_zoglin"])
      item: 'zoglin_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.zoglin.hurt"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.zoglin.step", "entity_zoglin"])
      item: 'zoglin_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.zoglin.step"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-zombie:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Zombie <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.zombie.ambient", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.zombie.ambient"]}'
      slot: 0
    Sound_AttackIronDoor:
      spell: sb-prepare-sound(args=["entity.zombie.attack_iron_door", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Attack Iron Door <gold>Sound", lore: ["<grey><italic>entity.zombie.attack_iron_door"]}'
      slot: 1
    Sound_AttackWoodenDoor:
      spell: sb-prepare-sound(args=["entity.zombie.attack_wooden_door", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Attack Wooden Door <gold>Sound", lore: ["<grey><italic>entity.zombie.attack_wooden_door"]}'
      slot: 2
    Sound_BreakWoodenDoor:
      spell: sb-prepare-sound(args=["entity.zombie.break_wooden_door", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Break Wooden Door <gold>Sound", lore: ["<grey><italic>entity.zombie.break_wooden_door"]}'
      slot: 3
    Sound_ConvertedTODrowned:
      spell: sb-prepare-sound(args=["entity.zombie.converted_to_drowned", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Converted TO Drowned <gold>Sound", lore: ["<grey><italic>entity.zombie.converted_to_drowned"]}'
      slot: 4
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.zombie.death", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.zombie.death"]}'
      slot: 5
    Sound_DestroyEgg:
      spell: sb-prepare-sound(args=["entity.zombie.destroy_egg", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Destroy Egg <gold>Sound", lore: ["<grey><italic>entity.zombie.destroy_egg"]}'
      slot: 6
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.zombie.hurt", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.zombie.hurt"]}'
      slot: 7
    Sound_Infect:
      spell: sb-prepare-sound(args=["entity.zombie.infect", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Infect <gold>Sound", lore: ["<grey><italic>entity.zombie.infect"]}'
      slot: 8
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.zombie.step", "entity_zombie"])
      item: 'zombie_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.zombie.step"]}'
      slot: 9
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-entity-zombie_horse:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Zombie Horse <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.zombie_horse.ambient", "entity_zombie_horse"])
      item: 'zombie_horse_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.zombie_horse.ambient"]}'
      slot: 0
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.zombie_horse.death", "entity_zombie_horse"])
      item: 'zombie_horse_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.zombie_horse.death"]}'
      slot: 1
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.zombie_horse.hurt", "entity_zombie_horse"])
      item: 'zombie_horse_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.zombie_horse.hurt"]}'
      slot: 2
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-zombie_villager:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Zombie Villager <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.zombie_villager.ambient", "entity_zombie_villager"])
      item: 'zombie_villager_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.zombie_villager.ambient"]}'
      slot: 0
    Sound_Converted:
      spell: sb-prepare-sound(args=["entity.zombie_villager.converted", "entity_zombie_villager"])
      item: 'zombie_villager_spawn_egg{name: "<yellow>Converted <gold>Sound", lore: ["<grey><italic>entity.zombie_villager.converted"]}'
      slot: 1
    Sound_Cure:
      spell: sb-prepare-sound(args=["entity.zombie_villager.cure", "entity_zombie_villager"])
      item: 'zombie_villager_spawn_egg{name: "<yellow>Cure <gold>Sound", lore: ["<grey><italic>entity.zombie_villager.cure"]}'
      slot: 2
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.zombie_villager.death", "entity_zombie_villager"])
      item: 'zombie_villager_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.zombie_villager.death"]}'
      slot: 3
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.zombie_villager.hurt", "entity_zombie_villager"])
      item: 'zombie_villager_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.zombie_villager.hurt"]}'
      slot: 4
    Sound_Step:
      spell: sb-prepare-sound(args=["entity.zombie_villager.step", "entity_zombie_villager"])
      item: 'zombie_villager_spawn_egg{name: "<yellow>Step <gold>Sound", lore: ["<grey><italic>entity.zombie_villager.step"]}'
      slot: 5
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-entity-zombified_piglin:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Zombified Piglin <aqua>Sounds
  options:
    Sound_Ambient:
      spell: sb-prepare-sound(args=["entity.zombified_piglin.ambient", "entity_zombified_piglin"])
      item: 'zombified_piglin_spawn_egg{name: "<yellow>Ambient <gold>Sound", lore: ["<grey><italic>entity.zombified_piglin.ambient"]}'
      slot: 0
    Sound_Angry:
      spell: sb-prepare-sound(args=["entity.zombified_piglin.angry", "entity_zombified_piglin"])
      item: 'zombified_piglin_spawn_egg{name: "<yellow>Angry <gold>Sound", lore: ["<grey><italic>entity.zombified_piglin.angry"]}'
      slot: 1
    Sound_Death:
      spell: sb-prepare-sound(args=["entity.zombified_piglin.death", "entity_zombified_piglin"])
      item: 'zombified_piglin_spawn_egg{name: "<yellow>Death <gold>Sound", lore: ["<grey><italic>entity.zombified_piglin.death"]}'
      slot: 2
    Sound_Hurt:
      spell: sb-prepare-sound(args=["entity.zombified_piglin.hurt", "entity_zombified_piglin"])
      item: 'zombified_piglin_spawn_egg{name: "<yellow>Hurt <gold>Sound", lore: ["<grey><italic>entity.zombified_piglin.hurt"]}'
      slot: 3
    Button_Back:
      spell: sb-entity1
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-event:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Event <aqua>Sounds
  options:
    MobEffect:
      spell: sb-event-mob_effect
      item: 'potion{name: "<gold>Mob Effect Sounds"}'
      slot: 0
    Raid:
      spell: sb-event-raid
      item: 'bell{name: "<gold>Raid Sounds"}'
      slot: 1
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-event-mob_effect:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mob Effect <aqua>Sounds
  options:
    Sound_BadOmen:
      spell: sb-prepare-sound(args=["event.mob_effect.bad_omen", "event_mob_effect"])
      item: 'potion{name: "<yellow>Bad Omen <gold>Sound", lore: ["<grey><italic>event.mob_effect.bad_omen"]}'
      slot: 0
    Sound_RaidOmen:
      spell: sb-prepare-sound(args=["event.mob_effect.raid_omen", "event_mob_effect"])
      item: 'potion{name: "<yellow>Raid Omen <gold>Sound", lore: ["<grey><italic>event.mob_effect.raid_omen"]}'
      slot: 1
    Sound_TrialOmen:
      spell: sb-prepare-sound(args=["event.mob_effect.trial_omen", "event_mob_effect"])
      item: 'potion{name: "<yellow>Trial Omen <gold>Sound", lore: ["<grey><italic>event.mob_effect.trial_omen"]}'
      slot: 2
    Button_Back:
      spell: sb-event
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-event-raid:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Raid <aqua>Sounds
  options:
    Sound_Horn:
      spell: sb-prepare-sound(args=["event.raid.horn", "event_raid"])
      item: 'bell{name: "<yellow>Horn <gold>Sound", lore: ["<grey><italic>event.raid.horn"]}'
      slot: 0
    Button_Back:
      spell: sb-event
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Item <aqua>Sounds
  options:
    Armor:
      spell: sb-item-armor
      item: 'iron_chestplate{name: "<gold>Armor Sounds"}'
      slot: 0
    Axe:
      spell: sb-item-axe
      item: 'iron_axe{name: "<gold>Axe Sounds"}'
      slot: 1
    BoneMeal:
      spell: sb-item-bone_meal
      item: 'bone_meal{name: "<gold>Bone Meal Sounds"}'
      slot: 2
    Book:
      spell: sb-item-book
      item: 'book{name: "<gold>Book Sounds"}'
      slot: 3
    Bottle:
      spell: sb-item-bottle
      item: 'glass_bottle{name: "<gold>Bottle Sounds"}'
      slot: 4
    Brush:
      spell: sb-item-brush
      item: 'brush{name: "<gold>Brush Sounds"}'
      slot: 5
    Bucket:
      spell: sb-item-bucket
      item: 'bucket{name: "<gold>Bucket Sounds"}'
      slot: 6
    Bundle:
      spell: sb-item-bundle
      item: 'bundle{name: "<gold>Bundle Sounds"}'
      slot: 7
    ChorusFruit:
      spell: sb-item-chorus_fruit
      item: 'chorus_fruit{name: "<gold>Chorus Fruit Sounds"}'
      slot: 8
    Crop:
      spell: sb-item-crop
      item: 'wheat_seeds{name: "<gold>Crop Sounds"}'
      slot: 9
    Crossbow:
      spell: sb-item-crossbow
      item: 'crossbow{name: "<gold>Crossbow Sounds"}'
      slot: 10
    Dye:
      spell: sb-item-dye
      item: 'cyan_dye{name: "<gold>Dye Sounds"}'
      slot: 11
    Elytra:
      spell: sb-item-elytra
      item: 'elytra{name: "<gold>Elytra Sounds"}'
      slot: 12
    Firecharge:
      spell: sb-item-firecharge
      item: 'fire_charge{name: "<gold>Firecharge Sounds"}'
      slot: 13
    Flintandsteel:
      spell: sb-item-flintandsteel
      item: 'flint_and_steel{name: "<gold>Flintandsteel Sounds"}'
      slot: 14
    GlowInkSac:
      spell: sb-item-glow_ink_sac
      item: 'glow_ink_sac{name: "<gold>Glow Ink Sac Sounds"}'
      slot: 15
    GoatHorn:
      spell: sb-item-goat_horn
      item: 'goat_horn{name: "<gold>Goat Horn Sounds"}'
      slot: 16
    Hoe:
      spell: sb-item-hoe
      item: 'wooden_hoe{name: "<gold>Hoe Sounds"}'
      slot: 17
    HoneyBottle:
      spell: sb-item-honey_bottle
      item: 'honey_bottle{name: "<gold>Honey Bottle Sounds"}'
      slot: 18
    Honeycomb:
      spell: sb-item-honeycomb
      item: 'honeycomb{name: "<gold>Honeycomb Sounds"}'
      slot: 19
    InkSac:
      spell: sb-item-ink_sac
      item: 'ink_sac{name: "<gold>Ink Sac Sounds"}'
      slot: 20
    LodestoneCompass:
      spell: sb-item-lodestone_compass
      item: 'compass{name: "<gold>Lodestone Compass Sounds"}'
      slot: 21
    Mace:
      spell: sb-item-mace
      item: 'stone_axe{name: "<gold>Mace Sounds"}'
      slot: 22
    NetherWart:
      spell: sb-item-nether_wart
      item: 'nether_wart{name: "<gold>Nether Wart Sounds"}'
      slot: 23
    OminousBottle:
      spell: sb-item-ominous_bottle
      item: 'honey_bottle{name: "<gold>Ominous Bottle Sounds"}'
      slot: 24
    Shield:
      spell: sb-item-shield
      item: 'shield{name: "<gold>Shield Sounds"}'
      slot: 25
    Shovel:
      spell: sb-item-shovel
      item: 'wooden_shovel{name: "<gold>Shovel Sounds"}'
      slot: 26
    Spyglass:
      spell: sb-item-spyglass
      item: 'spyglass{name: "<gold>Spyglass Sounds"}'
      slot: 27
    Totem:
      spell: sb-item-totem
      item: 'totem_of_undying{name: "<gold>Totem Sounds"}'
      slot: 28
    Trident:
      spell: sb-item-trident
      item: 'trident{name: "<gold>Trident Sounds"}'
      slot: 29
    WolfArmor:
      spell: sb-item-wolf_armor
      item: 'leather_horse_armor{name: "<gold>Wolf Armor Sounds"}'
      slot: 30
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 40
sb-item-armor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Armor <aqua>Sounds
  options:
    Sound_EquipChain:
      spell: sb-prepare-sound(args=["item.armor.equip_chain", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Chain <gold>Sound", lore: ["<grey><italic>item.armor.equip_chain"]}'
      slot: 0
    Sound_EquipDiamond:
      spell: sb-prepare-sound(args=["item.armor.equip_diamond", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Diamond <gold>Sound", lore: ["<grey><italic>item.armor.equip_diamond"]}'
      slot: 1
    Sound_EquipElytra:
      spell: sb-prepare-sound(args=["item.armor.equip_elytra", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Elytra <gold>Sound", lore: ["<grey><italic>item.armor.equip_elytra"]}'
      slot: 2
    Sound_EquipGeneric:
      spell: sb-prepare-sound(args=["item.armor.equip_generic", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Generic <gold>Sound", lore: ["<grey><italic>item.armor.equip_generic"]}'
      slot: 3
    Sound_EquipGold:
      spell: sb-prepare-sound(args=["item.armor.equip_gold", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Gold <gold>Sound", lore: ["<grey><italic>item.armor.equip_gold"]}'
      slot: 4
    Sound_EquipIron:
      spell: sb-prepare-sound(args=["item.armor.equip_iron", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Iron <gold>Sound", lore: ["<grey><italic>item.armor.equip_iron"]}'
      slot: 5
    Sound_EquipLeather:
      spell: sb-prepare-sound(args=["item.armor.equip_leather", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Leather <gold>Sound", lore: ["<grey><italic>item.armor.equip_leather"]}'
      slot: 6
    Sound_EquipNetherite:
      spell: sb-prepare-sound(args=["item.armor.equip_netherite", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Netherite <gold>Sound", lore: ["<grey><italic>item.armor.equip_netherite"]}'
      slot: 7
    Sound_EquipTurtle:
      spell: sb-prepare-sound(args=["item.armor.equip_turtle", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Turtle <gold>Sound", lore: ["<grey><italic>item.armor.equip_turtle"]}'
      slot: 8
    Sound_EquipWolf:
      spell: sb-prepare-sound(args=["item.armor.equip_wolf", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Equip Wolf <gold>Sound", lore: ["<grey><italic>item.armor.equip_wolf"]}'
      slot: 9
    Sound_UnequipWolf:
      spell: sb-prepare-sound(args=["item.armor.unequip_wolf", "item_armor"])
      item: 'iron_chestplate{name: "<yellow>Unequip Wolf <gold>Sound", lore: ["<grey><italic>item.armor.unequip_wolf"]}'
      slot: 10
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-item-axe:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Axe <aqua>Sounds
  options:
    Sound_Scrape:
      spell: sb-prepare-sound(args=["item.axe.scrape", "item_axe"])
      item: 'iron_axe{name: "<yellow>Scrape <gold>Sound", lore: ["<grey><italic>item.axe.scrape"]}'
      slot: 0
    Sound_Strip:
      spell: sb-prepare-sound(args=["item.axe.strip", "item_axe"])
      item: 'iron_axe{name: "<yellow>Strip <gold>Sound", lore: ["<grey><italic>item.axe.strip"]}'
      slot: 1
    Sound_WaxOff:
      spell: sb-prepare-sound(args=["item.axe.wax_off", "item_axe"])
      item: 'iron_axe{name: "<yellow>Wax Off <gold>Sound", lore: ["<grey><italic>item.axe.wax_off"]}'
      slot: 2
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-bone_meal:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bone Meal <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.bone_meal.use", "item_bone_meal"])
      item: 'bone_meal{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.bone_meal.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-book:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Book <aqua>Sounds
  options:
    Sound_PageTurn:
      spell: sb-prepare-sound(args=["item.book.page_turn", "item_book"])
      item: 'book{name: "<yellow>Page Turn <gold>Sound", lore: ["<grey><italic>item.book.page_turn"]}'
      slot: 0
    Sound_Put:
      spell: sb-prepare-sound(args=["item.book.put", "item_book"])
      item: 'book{name: "<yellow>Put <gold>Sound", lore: ["<grey><italic>item.book.put"]}'
      slot: 1
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-bottle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bottle <aqua>Sounds
  options:
    Sound_Empty:
      spell: sb-prepare-sound(args=["item.bottle.empty", "item_bottle"])
      item: 'glass_bottle{name: "<yellow>Empty <gold>Sound", lore: ["<grey><italic>item.bottle.empty"]}'
      slot: 0
    Sound_Fill:
      spell: sb-prepare-sound(args=["item.bottle.fill", "item_bottle"])
      item: 'glass_bottle{name: "<yellow>Fill <gold>Sound", lore: ["<grey><italic>item.bottle.fill"]}'
      slot: 1
    Sound_FillDragonbreath:
      spell: sb-prepare-sound(args=["item.bottle.fill_dragonbreath", "item_bottle"])
      item: 'glass_bottle{name: "<yellow>Fill Dragonbreath <gold>Sound", lore: ["<grey><italic>item.bottle.fill_dragonbreath"]}'
      slot: 2
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-brush:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Brush <aqua>Sounds
  options:
    Brushing:
      spell: sb-item-brush-brushing
      item: 'brush{name: "<gold>Brushing Sounds"}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-brush-brushing:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Brushing <aqua>Sounds
  options:
    Sound_Generic:
      spell: sb-prepare-sound(args=["item.brush.brushing.generic", "item_brush_brushing"])
      item: 'brush{name: "<yellow>Generic <gold>Sound", lore: ["<grey><italic>item.brush.brushing.generic"]}'
      slot: 0
    Sound_Gravel:
      spell: sb-prepare-sound(args=["item.brush.brushing.gravel", "item_brush_brushing"])
      item: 'brush{name: "<yellow>Gravel <gold>Sound", lore: ["<grey><italic>item.brush.brushing.gravel"]}'
      slot: 1
    Sound_Sand:
      spell: sb-prepare-sound(args=["item.brush.brushing.sand", "item_brush_brushing"])
      item: 'brush{name: "<yellow>Sand <gold>Sound", lore: ["<grey><italic>item.brush.brushing.sand"]}'
      slot: 2
    Gravel:
      spell: sb-item-brush-brushing-gravel
      item: 'gravel{name: "<gold>Gravel Sounds"}'
      slot: 3
    Sand:
      spell: sb-item-brush-brushing-sand
      item: 'sand{name: "<gold>Sand Sounds"}'
      slot: 4
    Button_Back:
      spell: sb-item-brush
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-brush-brushing-gravel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Gravel <aqua>Sounds
  options:
    Sound_Complete:
      spell: sb-prepare-sound(args=["item.brush.brushing.gravel.complete", "item_brush_brushing_gravel"])
      item: 'gravel{name: "<yellow>Complete <gold>Sound", lore: ["<grey><italic>item.brush.brushing.gravel.complete"]}'
      slot: 0
    Button_Back:
      spell: sb-item-brush-brushing
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-brush-brushing-sand:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sand <aqua>Sounds
  options:
    Sound_Complete:
      spell: sb-prepare-sound(args=["item.brush.brushing.sand.complete", "item_brush_brushing_sand"])
      item: 'sand{name: "<yellow>Complete <gold>Sound", lore: ["<grey><italic>item.brush.brushing.sand.complete"]}'
      slot: 0
    Button_Back:
      spell: sb-item-brush-brushing
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-bucket:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bucket <aqua>Sounds
  options:
    Sound_Empty:
      spell: sb-prepare-sound(args=["item.bucket.empty", "item_bucket"])
      item: 'bucket{name: "<yellow>Empty <gold>Sound", lore: ["<grey><italic>item.bucket.empty"]}'
      slot: 0
    Sound_EmptyAxolotl:
      spell: sb-prepare-sound(args=["item.bucket.empty_axolotl", "item_bucket"])
      item: 'bucket{name: "<yellow>Empty Axolotl <gold>Sound", lore: ["<grey><italic>item.bucket.empty_axolotl"]}'
      slot: 1
    Sound_EmptyFish:
      spell: sb-prepare-sound(args=["item.bucket.empty_fish", "item_bucket"])
      item: 'bucket{name: "<yellow>Empty Fish <gold>Sound", lore: ["<grey><italic>item.bucket.empty_fish"]}'
      slot: 2
    Sound_EmptyLava:
      spell: sb-prepare-sound(args=["item.bucket.empty_lava", "item_bucket"])
      item: 'bucket{name: "<yellow>Empty Lava <gold>Sound", lore: ["<grey><italic>item.bucket.empty_lava"]}'
      slot: 3
    Sound_EmptyPowderSnow:
      spell: sb-prepare-sound(args=["item.bucket.empty_powder_snow", "item_bucket"])
      item: 'bucket{name: "<yellow>Empty Powder Snow <gold>Sound", lore: ["<grey><italic>item.bucket.empty_powder_snow"]}'
      slot: 4
    Sound_EmptyTadpole:
      spell: sb-prepare-sound(args=["item.bucket.empty_tadpole", "item_bucket"])
      item: 'bucket{name: "<yellow>Empty Tadpole <gold>Sound", lore: ["<grey><italic>item.bucket.empty_tadpole"]}'
      slot: 5
    Sound_Fill:
      spell: sb-prepare-sound(args=["item.bucket.fill", "item_bucket"])
      item: 'bucket{name: "<yellow>Fill <gold>Sound", lore: ["<grey><italic>item.bucket.fill"]}'
      slot: 6
    Sound_FillAxolotl:
      spell: sb-prepare-sound(args=["item.bucket.fill_axolotl", "item_bucket"])
      item: 'bucket{name: "<yellow>Fill Axolotl <gold>Sound", lore: ["<grey><italic>item.bucket.fill_axolotl"]}'
      slot: 7
    Sound_FillFish:
      spell: sb-prepare-sound(args=["item.bucket.fill_fish", "item_bucket"])
      item: 'bucket{name: "<yellow>Fill Fish <gold>Sound", lore: ["<grey><italic>item.bucket.fill_fish"]}'
      slot: 8
    Sound_FillLava:
      spell: sb-prepare-sound(args=["item.bucket.fill_lava", "item_bucket"])
      item: 'bucket{name: "<yellow>Fill Lava <gold>Sound", lore: ["<grey><italic>item.bucket.fill_lava"]}'
      slot: 9
    Sound_FillPowderSnow:
      spell: sb-prepare-sound(args=["item.bucket.fill_powder_snow", "item_bucket"])
      item: 'bucket{name: "<yellow>Fill Powder Snow <gold>Sound", lore: ["<grey><italic>item.bucket.fill_powder_snow"]}'
      slot: 10
    Sound_FillTadpole:
      spell: sb-prepare-sound(args=["item.bucket.fill_tadpole", "item_bucket"])
      item: 'bucket{name: "<yellow>Fill Tadpole <gold>Sound", lore: ["<grey><italic>item.bucket.fill_tadpole"]}'
      slot: 11
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 22
sb-item-bundle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Bundle <aqua>Sounds
  options:
    Sound_DropContents:
      spell: sb-prepare-sound(args=["item.bundle.drop_contents", "item_bundle"])
      item: 'bundle{name: "<yellow>Drop Contents <gold>Sound", lore: ["<grey><italic>item.bundle.drop_contents"]}'
      slot: 0
    Sound_Insert:
      spell: sb-prepare-sound(args=["item.bundle.insert", "item_bundle"])
      item: 'bundle{name: "<yellow>Insert <gold>Sound", lore: ["<grey><italic>item.bundle.insert"]}'
      slot: 1
    Sound_InsertFail:
      spell: sb-prepare-sound(args=["item.bundle.insert_fail", "item_bundle"])
      item: 'bundle{name: "<yellow>Insert Fail <gold>Sound", lore: ["<grey><italic>item.bundle.insert_fail"]}'
      slot: 2
    Sound_RemoveOne:
      spell: sb-prepare-sound(args=["item.bundle.remove_one", "item_bundle"])
      item: 'bundle{name: "<yellow>Remove One <gold>Sound", lore: ["<grey><italic>item.bundle.remove_one"]}'
      slot: 3
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-chorus_fruit:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Chorus Fruit <aqua>Sounds
  options:
    Sound_Teleport:
      spell: sb-prepare-sound(args=["item.chorus_fruit.teleport", "item_chorus_fruit"])
      item: 'chorus_fruit{name: "<yellow>Teleport <gold>Sound", lore: ["<grey><italic>item.chorus_fruit.teleport"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-crop:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Crop <aqua>Sounds
  options:
    Sound_Plant:
      spell: sb-prepare-sound(args=["item.crop.plant", "item_crop"])
      item: 'wheat_seeds{name: "<yellow>Plant <gold>Sound", lore: ["<grey><italic>item.crop.plant"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-crossbow:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Crossbow <aqua>Sounds
  options:
    Sound_Hit:
      spell: sb-prepare-sound(args=["item.crossbow.hit", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>item.crossbow.hit"]}'
      slot: 0
    Sound_LoadingEnd:
      spell: sb-prepare-sound(args=["item.crossbow.loading_end", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Loading End <gold>Sound", lore: ["<grey><italic>item.crossbow.loading_end"]}'
      slot: 1
    Sound_LoadingMiddle:
      spell: sb-prepare-sound(args=["item.crossbow.loading_middle", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Loading Middle <gold>Sound", lore: ["<grey><italic>item.crossbow.loading_middle"]}'
      slot: 2
    Sound_LoadingStart:
      spell: sb-prepare-sound(args=["item.crossbow.loading_start", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Loading Start <gold>Sound", lore: ["<grey><italic>item.crossbow.loading_start"]}'
      slot: 3
    Sound_QuickCharge1:
      spell: sb-prepare-sound(args=["item.crossbow.quick_charge_1", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Quick Charge 1 <gold>Sound", lore: ["<grey><italic>item.crossbow.quick_charge_1"]}'
      slot: 4
    Sound_QuickCharge2:
      spell: sb-prepare-sound(args=["item.crossbow.quick_charge_2", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Quick Charge 2 <gold>Sound", lore: ["<grey><italic>item.crossbow.quick_charge_2"]}'
      slot: 5
    Sound_QuickCharge3:
      spell: sb-prepare-sound(args=["item.crossbow.quick_charge_3", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Quick Charge 3 <gold>Sound", lore: ["<grey><italic>item.crossbow.quick_charge_3"]}'
      slot: 6
    Sound_Shoot:
      spell: sb-prepare-sound(args=["item.crossbow.shoot", "item_crossbow"])
      item: 'crossbow{name: "<yellow>Shoot <gold>Sound", lore: ["<grey><italic>item.crossbow.shoot"]}'
      slot: 7
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-dye:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Dye <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.dye.use", "item_dye"])
      item: 'cyan_dye{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.dye.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-elytra:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Elytra <aqua>Sounds
  options:
    Sound_Flying:
      spell: sb-prepare-sound(args=["item.elytra.flying", "item_elytra"])
      item: 'elytra{name: "<yellow>Flying <gold>Sound", lore: ["<grey><italic>item.elytra.flying"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-firecharge:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Firecharge <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.firecharge.use", "item_firecharge"])
      item: 'fire_charge{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.firecharge.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-flintandsteel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Flintandsteel <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.flintandsteel.use", "item_flintandsteel"])
      item: 'flint_and_steel{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.flintandsteel.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-glow_ink_sac:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Glow Ink Sac <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.glow_ink_sac.use", "item_glow_ink_sac"])
      item: 'glow_ink_sac{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.glow_ink_sac.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-goat_horn:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Goat Horn <aqua>Sounds
  options:
    Sound:
      spell: sb-item-goat_horn-sound
      item: 'goat_horn{name: "<gold>Sound Sounds"}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-goat_horn-sound:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Sound <aqua>Sounds
  options:
    Sound_0:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.0", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>0 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.0"]}'
      slot: 0
    Sound_1:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.1", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>1 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.1"]}'
      slot: 1
    Sound_2:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.2", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>2 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.2"]}'
      slot: 2
    Sound_3:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.3", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>3 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.3"]}'
      slot: 3
    Sound_4:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.4", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>4 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.4"]}'
      slot: 4
    Sound_5:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.5", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>5 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.5"]}'
      slot: 5
    Sound_6:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.6", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>6 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.6"]}'
      slot: 6
    Sound_7:
      spell: sb-prepare-sound(args=["item.goat_horn.sound.7", "item_goat_horn_sound"])
      item: 'goat_horn{name: "<yellow>7 <gold>Sound", lore: ["<grey><italic>item.goat_horn.sound.7"]}'
      slot: 7
    Button_Back:
      spell: sb-item-goat_horn
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-hoe:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Hoe <aqua>Sounds
  options:
    Sound_Till:
      spell: sb-prepare-sound(args=["item.hoe.till", "item_hoe"])
      item: 'wooden_hoe{name: "<yellow>Till <gold>Sound", lore: ["<grey><italic>item.hoe.till"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-honey_bottle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Honey Bottle <aqua>Sounds
  options:
    Sound_Drink:
      spell: sb-prepare-sound(args=["item.honey_bottle.drink", "item_honey_bottle"])
      item: 'honey_bottle{name: "<yellow>Drink <gold>Sound", lore: ["<grey><italic>item.honey_bottle.drink"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-honeycomb:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Honeycomb <aqua>Sounds
  options:
    Sound_WaxON:
      spell: sb-prepare-sound(args=["item.honeycomb.wax_on", "item_honeycomb"])
      item: 'honeycomb{name: "<yellow>Wax ON <gold>Sound", lore: ["<grey><italic>item.honeycomb.wax_on"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-ink_sac:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ink Sac <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.ink_sac.use", "item_ink_sac"])
      item: 'ink_sac{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.ink_sac.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-lodestone_compass:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Lodestone Compass <aqua>Sounds
  options:
    Sound_Lock:
      spell: sb-prepare-sound(args=["item.lodestone_compass.lock", "item_lodestone_compass"])
      item: 'compass{name: "<yellow>Lock <gold>Sound", lore: ["<grey><italic>item.lodestone_compass.lock"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-mace:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Mace <aqua>Sounds
  options:
    Sound_SmashAir:
      spell: sb-prepare-sound(args=["item.mace.smash_air", "item_mace"])
      item: 'stone_axe{name: "<yellow>Smash Air <gold>Sound", lore: ["<grey><italic>item.mace.smash_air"]}'
      slot: 0
    Sound_SmashGround:
      spell: sb-prepare-sound(args=["item.mace.smash_ground", "item_mace"])
      item: 'stone_axe{name: "<yellow>Smash Ground <gold>Sound", lore: ["<grey><italic>item.mace.smash_ground"]}'
      slot: 1
    Sound_SmashGroundHeavy:
      spell: sb-prepare-sound(args=["item.mace.smash_ground_heavy", "item_mace"])
      item: 'stone_axe{name: "<yellow>Smash Ground Heavy <gold>Sound", lore: ["<grey><italic>item.mace.smash_ground_heavy"]}'
      slot: 2
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-nether_wart:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether Wart <aqua>Sounds
  options:
    Sound_Plant:
      spell: sb-prepare-sound(args=["item.nether_wart.plant", "item_nether_wart"])
      item: 'nether_wart{name: "<yellow>Plant <gold>Sound", lore: ["<grey><italic>item.nether_wart.plant"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-ominous_bottle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Ominous Bottle <aqua>Sounds
  options:
    Sound_Dispose:
      spell: sb-prepare-sound(args=["item.ominous_bottle.dispose", "item_ominous_bottle"])
      item: 'honey_bottle{name: "<yellow>Dispose <gold>Sound", lore: ["<grey><italic>item.ominous_bottle.dispose"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-shield:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Shield <aqua>Sounds
  options:
    Sound_Block:
      spell: sb-prepare-sound(args=["item.shield.block", "item_shield"])
      item: 'shield{name: "<yellow>Block <gold>Sound", lore: ["<grey><italic>item.shield.block"]}'
      slot: 0
    Sound_Break:
      spell: sb-prepare-sound(args=["item.shield.break", "item_shield"])
      item: 'shield{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>item.shield.break"]}'
      slot: 1
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-shovel:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Shovel <aqua>Sounds
  options:
    Sound_Flatten:
      spell: sb-prepare-sound(args=["item.shovel.flatten", "item_shovel"])
      item: 'wooden_shovel{name: "<yellow>Flatten <gold>Sound", lore: ["<grey><italic>item.shovel.flatten"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-spyglass:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Spyglass <aqua>Sounds
  options:
    Sound_StopUsing:
      spell: sb-prepare-sound(args=["item.spyglass.stop_using", "item_spyglass"])
      item: 'spyglass{name: "<yellow>Stop Using <gold>Sound", lore: ["<grey><italic>item.spyglass.stop_using"]}'
      slot: 0
    Sound_Use:
      spell: sb-prepare-sound(args=["item.spyglass.use", "item_spyglass"])
      item: 'spyglass{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.spyglass.use"]}'
      slot: 1
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-totem:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Totem <aqua>Sounds
  options:
    Sound_Use:
      spell: sb-prepare-sound(args=["item.totem.use", "item_totem"])
      item: 'totem_of_undying{name: "<yellow>Use <gold>Sound", lore: ["<grey><italic>item.totem.use"]}'
      slot: 0
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-trident:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Trident <aqua>Sounds
  options:
    Sound_Hit:
      spell: sb-prepare-sound(args=["item.trident.hit", "item_trident"])
      item: 'trident{name: "<yellow>Hit <gold>Sound", lore: ["<grey><italic>item.trident.hit"]}'
      slot: 0
    Sound_HitGround:
      spell: sb-prepare-sound(args=["item.trident.hit_ground", "item_trident"])
      item: 'trident{name: "<yellow>Hit Ground <gold>Sound", lore: ["<grey><italic>item.trident.hit_ground"]}'
      slot: 1
    Sound_Return:
      spell: sb-prepare-sound(args=["item.trident.return", "item_trident"])
      item: 'trident{name: "<yellow>Return <gold>Sound", lore: ["<grey><italic>item.trident.return"]}'
      slot: 2
    Sound_Riptide1:
      spell: sb-prepare-sound(args=["item.trident.riptide_1", "item_trident"])
      item: 'trident{name: "<yellow>Riptide 1 <gold>Sound", lore: ["<grey><italic>item.trident.riptide_1"]}'
      slot: 3
    Sound_Riptide2:
      spell: sb-prepare-sound(args=["item.trident.riptide_2", "item_trident"])
      item: 'trident{name: "<yellow>Riptide 2 <gold>Sound", lore: ["<grey><italic>item.trident.riptide_2"]}'
      slot: 4
    Sound_Riptide3:
      spell: sb-prepare-sound(args=["item.trident.riptide_3", "item_trident"])
      item: 'trident{name: "<yellow>Riptide 3 <gold>Sound", lore: ["<grey><italic>item.trident.riptide_3"]}'
      slot: 5
    Sound_Throw:
      spell: sb-prepare-sound(args=["item.trident.throw", "item_trident"])
      item: 'trident{name: "<yellow>Throw <gold>Sound", lore: ["<grey><italic>item.trident.throw"]}'
      slot: 6
    Sound_Thunder:
      spell: sb-prepare-sound(args=["item.trident.thunder", "item_trident"])
      item: 'trident{name: "<yellow>Thunder <gold>Sound", lore: ["<grey><italic>item.trident.thunder"]}'
      slot: 7
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-item-wolf_armor:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Wolf Armor <aqua>Sounds
  options:
    Sound_Break:
      spell: sb-prepare-sound(args=["item.wolf_armor.break", "item_wolf_armor"])
      item: 'leather_horse_armor{name: "<yellow>Break <gold>Sound", lore: ["<grey><italic>item.wolf_armor.break"]}'
      slot: 0
    Sound_Crack:
      spell: sb-prepare-sound(args=["item.wolf_armor.crack", "item_wolf_armor"])
      item: 'leather_horse_armor{name: "<yellow>Crack <gold>Sound", lore: ["<grey><italic>item.wolf_armor.crack"]}'
      slot: 1
    Sound_Damage:
      spell: sb-prepare-sound(args=["item.wolf_armor.damage", "item_wolf_armor"])
      item: 'leather_horse_armor{name: "<yellow>Damage <gold>Sound", lore: ["<grey><italic>item.wolf_armor.damage"]}'
      slot: 2
    Sound_Repair:
      spell: sb-prepare-sound(args=["item.wolf_armor.repair", "item_wolf_armor"])
      item: 'leather_horse_armor{name: "<yellow>Repair <gold>Sound", lore: ["<grey><italic>item.wolf_armor.repair"]}'
      slot: 3
    Button_Back:
      spell: sb-item
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-music:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Music <aqua>Sounds
  options:
    Sound_Creative:
      spell: sb-prepare-sound(args=["music.creative", "music"])
      item: 'jukebox{name: "<yellow>Creative <gold>Sound", lore: ["<grey><italic>music.creative"]}'
      slot: 0
    Sound_Credits:
      spell: sb-prepare-sound(args=["music.credits", "music"])
      item: 'jukebox{name: "<yellow>Credits <gold>Sound", lore: ["<grey><italic>music.credits"]}'
      slot: 1
    Sound_Dragon:
      spell: sb-prepare-sound(args=["music.dragon", "music"])
      item: 'jukebox{name: "<yellow>Dragon <gold>Sound", lore: ["<grey><italic>music.dragon"]}'
      slot: 2
    Sound_End:
      spell: sb-prepare-sound(args=["music.end", "music"])
      item: 'jukebox{name: "<yellow>End <gold>Sound", lore: ["<grey><italic>music.end"]}'
      slot: 3
    Sound_Game:
      spell: sb-prepare-sound(args=["music.game", "music"])
      item: 'jukebox{name: "<yellow>Game <gold>Sound", lore: ["<grey><italic>music.game"]}'
      slot: 4
    Sound_Menu:
      spell: sb-prepare-sound(args=["music.menu", "music"])
      item: 'jukebox{name: "<yellow>Menu <gold>Sound", lore: ["<grey><italic>music.menu"]}'
      slot: 5
    Sound_UnderWater:
      spell: sb-prepare-sound(args=["music.under_water", "music"])
      item: 'jukebox{name: "<yellow>Under Water <gold>Sound", lore: ["<grey><italic>music.under_water"]}'
      slot: 6
    Nether:
      spell: sb-music-nether
      item: 'music_disc_pigstep{name: "<gold>Nether Sounds"}'
      slot: 7
    Overworld:
      spell: sb-music-overworld
      item: 'grass_block{name: "<gold>Overworld Sounds"}'
      slot: 8
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-music-nether:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Nether <aqua>Sounds
  options:
    Sound_BasaltDeltas:
      spell: sb-prepare-sound(args=["music.nether.basalt_deltas", "music_nether"])
      item: 'music_disc_pigstep{name: "<yellow>Basalt Deltas <gold>Sound", lore: ["<grey><italic>music.nether.basalt_deltas"]}'
      slot: 0
    Sound_CrimsonForest:
      spell: sb-prepare-sound(args=["music.nether.crimson_forest", "music_nether"])
      item: 'music_disc_pigstep{name: "<yellow>Crimson Forest <gold>Sound", lore: ["<grey><italic>music.nether.crimson_forest"]}'
      slot: 1
    Sound_NetherWastes:
      spell: sb-prepare-sound(args=["music.nether.nether_wastes", "music_nether"])
      item: 'music_disc_pigstep{name: "<yellow>Nether Wastes <gold>Sound", lore: ["<grey><italic>music.nether.nether_wastes"]}'
      slot: 2
    Sound_SoulSandValley:
      spell: sb-prepare-sound(args=["music.nether.soul_sand_valley", "music_nether"])
      item: 'music_disc_pigstep{name: "<yellow>Soul Sand Valley <gold>Sound", lore: ["<grey><italic>music.nether.soul_sand_valley"]}'
      slot: 3
    Sound_WarpedForest:
      spell: sb-prepare-sound(args=["music.nether.warped_forest", "music_nether"])
      item: 'music_disc_pigstep{name: "<yellow>Warped Forest <gold>Sound", lore: ["<grey><italic>music.nether.warped_forest"]}'
      slot: 4
    Button_Back:
      spell: sb-music
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-music-overworld:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Overworld <aqua>Sounds
  options:
    Sound_Badlands:
      spell: sb-prepare-sound(args=["music.overworld.badlands", "music_overworld"])
      item: 'grass_block{name: "<yellow>Badlands <gold>Sound", lore: ["<grey><italic>music.overworld.badlands"]}'
      slot: 0
    Sound_BambooJungle:
      spell: sb-prepare-sound(args=["music.overworld.bamboo_jungle", "music_overworld"])
      item: 'grass_block{name: "<yellow>Bamboo Jungle <gold>Sound", lore: ["<grey><italic>music.overworld.bamboo_jungle"]}'
      slot: 1
    Sound_CherryGrove:
      spell: sb-prepare-sound(args=["music.overworld.cherry_grove", "music_overworld"])
      item: 'grass_block{name: "<yellow>Cherry Grove <gold>Sound", lore: ["<grey><italic>music.overworld.cherry_grove"]}'
      slot: 2
    Sound_DeepDark:
      spell: sb-prepare-sound(args=["music.overworld.deep_dark", "music_overworld"])
      item: 'grass_block{name: "<yellow>Deep Dark <gold>Sound", lore: ["<grey><italic>music.overworld.deep_dark"]}'
      slot: 3
    Sound_Desert:
      spell: sb-prepare-sound(args=["music.overworld.desert", "music_overworld"])
      item: 'grass_block{name: "<yellow>Desert <gold>Sound", lore: ["<grey><italic>music.overworld.desert"]}'
      slot: 4
    Sound_DripstoneCaves:
      spell: sb-prepare-sound(args=["music.overworld.dripstone_caves", "music_overworld"])
      item: 'grass_block{name: "<yellow>Dripstone Caves <gold>Sound", lore: ["<grey><italic>music.overworld.dripstone_caves"]}'
      slot: 5
    Sound_FlowerForest:
      spell: sb-prepare-sound(args=["music.overworld.flower_forest", "music_overworld"])
      item: 'grass_block{name: "<yellow>Flower Forest <gold>Sound", lore: ["<grey><italic>music.overworld.flower_forest"]}'
      slot: 6
    Sound_Forest:
      spell: sb-prepare-sound(args=["music.overworld.forest", "music_overworld"])
      item: 'grass_block{name: "<yellow>Forest <gold>Sound", lore: ["<grey><italic>music.overworld.forest"]}'
      slot: 7
    Sound_FrozenPeaks:
      spell: sb-prepare-sound(args=["music.overworld.frozen_peaks", "music_overworld"])
      item: 'grass_block{name: "<yellow>Frozen Peaks <gold>Sound", lore: ["<grey><italic>music.overworld.frozen_peaks"]}'
      slot: 8
    Sound_Grove:
      spell: sb-prepare-sound(args=["music.overworld.grove", "music_overworld"])
      item: 'grass_block{name: "<yellow>Grove <gold>Sound", lore: ["<grey><italic>music.overworld.grove"]}'
      slot: 9
    Sound_JaggedPeaks:
      spell: sb-prepare-sound(args=["music.overworld.jagged_peaks", "music_overworld"])
      item: 'grass_block{name: "<yellow>Jagged Peaks <gold>Sound", lore: ["<grey><italic>music.overworld.jagged_peaks"]}'
      slot: 10
    Sound_Jungle:
      spell: sb-prepare-sound(args=["music.overworld.jungle", "music_overworld"])
      item: 'grass_block{name: "<yellow>Jungle <gold>Sound", lore: ["<grey><italic>music.overworld.jungle"]}'
      slot: 11
    Sound_LushCaves:
      spell: sb-prepare-sound(args=["music.overworld.lush_caves", "music_overworld"])
      item: 'grass_block{name: "<yellow>Lush Caves <gold>Sound", lore: ["<grey><italic>music.overworld.lush_caves"]}'
      slot: 12
    Sound_Meadow:
      spell: sb-prepare-sound(args=["music.overworld.meadow", "music_overworld"])
      item: 'grass_block{name: "<yellow>Meadow <gold>Sound", lore: ["<grey><italic>music.overworld.meadow"]}'
      slot: 13
    Sound_OldGrowthTaiga:
      spell: sb-prepare-sound(args=["music.overworld.old_growth_taiga", "music_overworld"])
      item: 'grass_block{name: "<yellow>Old Growth Taiga <gold>Sound", lore: ["<grey><italic>music.overworld.old_growth_taiga"]}'
      slot: 14
    Sound_SnowySlopes:
      spell: sb-prepare-sound(args=["music.overworld.snowy_slopes", "music_overworld"])
      item: 'grass_block{name: "<yellow>Snowy Slopes <gold>Sound", lore: ["<grey><italic>music.overworld.snowy_slopes"]}'
      slot: 15
    Sound_SparseJungle:
      spell: sb-prepare-sound(args=["music.overworld.sparse_jungle", "music_overworld"])
      item: 'grass_block{name: "<yellow>Sparse Jungle <gold>Sound", lore: ["<grey><italic>music.overworld.sparse_jungle"]}'
      slot: 16
    Sound_StonyPeaks:
      spell: sb-prepare-sound(args=["music.overworld.stony_peaks", "music_overworld"])
      item: 'grass_block{name: "<yellow>Stony Peaks <gold>Sound", lore: ["<grey><italic>music.overworld.stony_peaks"]}'
      slot: 17
    Sound_Swamp:
      spell: sb-prepare-sound(args=["music.overworld.swamp", "music_overworld"])
      item: 'grass_block{name: "<yellow>Swamp <gold>Sound", lore: ["<grey><italic>music.overworld.swamp"]}'
      slot: 18
    Button_Back:
      spell: sb-music
      item: 'book{name: "<gold>Back"}'
      slot: 31
sb-music_disc:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Music Disc <aqua>Sounds
  options:
    Sound_11:
      spell: sb-prepare-sound(args=["music_disc.11", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>11 <gold>Sound", lore: ["<grey><italic>music_disc.11"]}'
      slot: 0
    Sound_13:
      spell: sb-prepare-sound(args=["music_disc.13", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>13 <gold>Sound", lore: ["<grey><italic>music_disc.13"]}'
      slot: 1
    Sound_5:
      spell: sb-prepare-sound(args=["music_disc.5", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>5 <gold>Sound", lore: ["<grey><italic>music_disc.5"]}'
      slot: 2
    Sound_Blocks:
      spell: sb-prepare-sound(args=["music_disc.blocks", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Blocks <gold>Sound", lore: ["<grey><italic>music_disc.blocks"]}'
      slot: 3
    Sound_Cat:
      spell: sb-prepare-sound(args=["music_disc.cat", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Cat <gold>Sound", lore: ["<grey><italic>music_disc.cat"]}'
      slot: 4
    Sound_Chirp:
      spell: sb-prepare-sound(args=["music_disc.chirp", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Chirp <gold>Sound", lore: ["<grey><italic>music_disc.chirp"]}'
      slot: 5
    Sound_Creator:
      spell: sb-prepare-sound(args=["music_disc.creator", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Creator <gold>Sound", lore: ["<grey><italic>music_disc.creator"]}'
      slot: 6
    Sound_CreatorMusicBox:
      spell: sb-prepare-sound(args=["music_disc.creator_music_box", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Creator Music Box <gold>Sound", lore: ["<grey><italic>music_disc.creator_music_box"]}'
      slot: 7
    Sound_Far:
      spell: sb-prepare-sound(args=["music_disc.far", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Far <gold>Sound", lore: ["<grey><italic>music_disc.far"]}'
      slot: 8
    Sound_Mall:
      spell: sb-prepare-sound(args=["music_disc.mall", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Mall <gold>Sound", lore: ["<grey><italic>music_disc.mall"]}'
      slot: 9
    Sound_Mellohi:
      spell: sb-prepare-sound(args=["music_disc.mellohi", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Mellohi <gold>Sound", lore: ["<grey><italic>music_disc.mellohi"]}'
      slot: 10
    Sound_Otherside:
      spell: sb-prepare-sound(args=["music_disc.otherside", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Otherside <gold>Sound", lore: ["<grey><italic>music_disc.otherside"]}'
      slot: 11
    Sound_Pigstep:
      spell: sb-prepare-sound(args=["music_disc.pigstep", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Pigstep <gold>Sound", lore: ["<grey><italic>music_disc.pigstep"]}'
      slot: 12
    Sound_Precipice:
      spell: sb-prepare-sound(args=["music_disc.precipice", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Precipice <gold>Sound", lore: ["<grey><italic>music_disc.precipice"]}'
      slot: 13
    Sound_Relic:
      spell: sb-prepare-sound(args=["music_disc.relic", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Relic <gold>Sound", lore: ["<grey><italic>music_disc.relic"]}'
      slot: 14
    Sound_Stal:
      spell: sb-prepare-sound(args=["music_disc.stal", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Stal <gold>Sound", lore: ["<grey><italic>music_disc.stal"]}'
      slot: 15
    Sound_Strad:
      spell: sb-prepare-sound(args=["music_disc.strad", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Strad <gold>Sound", lore: ["<grey><italic>music_disc.strad"]}'
      slot: 16
    Sound_Wait:
      spell: sb-prepare-sound(args=["music_disc.wait", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Wait <gold>Sound", lore: ["<grey><italic>music_disc.wait"]}'
      slot: 17
    Sound_Ward:
      spell: sb-prepare-sound(args=["music_disc.ward", "music_disc"])
      item: 'music_disc_pigstep{name: "<yellow>Ward <gold>Sound", lore: ["<grey><italic>music_disc.ward"]}'
      slot: 18
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 31
sb-particle:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Particle <aqua>Sounds
  options:
    Sound_SoulEscape:
      spell: sb-prepare-sound(args=["particle.soul_escape", "particle"])
      item: 'blaze_powder{name: "<yellow>Soul Escape <gold>Sound", lore: ["<grey><italic>particle.soul_escape"]}'
      slot: 0
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>UI <aqua>Sounds
  options:
    Button:
      spell: sb-ui-button
      item: 'stone_button{name: "<gold>Button Sounds"}'
      slot: 0
    CartographyTable:
      spell: sb-ui-cartography_table
      item: 'cartography_table{name: "<gold>Cartography Table Sounds"}'
      slot: 1
    Hud:
      spell: sb-ui-hud
      item: 'oak_hanging_sign{name: "<gold>Hud Sounds"}'
      slot: 2
    Loom:
      spell: sb-ui-loom
      item: 'loom{name: "<gold>Loom Sounds"}'
      slot: 3
    Stonecutter:
      spell: sb-ui-stonecutter
      item: 'stonecutter{name: "<gold>Stonecutter Sounds"}'
      slot: 4
    Toast:
      spell: sb-ui-toast
      item: 'name_tag{name: "<gold>Toast Sounds"}'
      slot: 5
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui-button:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Button <aqua>Sounds
  options:
    Sound_Click:
      spell: sb-prepare-sound(args=["ui.button.click", "ui_button"])
      item: 'stone_button{name: "<yellow>Click <gold>Sound", lore: ["<grey><italic>ui.button.click"]}'
      slot: 0
    Button_Back:
      spell: sb-ui
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui-cartography_table:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Cartography Table <aqua>Sounds
  options:
    Sound_TakeResult:
      spell: sb-prepare-sound(args=["ui.cartography_table.take_result", "ui_cartography_table"])
      item: 'cartography_table{name: "<yellow>Take Result <gold>Sound", lore: ["<grey><italic>ui.cartography_table.take_result"]}'
      slot: 0
    Button_Back:
      spell: sb-ui
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui-hud:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Hud <aqua>Sounds
  options:
    Sound_BubblePop:
      spell: sb-prepare-sound(args=["ui.hud.bubble_pop", "ui_hud"])
      item: 'oak_hanging_sign{name: "<yellow>Bubble Pop <gold>Sound", lore: ["<grey><italic>ui.hud.bubble_pop"]}'
      slot: 0
    Button_Back:
      spell: sb-ui
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui-loom:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Loom <aqua>Sounds
  options:
    Sound_SelectPattern:
      spell: sb-prepare-sound(args=["ui.loom.select_pattern", "ui_loom"])
      item: 'loom{name: "<yellow>Select Pattern <gold>Sound", lore: ["<grey><italic>ui.loom.select_pattern"]}'
      slot: 0
    Sound_TakeResult:
      spell: sb-prepare-sound(args=["ui.loom.take_result", "ui_loom"])
      item: 'loom{name: "<yellow>Take Result <gold>Sound", lore: ["<grey><italic>ui.loom.take_result"]}'
      slot: 1
    Button_Back:
      spell: sb-ui
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui-stonecutter:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Stonecutter <aqua>Sounds
  options:
    Sound_SelectRecipe:
      spell: sb-prepare-sound(args=["ui.stonecutter.select_recipe", "ui_stonecutter"])
      item: 'stonecutter{name: "<yellow>Select Recipe <gold>Sound", lore: ["<grey><italic>ui.stonecutter.select_recipe"]}'
      slot: 0
    Sound_TakeResult:
      spell: sb-prepare-sound(args=["ui.stonecutter.take_result", "ui_stonecutter"])
      item: 'stonecutter{name: "<yellow>Take Result <gold>Sound", lore: ["<grey><italic>ui.stonecutter.take_result"]}'
      slot: 1
    Button_Back:
      spell: sb-ui
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-ui-toast:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Toast <aqua>Sounds
  options:
    Sound_ChallengeComplete:
      spell: sb-prepare-sound(args=["ui.toast.challenge_complete", "ui_toast"])
      item: 'name_tag{name: "<yellow>Challenge Complete <gold>Sound", lore: ["<grey><italic>ui.toast.challenge_complete"]}'
      slot: 0
    Sound_IN:
      spell: sb-prepare-sound(args=["ui.toast.in", "ui_toast"])
      item: 'name_tag{name: "<yellow>IN <gold>Sound", lore: ["<grey><italic>ui.toast.in"]}'
      slot: 1
    Sound_Out:
      spell: sb-prepare-sound(args=["ui.toast.out", "ui_toast"])
      item: 'name_tag{name: "<yellow>Out <gold>Sound", lore: ["<grey><italic>ui.toast.out"]}'
      slot: 2
    Button_Back:
      spell: sb-ui
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-weather:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Weather <aqua>Sounds
  options:
    Sound_Rain:
      spell: sb-prepare-sound(args=["weather.rain", "weather"])
      item: 'snowball{name: "<yellow>Rain <gold>Sound", lore: ["<grey><italic>weather.rain"]}'
      slot: 0
    Rain:
      spell: sb-weather-rain
      item: 'water_bucket{name: "<gold>Rain Sounds"}'
      slot: 1
    Button_Back:
      spell: sb
      item: 'book{name: "<gold>Back"}'
      slot: 13
sb-weather-rain:
  spell-class: .MenuSpell
  helper-spell: true
  tags:
    - NotSilenceable
  delay: 1
  stay-open-non-option: true
  title: <blue>Rain <aqua>Sounds
  options:
    Sound_Above:
      spell: sb-prepare-sound(args=["weather.rain.above", "weather_rain"])
      item: 'water_bucket{name: "<yellow>Above <gold>Sound", lore: ["<grey><italic>weather.rain.above"]}'
      slot: 0
    Button_Back:
      spell: sb-weather
      item: 'book{name: "<gold>Back"}'
      slot: 13
